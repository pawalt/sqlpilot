<t>CREATE TABLE BioinformaticsData (id INT PRIMARY KEY, sequence VARCHAR(255), organism VARCHAR(100), gene_name VARCHAR(100))</t><stat>TRUNCATE TABLE BioinformaticsData;</stat><divider><t>CREATE TABLE BioinformaticsData (id INT PRIMARY KEY, sequence VARCHAR(255), organism VARCHAR(100), gene_name VARCHAR(100))</t><stat>truncate table bioinformaticsdata;</stat><divider><t>CREATE TABLE Genes (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT)

CREATE TABLE Proteins (id INT PRIMARY KEY, gene_id INT, sequence TEXT, FOREIGN KEY (gene_id) REFERENCES Genes(id))</t><stat>TRUNCATE TABLE Genes</stat><divider><t>CREATE TABLE Genes (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT)

CREATE TABLE Proteins (id INT PRIMARY KEY, gene_id INT, sequence TEXT, FOREIGN KEY (gene_id) REFERENCES Genes(id))</t><stat>truncate table genes</stat><divider><t>CREATE TABLE Proteins (id INT PRIMARY KEY, gene_id INT, sequence TEXT, FOREIGN KEY (gene_id) REFERENCES Genes(id))

CREATE TABLE Genes (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT)</t><stat>TRUNCATE TABLE Genes</stat><divider><t>CREATE TABLE Proteins (id INT PRIMARY KEY, gene_id INT, sequence TEXT, FOREIGN KEY (gene_id) REFERENCES Genes(id))

CREATE TABLE Genes (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT)</t><stat>truncate table genes</stat><divider><t>CREATE TABLE Genes (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT)

CREATE TABLE Proteins (id INT PRIMARY KEY, gene_id INT, sequence TEXT, FOREIGN KEY (gene_id) REFERENCES Genes(id))</t><stat>TRUNCATE TABLE Proteins</stat><divider><t>CREATE TABLE Genes (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT)

CREATE TABLE Proteins (id INT PRIMARY KEY, gene_id INT, sequence TEXT, FOREIGN KEY (gene_id) REFERENCES Genes(id))</t><stat>truncate table proteins</stat><divider><t>CREATE TABLE Proteins (id INT PRIMARY KEY, gene_id INT, sequence TEXT, FOREIGN KEY (gene_id) REFERENCES Genes(id))

CREATE TABLE Genes (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT)</t><stat>TRUNCATE TABLE Proteins</stat><divider><t>CREATE TABLE Proteins (id INT PRIMARY KEY, gene_id INT, sequence TEXT, FOREIGN KEY (gene_id) REFERENCES Genes(id))

CREATE TABLE Genes (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT)</t><stat>truncate table proteins</stat><divider><t>CREATE TABLE Genes (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT)

CREATE TABLE Proteins (id INT PRIMARY KEY, gene_id INT, sequence TEXT, FOREIGN KEY (gene_id) REFERENCES Genes(id))</t><stat>DELETE FROM Genes; DELETE FROM Proteins</stat><divider><t>CREATE TABLE Genes (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT)

CREATE TABLE Proteins (id INT PRIMARY KEY, gene_id INT, sequence TEXT, FOREIGN KEY (gene_id) REFERENCES Genes(id))</t><stat>delete from genes; delete from proteins</stat><divider><t>CREATE TABLE Proteins (id INT PRIMARY KEY, gene_id INT, sequence TEXT, FOREIGN KEY (gene_id) REFERENCES Genes(id))

CREATE TABLE Genes (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT)</t><stat>DELETE FROM Genes; DELETE FROM Proteins</stat><divider><t>CREATE TABLE Proteins (id INT PRIMARY KEY, gene_id INT, sequence TEXT, FOREIGN KEY (gene_id) REFERENCES Genes(id))

CREATE TABLE Genes (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT)</t><stat>delete from genes; delete from proteins</stat><divider><t>CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));</t><stat>TRUNCATE TABLE Gene;</stat><divider><t>CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));</t><stat>truncate table gene;</stat><divider><t>CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));</t><stat>TRUNCATE TABLE Gene;</stat><divider><t>CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));</t><stat>truncate table gene;</stat><divider><t>CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));</t><stat>TRUNCATE TABLE Gene;</stat><divider><t>CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));</t><stat>truncate table gene;</stat><divider><t>CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);</t><stat>TRUNCATE TABLE Gene;</stat><divider><t>CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);</t><stat>truncate table gene;</stat><divider><t>CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));</t><stat>TRUNCATE TABLE Gene;</stat><divider><t>CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));</t><stat>truncate table gene;</stat><divider><t>CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);</t><stat>TRUNCATE TABLE Gene;</stat><divider><t>CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);</t><stat>truncate table gene;</stat><divider><t>CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));</t><stat>TRUNCATE TABLE Mutation;</stat><divider><t>CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));</t><stat>truncate table mutation;</stat><divider><t>CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));</t><stat>TRUNCATE TABLE Mutation;</stat><divider><t>CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));</t><stat>truncate table mutation;</stat><divider><t>CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));</t><stat>TRUNCATE TABLE Mutation;</stat><divider><t>CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));</t><stat>truncate table mutation;</stat><divider><t>CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);</t><stat>TRUNCATE TABLE Mutation;</stat><divider><t>CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);</t><stat>truncate table mutation;</stat><divider><t>CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));</t><stat>TRUNCATE TABLE Mutation;</stat><divider><t>CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));</t><stat>truncate table mutation;</stat><divider><t>CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);</t><stat>TRUNCATE TABLE Mutation;</stat><divider><t>CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);</t><stat>truncate table mutation;</stat><divider><t>CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));</t><stat>TRUNCATE TABLE Variant;</stat><divider><t>CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));</t><stat>truncate table variant;</stat><divider><t>CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));</t><stat>TRUNCATE TABLE Variant;</stat><divider><t>CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));</t><stat>truncate table variant;</stat><divider><t>CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));</t><stat>TRUNCATE TABLE Variant;</stat><divider><t>CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));</t><stat>truncate table variant;</stat><divider><t>CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);</t><stat>TRUNCATE TABLE Variant;</stat><divider><t>CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);</t><stat>truncate table variant;</stat><divider><t>CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));</t><stat>TRUNCATE TABLE Variant;</stat><divider><t>CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));</t><stat>truncate table variant;</stat><divider><t>CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);</t><stat>TRUNCATE TABLE Variant;</stat><divider><t>CREATE TABLE Variant (id INT PRIMARY KEY, gene_id INT, mutation_id INT, name VARCHAR(255), effect VARCHAR(255), FOREIGN KEY (gene_id) REFERENCES Gene(id), FOREIGN KEY (mutation_id) REFERENCES Mutation(id));

CREATE TABLE Mutation (id INT PRIMARY KEY, gene_id INT, type VARCHAR(50), position INT, FOREIGN KEY (gene_id) REFERENCES Gene(id));

CREATE TABLE Gene (id INT PRIMARY KEY, name VARCHAR(255), sequence TEXT);</t><stat>truncate table variant;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE genes;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table genes;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE transcripts;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table transcripts;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>TRUNCATE TABLE mutations;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, dob DATE NOT NULL, diagnosis VARCHAR(255) NOT NULL);

CREATE TABLE mutations (mutation_id INT PRIMARY KEY, transcript_id INT NOT NULL, mutation_type VARCHAR(10) NOT NULL, position INT NOT NULL, new_base CHAR(1) NOT NULL);

CREATE TABLE transcripts (transcript_id INT PRIMARY KEY, gene_id INT NOT NULL, transcript_name VARCHAR(255) NOT NULL, sequence TEXT NOT NULL);

CREATE TABLE genes (gene_id INT PRIMARY KEY, gene_name VARCHAR(255) NOT NULL, organism VARCHAR(255) NOT NULL, chromosome VARCHAR(10) NOT NULL);</t><stat>truncate table mutations;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE gene_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table gene_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE protein_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table protein_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);</t><stat>truncate table mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>TRUNCATE TABLE mutation_info;</stat><divider><t>CREATE TABLE sequence_info (
    sequence_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    sequence TEXT
);

CREATE TABLE phenotype_info (
    phenotype_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    phenotype_description TEXT
);

CREATE TABLE mutation_info (
    mutation_id INT PRIMARY KEY,
    gene_id INT REFERENCES gene_info(gene_id),
    mutation_description TEXT
);

CREATE TABLE protein_info (
    protein_id INT PRIMARY KEY,
    protein_name VARCHAR(50),
    gene_id INT REFERENCES gene_info(gene_id),
    length INT,
    sequence TEXT
);

CREATE TABLE gene_info (
    gene_id INT PRIMARY KEY,
    gene_name VARCHAR(50),
    chromosome VARCHAR(10),
    start_position INT,
    end_position INT
);</t><stat>truncate table mutation_info;</stat>