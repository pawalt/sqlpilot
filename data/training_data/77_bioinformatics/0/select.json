[
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name, sequencing_data FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT experiment_name FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT study_name FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, study_name FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, sequencing_data FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT experiment_name, study_name FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT experiment_name, sequencing_data FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT study_name, sequencing_data FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, sequencing_data FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, study_name, sequencing_data FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT experiment_name, study_name, sequencing_data FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name, sequencing_data FROM genetic_sequencing_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name, sequencing_data FROM genetic_sequencing_data WHERE experiment_name = 'Experiment 1';",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name, sequencing_data FROM genetic_sequencing_data WHERE study_name = 'Study 1';",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name, sequencing_data FROM genetic_sequencing_data WHERE id = 1 AND experiment_name = 'Experiment 1';",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name, sequencing_data FROM genetic_sequencing_data WHERE id = 1 OR experiment_name = 'Experiment 2';",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name, sequencing_data FROM genetic_sequencing_data ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT * FROM genetic_sequencing_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name FROM genetic_sequencing_data WHERE experiment_name LIKE '%covid%';",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, study_name FROM genetic_sequencing_data WHERE study_name = 'Genetics Study';",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, sequencing_data FROM genetic_sequencing_data WHERE JSON_LENGTH(sequencing_data) > 100;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name FROM genetic_sequencing_data WHERE experiment_name = 'Experiment1' AND study_name = 'Study1';",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT * FROM genetic_sequencing_data WHERE id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT DISTINCT study_name FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name FROM genetic_sequencing_data ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name FROM genetic_sequencing_data ORDER BY study_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name FROM genetic_sequencing_data LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name FROM genetic_sequencing_data WHERE experiment_name IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name FROM genetic_sequencing_data WHERE experiment_name LIKE 'Ex%';",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name FROM genetic_sequencing_data WHERE CAST(id AS VARCHAR) LIKE '%2%';",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name FROM genetic_sequencing_data WHERE JSON_CONTAINS(sequencing_data, '\"gene\": \"ACTG\"');",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT study_name) AS unique_studies FROM genetic_sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, study_name, JSON_EXTRACT(sequencing_data,'$.gene') AS gene FROM genetic_sequencing_data WHERE gene IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name, JSON_UNQUOTE(JSON_EXTRACT(sequencing_data,'$.gene')) AS gene FROM genetic_sequencing_data WHERE JSON_UNQUOTE(JSON_EXTRACT(sequencing_data,'$.gene')) = 'ACTG';",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name FROM genetic_sequencing_data WHERE JSON_EXTRACT(sequencing_data,'$.mutation') IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE genetic_sequencing_data (\n  id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  study_name VARCHAR(255),\n  sequencing_data JSON\n);\n\n### STATEMENT\n\nSELECT id, experiment_name, study_name FROM genetic_sequencing_data WHERE JSON_SEARCH(sequencing_data, 'one', 'CAACG', NULL, '$.*.gene') IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM experiments;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name FROM experiments;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_name, experiment_date FROM experiments;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT data_id, experiment_id FROM sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT sequence_data, sequence_date FROM sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiments.experiment_id, experiments.experiment_name, sequencing_data.sequence_data FROM experiments JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiments.experiment_id, experiments.experiment_name, sequencing_data.sequence_data FROM experiments INNER JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiments.experiment_id, experiments.experiment_name, sequencing_data.sequence_data FROM experiments LEFT JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiments.experiment_id, experiments.experiment_name, sequencing_data.sequence_data FROM experiments RIGHT JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM experiments WHERE experiment_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sequencing_data WHERE sequence_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM experiments ORDER BY experiment_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sequencing_data ORDER BY sequence_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM experiments LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sequencing_data LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM experiments;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM experiments WHERE experiment_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiments.experiment_id, experiments.experiment_name, sequencing_data.data_id FROM experiments JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, COUNT(data_id) AS data_count FROM experiments LEFT JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id GROUP BY experiment_id, experiment_name;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, sequence_data FROM experiments JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id WHERE sequence_date >= '2022-01-01' AND sequence_date <= '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_name, AVG(data_id) AS avg_data_id FROM experiments LEFT JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id GROUP BY experiment_name;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, sequence_date FROM experiments JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id WHERE sequence_date = '2022-02-01' AND sequence_data IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, COUNT(data_id) AS data_count FROM experiments LEFT JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id GROUP BY experiment_id, experiment_name HAVING data_count >= 5;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, sequence_data FROM experiments JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id ORDER BY sequence_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, sequence_date, sequence_data FROM experiments JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id WHERE sequence_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_name, COUNT(sequence_data) AS data_count FROM experiments JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id GROUP BY experiment_name HAVING data_count >= 3;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, sequence_data FROM experiments JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id WHERE experiment_name LIKE '%experiment%';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, sequence_data FROM experiments LEFT JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id WHERE sequence_data IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, sequence_data FROM experiments JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id WHERE sequence_data LIKE '%sequence%';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, sequence_data FROM experiments JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id WHERE sequence_date = (SELECT MAX(sequence_date) FROM sequencing_data) AND sequence_data IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, sequence_data FROM experiments JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id WHERE sequence_date = (SELECT MIN(sequence_date) FROM sequencing_data) AND sequence_data IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, sequence_date, sequence_data FROM experiments LEFT JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id WHERE experiments.experiment_id IN (SELECT experiment_id FROM experiments WHERE experiment_date = '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, sequence_data FROM experiments JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id WHERE sequence_date BETWEEN '2022-01-01' AND '2022-06-30' AND sequence_data LIKE '%sequence%';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, sequence_data FROM experiments JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id WHERE sequence_date >= '2022-01-01' AND sequence_date <= '2022-12-31' AND experiment_name NOT LIKE '%test%';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, sequence_data FROM experiments JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id WHERE sequence_date = (SELECT MIN(sequence_date) FROM sequencing_data GROUP BY experiment_id) AND sequence_data IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date DATE\n);\n\nCREATE TABLE sequencing_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    sequence_data BLOB,\n    sequence_date DATE\n);\n\n### STATEMENT\n\nSELECT experiments.experiment_id, experiments.experiment_name, sequencing_data.data_id FROM experiments JOIN sequencing_data ON experiments.experiment_id = sequencing_data.experiment_id ORDER BY experiments.experiment_id, sequencing_data.sequence_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM experiment_data;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, data FROM experiment_data WHERE experiment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM sample_data;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT sample_id, sample_name, sample_details FROM sample_data WHERE experiment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM analysis_results;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT analysis_id, analysis_data FROM analysis_results WHERE sample_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM experiment_data WHERE experiment_name = 'example';",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name FROM experiment_data WHERE experiment_id > 10;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM sample_data WHERE sample_name LIKE 'sample%';",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT sample_id, sample_name FROM sample_data WHERE sample_id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM analysis_results WHERE analysis_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT analysis_id, analysis_data FROM analysis_results WHERE sample_id > 20;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM experiment_data ORDER BY experiment_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name, data FROM experiment_data ORDER BY experiment_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM sample_data ORDER BY sample_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT sample_id, sample_name, sample_details FROM sample_data ORDER BY sample_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM analysis_results ORDER BY analysis_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT analysis_id, analysis_data FROM analysis_results ORDER BY analysis_data ASC;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM experiment_data LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM sample_data LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM experiment_data;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM sample_data JOIN experiment_data ON sample_data.experiment_id = experiment_data.experiment_id;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT analysis_id, sample_name, analysis_data FROM analysis_results JOIN sample_data ON analysis_results.sample_id = sample_data.sample_id;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_name, sample_name, analysis_data FROM experiment_data JOIN sample_data ON experiment_data.experiment_id = sample_data.experiment_id JOIN analysis_results ON sample_data.sample_id = analysis_results.sample_id;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM experiment_data WHERE experiment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT sample_name, sample_details FROM sample_data WHERE experiment_id = (SELECT experiment_id FROM experiment_data WHERE experiment_name = 'Example Experiment');",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM sample_data WHERE sample_id IN (SELECT sample_id FROM analysis_results WHERE analysis_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_name, COUNT(sample_id) AS num_samples FROM experiment_data JOIN sample_data ON experiment_data.experiment_id = sample_data.experiment_id GROUP BY experiment_name;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT AVG(analysis_id) AS avg_analysis_id, MAX(analysis_id) AS max_analysis_id, MIN(analysis_id) AS min_analysis_id FROM analysis_results;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_name, MAX(analysis_id) AS max_analysis_id FROM experiment_data JOIN sample_data ON experiment_data.experiment_id = sample_data.experiment_id JOIN analysis_results ON sample_data.sample_id = analysis_results.sample_id GROUP BY experiment_name;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_name, sample_name, MAX(analysis_data) AS max_analysis_data FROM experiment_data JOIN sample_data ON experiment_data.experiment_id = sample_data.experiment_id JOIN analysis_results ON sample_data.sample_id = analysis_results.sample_id GROUP BY experiment_name, sample_name;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_name, AVG(analysis_data->>'result') AS avg_analysis_result FROM experiment_data JOIN sample_data ON experiment_data.experiment_id = sample_data.experiment_id JOIN analysis_results ON sample_data.sample_id = analysis_results.sample_id GROUP BY experiment_name;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_name, sample_name, analysis_id, analysis_data FROM experiment_data JOIN sample_data ON experiment_data.experiment_id = sample_data.experiment_id JOIN analysis_results ON sample_data.sample_id = analysis_results.sample_id WHERE analysis_data->>'status' = 'completed';",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM experiment_data WHERE experiment_id = (SELECT experiment_id FROM sample_data WHERE sample_name = 'Sample A');",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_name, AVG(analysis_id) AS avg_analysis_id FROM experiment_data JOIN sample_data ON experiment_data.experiment_id = sample_data.experiment_id JOIN analysis_results ON sample_data.sample_id = analysis_results.sample_id GROUP BY experiment_name HAVING AVG(analysis_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_name, sample_name, COUNT(analysis_id) AS num_analysis_results FROM experiment_data JOIN sample_data ON experiment_data.experiment_id = sample_data.experiment_id JOIN analysis_results ON sample_data.sample_id = analysis_results.sample_id GROUP BY experiment_name, sample_name HAVING COUNT(analysis_id) > 3;",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_name, sample_name, analysis_data FROM experiment_data JOIN sample_data ON experiment_data.experiment_id = sample_data.experiment_id JOIN analysis_results ON sample_data.sample_id = analysis_results.sample_id WHERE sample_details->>'type' = 'control';",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_name, sample_name, analysis_data FROM experiment_data JOIN sample_data ON experiment_data.experiment_id = sample_data.experiment_id JOIN analysis_results ON sample_data.sample_id = analysis_results.sample_id WHERE sample_id IN (SELECT sample_id FROM sample_data WHERE sample_details->>'status' = 'approved');",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_name, sample_name, analysis_data FROM experiment_data JOIN sample_data ON experiment_data.experiment_id = sample_data.experiment_id JOIN analysis_results ON sample_data.sample_id = analysis_results.sample_id WHERE analysis_data->>'result' = 'pass';",
  "### TABLEDATA\n\nCREATE TABLE experiment_data (\n    experiment_id INT PRIMARY KEY,\n    experiment_name VARCHAR(255),\n    data BLOB\n);\n\n\nCREATE TABLE sample_data (\n    sample_id INT PRIMARY KEY,\n    experiment_id INT,\n    sample_name VARCHAR(255),\n    sample_details JSON,\n    FOREIGN KEY (experiment_id) REFERENCES experiment_data(experiment_id)\n);\n\n\nCREATE TABLE analysis_results (\n    analysis_id INT PRIMARY KEY,\n    sample_id INT,\n    analysis_data JSON,\n    FOREIGN KEY (sample_id) REFERENCES sample_data(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_name, sample_name, AVG(CAST(sample_details->>'quantity' AS DECIMAL)) AS avg_quantity FROM experiment_data JOIN sample_data ON experiment_data.experiment_id = sample_data.experiment_id GROUP BY experiment_name, sample_name;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Experiment;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_name, start_date FROM Experiment;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Study;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT study_name FROM Study;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Sample;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT sample_type, collection_date FROM Sample;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM SequencingData;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT sequencing_date FROM SequencingData;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT e.experiment_name, s.study_name FROM Experiment e, Study s;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT s.sample_type, sd.raw_data FROM Sample s, SequencingData sd WHERE s.sample_id = sd.sample_id;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT e.experiment_name, s.sample_type, sd.raw_data FROM Experiment e, Sample s, SequencingData sd WHERE e.experiment_id = s.experiment_id AND s.sample_id = sd.sample_id;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT s.sample_id, e.experiment_name, s.sample_type, sd.sequencing_date FROM Sample s JOIN Experiment e ON s.experiment_id = e.experiment_id JOIN SequencingData sd ON s.sample_id = sd.sample_id;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT e.experiment_id, SUM(sd.data_id) FROM Experiment e JOIN Sample s ON e.experiment_id = s.experiment_id JOIN SequencingData sd ON s.sample_id = sd.sample_id GROUP BY e.experiment_id;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT e.experiment_name, COUNT(sd.data_id) FROM Experiment e JOIN Sample s ON e.experiment_id = s.experiment_id JOIN SequencingData sd ON s.sample_id = sd.sample_id GROUP BY e.experiment_name;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT AVG(sd.data_id) AS average_data_id FROM SequencingData sd;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT MIN(collection_date) AS earliest_collection_date FROM Sample;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT MAX(sequencing_date) AS latest_sequencing_date FROM SequencingData;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT e.experiment_name, COUNT(s.sample_id) AS total_samples FROM Experiment e JOIN Sample s ON e.experiment_id = s.experiment_id GROUP BY e.experiment_name;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT study_name, COUNT(s.sample_id) AS total_samples FROM Study JOIN Sample s ON s.experiment_id IN (SELECT experiment_id FROM Experiment WHERE study_id = Study.study_id) GROUP BY study_name;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Experiment WHERE start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Experiment WHERE end_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Experiment WHERE start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT study_name, study_description FROM Study WHERE LENGTH(study_description) > 100;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT sample_id, sample_type, collection_date FROM Sample WHERE sample_type = 'RNA' AND collection_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT data_id, raw_data FROM SequencingData WHERE sequencing_date >= '2021-06-01' ORDER BY sequencing_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Experiment INNER JOIN Sample ON Experiment.experiment_id = Sample.experiment_id;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT study_id FROM Study;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_name, start_date, end_date FROM Experiment WHERE end_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT study_id, study_name, COUNT(*) AS sample_count FROM Study JOIN Sample ON Study.study_id = Sample.experiment_id GROUP BY study_id HAVING sample_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT AVG(sequencing_date - collection_date) AS avg_processing_time FROM Sample INNER JOIN SequencingData ON Sample.sample_id = SequencingData.sample_id;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_id, COUNT(*) AS sample_count FROM Sample GROUP BY experiment_id ORDER BY sample_count DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT study_id, MIN(collection_date) AS earliest_collection_date, MAX(collection_date) AS latest_collection_date FROM Sample GROUP BY study_id;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT AVG(sequencing_date - start_date) AS avg_turnaround_time FROM Experiment INNER JOIN Sample ON Experiment.experiment_id = Sample.experiment_id INNER JOIN SequencingData ON Sample.sample_id = SequencingData.sample_id;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_id, COUNT(*) AS data_count FROM SequencingData GROUP BY experiment_id HAVING data_count < 10;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT s.study_name, COUNT(sd.data_id) AS data_count FROM Study s LEFT JOIN Sample sm ON s.study_id = sm.experiment_id LEFT JOIN SequencingData sd ON sm.sample_id = sd.sample_id GROUP BY s.study_name ORDER BY data_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT MAX(collection_date) - MIN(collection_date) AS date_range FROM Sample;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT AVG(LENGTH(study_description)) AS avg_description_length FROM Study;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT sample_type) AS unique_sample_types FROM Sample;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT experiment_name, COUNT(*) AS sample_count FROM Sample s JOIN Experiment e ON s.experiment_id = e.experiment_id GROUP BY experiment_name HAVING sample_count > 2;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT study_name, AVG(LENGTH(study_description)) AS avg_description_length FROM Study GROUP BY study_name;",
  "### TABLEDATA\n\nCREATE TABLE Experiment (\n   experiment_id INT PRIMARY KEY,\n   experiment_name VARCHAR(255) NOT NULL,\n   start_date DATE,\n   end_date DATE\n);\n\nCREATE TABLE Study (\n   study_id INT PRIMARY KEY,\n   study_name VARCHAR(255) NOT NULL,\n   study_description TEXT\n);\n\nCREATE TABLE Sample (\n   sample_id INT PRIMARY KEY,\n   experiment_id INT,\n   sample_type VARCHAR(50),\n   collection_date DATE,\n   FOREIGN KEY (experiment_id) REFERENCES Experiment(experiment_id)\n);\n\nCREATE TABLE SequencingData (\n   data_id INT PRIMARY KEY,\n   sample_id INT,\n   sequencing_date DATE,\n   raw_data BYTEA,\n   FOREIGN KEY (sample_id) REFERENCES Sample(sample_id)\n);\n\n### STATEMENT\n\nSELECT s.study_name, COUNT(sd.data_id) AS data_count FROM Study s LEFT JOIN Sample sm ON s.study_id = sm.experiment_id LEFT JOIN SequencingData sd ON sm.sample_id = sd.sample_id GROUP BY s.study_name HAVING data_count > 0;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT * FROM experiment;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name FROM experiment;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT * FROM sample;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT sample_id, sample_name FROM sample;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT * FROM sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT data_id, data_file_uuid FROM sequencing_data;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT * FROM lab_technician;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT technician_id, technician_name FROM lab_technician;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT * FROM study;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT study_id, study_name FROM study;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT experiment_id, experiment_name FROM experiment WHERE experiment_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT * FROM sample WHERE experiment_id = 'cafebabe-1234-5678-9876-abcdefabcdef';",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT data_id, data_sequence FROM sequencing_data WHERE sample_id = 'deadbeef-5678-9876-1234-abcdefabcdef';",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT * FROM lab_technician WHERE technician_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT study_id, study_description FROM study WHERE study_name = 'Genomics Study';",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT * FROM experiment ORDER BY experiment_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT sample_id, sample_name FROM sample ORDER BY sample_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT * FROM sequencing_data WHERE data_sequence LIKE '%ACGT%';",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT technician_id, technician_name FROM lab_technician WHERE technician_id IN ('1234-5678-9876-abcdefabcdef', 'deadbeef-5678-9876-1234-abcdefabcdef');",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT * FROM study WHERE study_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT * FROM experiment WHERE experiment_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT sample.sample_name, experiment.experiment_name FROM sample JOIN experiment ON sample.experiment_id = experiment.experiment_id;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT technician_name FROM lab_technician WHERE technician_id IN (SELECT technician_id FROM lab_technician WHERE technician_name = 'John Doe');",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT * FROM sample WHERE sample_id NOT IN (SELECT sample_id FROM sequencing_data);",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT study_name, study_description FROM study;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT experiment_name, COUNT(sample_id) FROM experiment LEFT JOIN sample ON experiment.experiment_id = sample.experiment_id GROUP BY experiment_name;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT experiment_name, sample_name FROM experiment JOIN sample ON experiment.experiment_id = sample.experiment_id ORDER BY experiment_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT technician_name, COUNT(*) AS number_of_samples FROM sequencing_data JOIN lab_technician ON sequencing_data.sample_id = lab_technician.technician_id GROUP BY technician_name;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT * FROM sequence_data WHERE data_sequence LIKE '%AGGT%';",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT DISTINCT study_name FROM study WHERE study_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT experiment_name, COUNT(sample_id) FROM experiment LEFT JOIN sample ON experiment.experiment_id = sample.experiment_id GROUP BY experiment_name HAVING COUNT(sample_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT sample.sample_name, technician_name FROM sample JOIN sequencing_data ON sample.sample_id = sequencing_data.sample_id JOIN lab_technician ON sequencing_data.sample_id = lab_technician.technician_id;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT experiment_name, AVG(data_sequence::int) AS average_sequence_length FROM experiment JOIN sample ON experiment.experiment_id = sample.experiment_id JOIN sequencing_data ON sample.sample_id = sequencing_data.sample_id GROUP BY experiment_name;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT * FROM sequencing_data WHERE data_id IN (SELECT data_id FROM sequencing_data WHERE sample_id = '123');",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT experiment_id, COUNT(*) AS number_of_samples FROM sample GROUP BY experiment_id ORDER BY number_of_samples DESC;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT * FROM sequence_data WHERE data_sequence LIKE '_A%';",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT experiment_name, COUNT(*) AS number_of_samples FROM experiment JOIN sample ON experiment.experiment_id = sample.experiment_id GROUP BY experiment_name HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT sample_name, COUNT(*) AS number_of_technicians FROM sequencing_data JOIN lab_technician ON sequencing_data.sample_id = lab_technician.technician_id GROUP BY sample_name;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT experiment_name, COUNT(*) AS number_of_technicians FROM sample JOIN sequencing_data ON sample.sample_id = sequencing_data.sample_id JOIN lab_technician ON sequencing_data.sample_id = lab_technician.technician_id GROUP BY experiment_name;",
  "### TABLEDATA\n\nCREATE TABLE experiment(\n  experiment_id UUID PRIMARY KEY,\n  experiment_name STRING,\n  experiment_date DATE\n);\n\nCREATE TABLE sample(\n  sample_id UUID PRIMARY KEY,\n  sample_name STRING,\n  experiment_id UUID\n);\n\nCREATE TABLE sequencing_data(\n  data_id UUID PRIMARY KEY,\n  data_file_uuid UUID,\n  data_sequence STRING,\n  sample_id UUID\n);\n\nCREATE TABLE lab_technician(\n  technician_id UUID PRIMARY KEY,\n  technician_name STRING\n);\n\nCREATE TABLE study(\n  study_id UUID PRIMARY KEY,\n  study_name STRING,\n  study_description STRING\n);\n\n### STATEMENT\n\nSELECT study_name, COUNT(DISTINCT experiment_id) AS number_of_experiments FROM study JOIN experiment ON study.study_id = experiment.experiment_id GROUP BY study_name;"
]