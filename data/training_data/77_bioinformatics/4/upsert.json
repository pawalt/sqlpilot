[
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (1, 'Human', 'ATCGATCG', 'Gene1', 'Chr1', 100, 200) ON CONFLICT (id) DO UPDATE SET species_name = 'Human', sequence = 'ATCGATCG', gene_name = 'Gene1', chromosome = 'Chr1', start_position = 100, end_position = 200;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (2, 'Mouse', 'GCTAGCTA', 'Gene2', 'Chr2', 150, 250) ON CONFLICT (id) DO UPDATE SET species_name = 'Mouse', sequence = 'GCTAGCTA', gene_name = 'Gene2', chromosome = 'Chr2', start_position = 150, end_position = 250;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (3, 'Rat', 'TACGTACG', 'Gene3', 'Chr3', 200, 300) ON CONFLICT (id) DO UPDATE SET species_name = 'Rat', sequence = 'TACGTACG', gene_name = 'Gene3', chromosome = 'Chr3', start_position = 200, end_position = 300;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (4, 'Dog', 'CGATCGAT', 'Gene4', 'Chr4', 250, 350) ON CONFLICT (id) DO UPDATE SET species_name = 'Dog', sequence = 'CGATCGAT', gene_name = 'Gene4', chromosome = 'Chr4', start_position = 250, end_position = 350;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (5, 'Cat', 'ATCGTAGC', 'Gene5', 'Chr5', 300, 400) ON CONFLICT (id) DO UPDATE SET species_name = 'Cat', sequence = 'ATCGTAGC', gene_name = 'Gene5', chromosome = 'Chr5', start_position = 300, end_position = 400;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (6, 'Fish', 'GCTACGTA', 'Gene6', 'Chr6', 350, 450) ON CONFLICT (id) DO UPDATE SET species_name = 'Fish', sequence = 'GCTACGTA', gene_name = 'Gene6', chromosome = 'Chr6', start_position = 350, end_position = 450;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (7, 'Bird', 'TAGCTACG', 'Gene7', 'Chr7', 400, 500) ON CONFLICT (id) DO UPDATE SET species_name = 'Bird', sequence = 'TAGCTACG', gene_name = 'Gene7', chromosome = 'Chr7', start_position = 400, end_position = 500;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (8, 'Elephant', 'ACGTACGT', 'Gene8', 'Chr8', 450, 550) ON CONFLICT (id) DO UPDATE SET species_name = 'Elephant', sequence = 'ACGTACGT', gene_name = 'Gene8', chromosome = 'Chr8', start_position = 450, end_position = 550;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (9, 'Lion', 'CTAGCTAG', 'Gene9', 'Chr9', 500, 600) ON CONFLICT (id) DO UPDATE SET species_name = 'Lion', sequence = 'CTAGCTAG', gene_name = 'Gene9', chromosome = 'Chr9', start_position = 500, end_position = 600;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (10, 'Tiger', 'TAGCATGC', 'Gene10', 'Chr10', 550, 650) ON CONFLICT (id) DO UPDATE SET species_name = 'Tiger', sequence = 'TAGCATGC', gene_name = 'Gene10', chromosome = 'Chr10', start_position = 550, end_position = 650;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (11, 'Giraffe', 'AGCTACGA', 'Gene11', 'Chr11', 600, 700) ON CONFLICT (id) DO UPDATE SET species_name = 'Giraffe', sequence = 'AGCTACGA', gene_name = 'Gene11', chromosome = 'Chr11', start_position = 600, end_position = 700;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (12, 'Zebra', 'GCTAGCTA', 'Gene12', 'Chr12', 650, 750) ON CONFLICT (id) DO UPDATE SET species_name = 'Zebra', sequence = 'GCTAGCTA', gene_name = 'Gene12', chromosome = 'Chr12', start_position = 650, end_position = 750;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (13, 'Monkey', 'TACGTACG', 'Gene13', 'Chr13', 700, 800) ON CONFLICT (id) DO UPDATE SET species_name = 'Monkey', sequence = 'TACGTACG', gene_name = 'Gene13', chromosome = 'Chr13', start_position = 700, end_position = 800;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (14, 'Kangaroo', 'CGATCGAT', 'Gene14', 'Chr14', 750, 850) ON CONFLICT (id) DO UPDATE SET species_name = 'Kangaroo', sequence = 'CGATCGAT', gene_name = 'Gene14', chromosome = 'Chr14', start_position = 750, end_position = 850;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (15, 'Panda', 'ATCGTAGC', 'Gene15', 'Chr15', 800, 900) ON CONFLICT (id) DO UPDATE SET species_name = 'Panda', sequence = 'ATCGTAGC', gene_name = 'Gene15', chromosome = 'Chr15', start_position = 800, end_position = 900;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (16, 'Koala', 'GCTACGTA', 'Gene16', 'Chr16', 850, 950) ON CONFLICT (id) DO UPDATE SET species_name = 'Koala', sequence = 'GCTACGTA', gene_name = 'Gene16', chromosome = 'Chr16', start_position = 850, end_position = 950;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (17, 'Dolphin', 'TAGCTACG', 'Gene17', 'Chr17', 900, 1000) ON CONFLICT (id) DO UPDATE SET species_name = 'Dolphin', sequence = 'TAGCTACG', gene_name = 'Gene17', chromosome = 'Chr17', start_position = 900, end_position = 1000;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (18, 'Whale', 'ACGTACGT', 'Gene18', 'Chr18', 950, 1050) ON CONFLICT (id) DO UPDATE SET species_name = 'Whale', sequence = 'ACGTACGT', gene_name = 'Gene18', chromosome = 'Chr18', start_position = 950, end_position = 1050;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (19, 'Shark', 'CTAGCTAG', 'Gene19', 'Chr2', 1000, 2000) ON CONFLICT (id) DO UPDATE SET species_name = 'Shark', sequence = 'CTAGCTAG', gene_name = 'Gene19', chromosome = 'Chr2', start_position = 1000, end_position = 2000;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (20, 'Octopus', 'TAGCATGC', 'Gene20', 'Chr20', 1050, 1150) ON CONFLICT (id) DO UPDATE SET species_name = 'Octopus', sequence = 'TAGCATGC', gene_name = 'Gene20', chromosome = 'Chr20', start_position = 1050, end_position = 1150;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (1, 'Human', 'ATCGATCGATCG', 'GeneA', 'Chr1', 100, 200) ON CONFLICT (id) DO UPDATE SET species_name = 'Human', sequence = 'ATCGATCGATCG', gene_name = 'GeneA', chromosome = 'Chr1', start_position = 100, end_position = 200;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (2, 'Mouse', 'TGCATGCATGCA', 'GeneB', 'Chr2', 150, 250) ON CONFLICT (id) DO UPDATE SET species_name = 'Mouse', sequence = 'TGCATGCATGCA', gene_name = 'GeneB', chromosome = 'Chr2', start_position = 150, end_position = 250;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (3, 'Cattle', 'GCCAGCCAGCCA', 'GeneC', 'Chr3', 200, 300) ON CONFLICT (id) DO UPDATE SET species_name = 'Cattle', sequence = 'GCCAGCCAGCCA', gene_name = 'GeneC', chromosome = 'Chr3', start_position = 200, end_position = 300;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (4, 'Dog', 'AGTAGTAGTAGT', 'GeneD', 'Chr4', 250, 350) ON CONFLICT (id) DO UPDATE SET species_name = 'Dog', sequence = 'AGTAGTAGTAGT', gene_name = 'GeneD', chromosome = 'Chr4', start_position = 250, end_position = 350;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (5, 'Cat', 'TCGCTCGCTCGC', 'GeneE', 'Chr5', 300, 400) ON CONFLICT (id) DO UPDATE SET species_name = 'Cat', sequence = 'TCGCTCGCTCGC', gene_name = 'GeneE', chromosome = 'Chr5', start_position = 300, end_position = 400;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (6, 'Rabbit', 'ATGATGATGATG', 'GeneF', 'Chr6', 350, 450) ON CONFLICT (id) DO UPDATE SET species_name = 'Rabbit', sequence = 'ATGATGATGATG', gene_name = 'GeneF', chromosome = 'Chr6', start_position = 350, end_position = 450;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (7, 'Horse', 'CGATCGATCGAT', 'GeneG', 'Chr7', 400, 500) ON CONFLICT (id) DO UPDATE SET species_name = 'Horse', sequence = 'CGATCGATCGAT', gene_name = 'GeneG', chromosome = 'Chr7', start_position = 400, end_position = 500;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (8, 'Chicken', 'TAGTAGTAGTAG', 'GeneH', 'Chr8', 450, 550) ON CONFLICT (id) DO UPDATE SET species_name = 'Chicken', sequence = 'TAGTAGTAGTAG', gene_name = 'GeneH', chromosome = 'Chr8', start_position = 450, end_position = 550;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (9, 'Pig', 'GATGATGATGAT', 'GeneI', 'Chr9', 500, 600) ON CONFLICT (id) DO UPDATE SET species_name = 'Pig', sequence = 'GATGATGATGAT', gene_name = 'GeneI', chromosome = 'Chr9', start_position = 500, end_position = 600;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (10, 'Sheep', 'ATCGATCGATCG', 'GeneJ', 'Chr10', 550, 650) ON CONFLICT (id) DO UPDATE SET species_name = 'Sheep', sequence = 'ATCGATCGATCG', gene_name = 'GeneJ', chromosome = 'Chr10', start_position = 550, end_position = 650;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (11, 'Duck', 'TGCATGCATGCA', 'GeneK', 'Chr11', 600, 700) ON CONFLICT (id) DO UPDATE SET species_name = 'Duck', sequence = 'TGCATGCATGCA', gene_name = 'GeneK', chromosome = 'Chr11', start_position = 600, end_position = 700;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (12, 'Goat', 'GCCAGCCAGCCA', 'GeneL', 'Chr12', 650, 750) ON CONFLICT (id) DO UPDATE SET species_name = 'Goat', sequence = 'GCCAGCCAGCCA', gene_name = 'GeneL', chromosome = 'Chr12', start_position = 650, end_position = 750;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (13, 'Turkey', 'AGTAGTAGTAGT', 'GeneM', 'Chr13', 700, 800) ON CONFLICT (id) DO UPDATE SET species_name = 'Turkey', sequence = 'AGTAGTAGTAGT', gene_name = 'GeneM', chromosome = 'Chr13', start_position = 700, end_position = 800;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (14, 'Fish', 'TCGCTCGCTCGC', 'GeneN', 'Chr14', 750, 850) ON CONFLICT (id) DO UPDATE SET species_name = 'Fish', sequence = 'TCGCTCGCTCGC', gene_name = 'GeneN', chromosome = 'Chr14', start_position = 750, end_position = 850;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (15, 'Frog', 'ATGATGATGATG', 'GeneO', 'Chr15', 800, 900) ON CONFLICT (id) DO UPDATE SET species_name = 'Frog', sequence = 'ATGATGATGATG', gene_name = 'GeneO', chromosome = 'Chr15', start_position = 800, end_position = 900;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (16, 'Bird', 'CGATCGATCGAT', 'GeneP', 'Chr16', 850, 950) ON CONFLICT (id) DO UPDATE SET species_name = 'Bird', sequence = 'CGATCGATCGAT', gene_name = 'GeneP', chromosome = 'Chr16', start_position = 850, end_position = 950;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (17, 'Lion', 'TAGTAGTAGTAG', 'GeneQ', 'Chr17', 900, 1000) ON CONFLICT (id) DO UPDATE SET species_name = 'Lion', sequence = 'TAGTAGTAGTAG', gene_name = 'GeneQ', chromosome = 'Chr17', start_position = 900, end_position = 1000;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (18, 'Elephant', 'GATGATGATGAT', 'GeneR', 'Chr18', 950, 1050) ON CONFLICT (id) DO UPDATE SET species_name = 'Elephant', sequence = 'GATGATGATGAT', gene_name = 'GeneR', chromosome = 'Chr18', start_position = 950, end_position = 1050;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (19, 'Tiger', 'ATCGATCGATCG', 'GeneS', 'Chr19', 1000, 1100) ON CONFLICT (id) DO UPDATE SET species_name = 'Tiger', sequence = 'ATCGATCGATCG', gene_name = 'GeneS', chromosome = 'Chr19', start_position = 1000, end_position = 1100;",
  "### TABLEDATA\n\nCREATE TABLE genomic_data (\n  id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  sequence TEXT,\n  gene_name VARCHAR(50),\n  chromosome VARCHAR(10),\n  start_position INT,\n  end_position INT\n);\n\n### STATEMENT\n\nINSERT INTO genomic_data (id, species_name, sequence, gene_name, chromosome, start_position, end_position) VALUES (20, 'Giraffe', 'TGCATGCATGCA', 'GeneT', 'Chr20', 1050, 1150) ON CONFLICT (id) DO UPDATE SET species_name = 'Giraffe', sequence = 'TGCATGCATGCA', gene_name = 'GeneT', chromosome = 'Chr20', start_position = 1050, end_position = 1150;",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (1, 'OrganismA', 1000000, 'PlatformA', 30.5) ON DUPLICATE KEY UPDATE OrganismName='OrganismA', GenomeSize=1000000, SequencingPlatform='PlatformA', SequencingDepth=30.5;",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (2, 'OrganismB', 1500000, 'PlatformB', 25.2) ON DUPLICATE KEY UPDATE OrganismName='OrganismB', GenomeSize=1500000, SequencingPlatform='PlatformB', SequencingDepth=25.2;",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (3, 'OrganismC', 800000, 'PlatformC', 40.1) ON DUPLICATE KEY UPDATE OrganismName='OrganismC', GenomeSize=800000, SequencingPlatform='PlatformC', SequencingDepth=40.1;",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (4, 'OrganismD', 1200000, 'PlatformD', 35.0) ON DUPLICATE KEY UPDATE OrganismName='OrganismD', GenomeSize=1200000, SequencingPlatform='PlatformD', SequencingDepth=35.0;",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (5, 'OrganismE', 900000, 'PlatformE', 28.7) ON DUPLICATE KEY UPDATE OrganismName='OrganismE', GenomeSize=900000, SequencingPlatform='PlatformE', SequencingDepth=28.7;",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (1, 'OrganismA', 'OrganismB', 2500, 0.05) ON DUPLICATE KEY UPDATE ReferenceOrganism='OrganismA', TargetOrganism='OrganismB', NumSharedGenes=2500, EvolutionaryDistance=0.05;",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (2, 'OrganismA', 'OrganismC', 2100, 0.02) ON DUPLICATE KEY UPDATE ReferenceOrganism='OrganismA', TargetOrganism='OrganismC', NumSharedGenes=2100, EvolutionaryDistance=0.02;",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (3, 'OrganismB', 'OrganismC', 1800, 0.03) ON DUPLICATE KEY UPDATE ReferenceOrganism='OrganismB', TargetOrganism='OrganismC', NumSharedGenes=1800, EvolutionaryDistance=0.03;",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (4, 'OrganismD', 'OrganismE', 3000, 0.06) ON DUPLICATE KEY UPDATE ReferenceOrganism='OrganismD', TargetOrganism='OrganismE', NumSharedGenes=3000, EvolutionaryDistance=0.06;",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (5, 'OrganismC', 'OrganismE', 2800, 0.04) ON DUPLICATE KEY UPDATE ReferenceOrganism='OrganismC', TargetOrganism='OrganismE', NumSharedGenes=2800, EvolutionaryDistance=0.04;",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (1, 'Human', 3500000, 'Illumina', 45.6) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (1, 'Human', 'Chimpanzee', 2500, 0.003) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (2, 'Mouse', 2800000, 'PacBio', 30.2) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (2, 'Mouse', 'Rat', 2000, 0.002) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (3, 'E. coli', 5000000, 'Illumina', 40.5) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (3, 'E. coli', 'Salmonella', 1800, 0.001) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (4, 'Yeast', 1200000, 'PacBio', 25.3) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (4, 'Yeast', 'Fungus', 2200, 0.0025) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (5, 'Arabidopsis', 4000000, 'Illumina', 42.7) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (5, 'Arabidopsis', 'Rice', 1950, 0.0018) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (6, 'Drosophila', 2200000, 'PacBio', 28.9) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (6, 'Drosophila', 'Mosquito', 2050, 0.0022) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (7, 'Chicken', 3000000, 'Illumina', 38.1) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (7, 'Chicken', 'Turkey', 1850, 0.0015) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (8, 'Zebrafish', 2600000, 'PacBio', 33.2) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (8, 'Zebrafish', 'Medaka', 1975, 0.0019) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (9, 'Frog', 2900000, 'Illumina', 39.5) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (9, 'Frog', 'Toad', 1900, 0.0016) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (10, 'C. elegans', 1900000, 'PacBio', 27.4) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (10, 'C. elegans', 'Daphnia', 1980, 0.0017) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (11, 'Xenopus', 2500000, 'Illumina', 36.9) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (11, 'Xenopus', 'Axolotl', 1850, 0.0014) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (12, 'Fruit fly', 2100000, 'PacBio', 29.1) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (12, 'Fruit fly', 'Wasp', 2025, 0.0019) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (13, 'African elephant', 3400000, 'Illumina', 44.2) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (13, 'African elephant', 'Indian elephant', 2300, 0.0022) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (14, 'Gorilla', 3100000, 'PacBio', 32.8) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (14, 'Gorilla', 'Orangutan', 2050, 0.0019) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (15, 'Polar bear', 2800000, 'Illumina', 37.9) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (15, 'Polar bear', 'Grizzly bear', 1900, 0.0016) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (16, 'Giant squid', 2600000, 'PacBio', 31.2) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (16, 'Giant squid', 'Octopus', 2000, 0.002) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (17, 'Kangaroo', 3000000, 'Illumina', 38.5) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (17, 'Kangaroo', 'Wallaby', 1850, 0.0015) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (18, 'Penguin', 2700000, 'PacBio', 34.2) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (18, 'Penguin', 'Seal', 1950, 0.0017) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (19, 'Koala', 3200000, 'Illumina', 41.5) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (19, 'Koala', 'Wombat', 1875, 0.0016) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO GenomicData (Id, OrganismName, GenomeSize, SequencingPlatform, SequencingDepth) VALUES (20, 'Orca', 2900000, 'PacBio', 35.2) ON DUPLICATE KEY UPDATE OrganismName = VALUES(OrganismName), GenomeSize = VALUES(GenomeSize), SequencingPlatform = VALUES(SequencingPlatform), SequencingDepth = VALUES(SequencingDepth);",
  "### TABLEDATA\n\nCREATE TABLE GenomicData (\n    Id INT PRIMARY KEY,\n    OrganismName VARCHAR(255),\n    GenomeSize INT,\n    SequencingPlatform VARCHAR(100),\n    SequencingDepth FLOAT\n);\n\n\nCREATE TABLE ComparativeGenomics (\n    ComparisonId INT PRIMARY KEY,\n    ReferenceOrganism VARCHAR(255),\n    TargetOrganism VARCHAR(255),\n    NumSharedGenes INT,\n    EvolutionaryDistance FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO ComparativeGenomics (ComparisonId, ReferenceOrganism, TargetOrganism, NumSharedGenes, EvolutionaryDistance) VALUES (20, 'Orca', 'Dolphin', 2000, 0.0019) ON DUPLICATE KEY UPDATE ReferenceOrganism = VALUES(ReferenceOrganism), TargetOrganism = VALUES(TargetOrganism), NumSharedGenes = VALUES(NumSharedGenes), EvolutionaryDistance = VALUES(EvolutionaryDistance);",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO species (species_id, species_name, genome_size) VALUES (1, 'Human', 3.2) ON DUPLICATE KEY UPDATE species_name='Human', genome_size=3.2;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO genes (gene_id, gene_name, gene_location, gene_sequence) VALUES (1, 'GeneA', 'Location1', 'ATCG') ON DUPLICATE KEY UPDATE gene_name='GeneA', gene_location='Location1', gene_sequence='ATCG';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO mutations (mutation_id, gene_id, mutation_type, mutation_position, mutation_effect) VALUES (1, 1, 'Substitution', 100, 'Silent') ON DUPLICATE KEY UPDATE gene_id=1, mutation_type='Substitution', mutation_position=100, mutation_effect='Silent';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO species (species_id, species_name, genome_size) VALUES (2, 'Mouse', 2.5) ON DUPLICATE KEY UPDATE species_name='Mouse', genome_size=2.5;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO genes (gene_id, gene_name, gene_location, gene_sequence) VALUES (2, 'GeneB', 'Location2', 'TAGC') ON DUPLICATE KEY UPDATE gene_name='GeneB', gene_location='Location2', gene_sequence='TAGC';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO mutations (mutation_id, gene_id, mutation_type, mutation_position, mutation_effect) VALUES (2, 2, 'Deletion', 50, 'Nonsense') ON DUPLICATE KEY UPDATE gene_id=2, mutation_type='Deletion', mutation_position=50, mutation_effect='Nonsense';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO species (species_id, species_name, genome_size) VALUES (3, 'Dog', 2.8) ON DUPLICATE KEY UPDATE species_name='Dog', genome_size=2.8;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO genes (gene_id, gene_name, gene_location, gene_sequence) VALUES (3, 'GeneC', 'Location3', 'CGTA') ON DUPLICATE KEY UPDATE gene_name='GeneC', gene_location='Location3', gene_sequence='CGTA';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO mutations (mutation_id, gene_id, mutation_type, mutation_position, mutation_effect) VALUES (3, 3, 'Insertion', 75, 'Missense') ON DUPLICATE KEY UPDATE gene_id=3, mutation_type='Insertion', mutation_position=75, mutation_effect='Missense';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO species (species_id, species_name, genome_size) VALUES (4, 'Cat', 2.2) ON DUPLICATE KEY UPDATE species_name='Cat', genome_size=2.2;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO genes (gene_id, gene_name, gene_location, gene_sequence) VALUES (4, 'GeneD', 'Location4', 'GCAT') ON DUPLICATE KEY UPDATE gene_name='GeneD', gene_location='Location4', gene_sequence='GCAT';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO mutations (mutation_id, gene_id, mutation_type, mutation_position, mutation_effect) VALUES (4, 4, 'Deletion', 30, 'Splice Site') ON DUPLICATE KEY UPDATE gene_id=4, mutation_type='Deletion', mutation_position=30, mutation_effect='Splice Site';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO species (species_id, species_name, genome_size) VALUES (5, 'Rat', 2.0) ON DUPLICATE KEY UPDATE species_name='Rat', genome_size=2.0;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO genes (gene_id, gene_name, gene_location, gene_sequence) VALUES (5, 'GeneE', 'Location5', 'ATGC') ON DUPLICATE KEY UPDATE gene_name='GeneE', gene_location='Location5', gene_sequence='ATGC';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO mutations (mutation_id, gene_id, mutation_type, mutation_position, mutation_effect) VALUES (5, 5, 'Substitution', 90, 'Frameshift') ON DUPLICATE KEY UPDATE gene_id=5, mutation_type='Substitution', mutation_position=90, mutation_effect='Frameshift';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO species (species_id, species_name, genome_size) VALUES (6, 'Bird', 1.5) ON DUPLICATE KEY UPDATE species_name='Bird', genome_size=1.5;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO genes (gene_id, gene_name, gene_location, gene_sequence) VALUES (6, 'GeneF', 'Location6', 'GCTA') ON DUPLICATE KEY UPDATE gene_name='GeneF', gene_location='Location6', gene_sequence='GCTA';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO mutations (mutation_id, gene_id, mutation_type, mutation_position, mutation_effect) VALUES (6, 6, 'Insertion', 45, 'Nonsense') ON DUPLICATE KEY UPDATE gene_id=6, mutation_type='Insertion', mutation_position=45, mutation_effect='Nonsense';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO species (species_id, species_name, genome_size) VALUES (7, 'Fish', 1.2) ON DUPLICATE KEY UPDATE species_name='Fish', genome_size=1.2;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO genes (gene_id, gene_name, gene_location, gene_sequence) VALUES (7, 'GeneG', 'Location7', 'CATG') ON DUPLICATE KEY UPDATE gene_name='GeneG', gene_location='Location7', gene_sequence='CATG';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO mutations (mutation_id, gene_id, mutation_type, mutation_position, mutation_effect) VALUES (7, 7, 'Deletion', 60, 'Silent') ON DUPLICATE KEY UPDATE gene_id=7, mutation_type='Deletion', mutation_position=60, mutation_effect='Silent';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO species (species_id, species_name, genome_size) VALUES (1, 'Human', 3.2) ON CONFLICT (species_id) DO UPDATE SET species_name = 'Homo sapiens';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO genes (gene_id, gene_name, gene_location, gene_sequence) VALUES (1, 'TP53', 'Chr17:7571720-7590864', 'ATGCCTG...') ON CONFLICT (gene_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO mutations (mutation_id, gene_id, mutation_type, mutation_position, mutation_effect) VALUES (1, 1, 'SNP', 4567, 'Missense') ON CONFLICT (mutation_id) DO UPDATE SET mutation_type = 'Single Nucleotide Polymorphism';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO species (species_id, species_name, genome_size) VALUES (2, 'Mouse', 2.7) ON CONFLICT (species_id) DO UPDATE SET genome_size = 3.0;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO genes (gene_id, gene_name, gene_location, gene_sequence) VALUES (2, 'EGFR', 'Chr7:5501776-55279432', 'TACCGTG...') ON CONFLICT (gene_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO mutations (mutation_id, gene_id, mutation_type, mutation_position, mutation_effect) VALUES (2, 2, 'Deletion', 7890, 'Frameshift') ON CONFLICT (mutation_id) DO UPDATE SET mutation_position = 8000;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO species (species_id, species_name, genome_size) VALUES (3, 'Fruit Fly', 0.2) ON CONFLICT (species_id) DO UPDATE SET species_name = 'Drosophila melanogaster';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO genes (gene_id, gene_name, gene_location, gene_sequence) VALUES (3, 'Bicoid', 'Chr3R:28759846-28760021', 'TCGTTAC...') ON CONFLICT (gene_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO mutations (mutation_id, gene_id, mutation_type, mutation_position, mutation_effect) VALUES (3, 3, 'Insertion', 1234, 'Silent') ON CONFLICT (mutation_id) DO UPDATE SET mutation_effect = 'No Effect';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO species (species_id, species_name, genome_size) VALUES (4, 'Yeast', 12.1) ON CONFLICT (species_id) DO UPDATE SET genome_size = 10.5;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO genes (gene_id, gene_name, gene_location, gene_sequence) VALUES (4, 'CDC28', 'ChrXVI:173586-176182', 'ACTGAGT...') ON CONFLICT (gene_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO mutations (mutation_id, gene_id, mutation_type, mutation_position, mutation_effect) VALUES (4, 4, 'Duplication', 3456, 'Nonsense') ON CONFLICT (mutation_id) DO UPDATE SET mutation_type = 'Gene Duplication';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO species (species_id, species_name, genome_size) VALUES (5, 'Rice', 0.9) ON CONFLICT (species_id) DO UPDATE SET genome_size = 1.1;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO genes (gene_id, gene_name, gene_location, gene_sequence) VALUES (5, 'OsF3H', 'Chr5:14888680-14893068', 'CGCATGC...') ON CONFLICT (gene_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO mutations (mutation_id, gene_id, mutation_type, mutation_position, mutation_effect) VALUES (5, 5, 'Substitution', 6789, 'Splice Site') ON CONFLICT (mutation_id) DO UPDATE SET mutation_effect = 'Splice Site Disruption';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO species (species_id, species_name, genome_size) VALUES (6, 'Dog', 2.8) ON CONFLICT (species_id) DO UPDATE SET species_name = 'Canis lupus familiaris';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO genes (gene_id, gene_name, gene_location, gene_sequence) VALUES (6, 'BRCA1', 'Chr17:41245498-41263877', 'AAGGTTC...') ON CONFLICT (gene_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO mutations (mutation_id, gene_id, mutation_type, mutation_position, mutation_effect) VALUES (6, 6, 'Inversion', 9876, 'Regulatory Region') ON CONFLICT (mutation_id) DO UPDATE SET mutation_position = 9500;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO species (species_id, species_name, genome_size) VALUES (7, 'Cat', 2.0) ON CONFLICT (species_id) DO UPDATE SET genome_size = 2.2;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO genes (gene_id, gene_name, gene_location, gene_sequence) VALUES (7, 'KIT', 'Chr6:107379481-107430516', 'TGCTGAA...') ON CONFLICT (gene_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO mutations (mutation_id, gene_id, mutation_type, mutation_position, mutation_effect) VALUES (7, 7, 'Frameshift', 2345, 'Insertion') ON CONFLICT (mutation_id) DO UPDATE SET mutation_effect = 'Insertion Mutation';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO species (species_id, species_name, genome_size) VALUES (8, 'Zebrafish', 1.7) ON CONFLICT (species_id) DO UPDATE SET species_name = 'Danio rerio';",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO genes (gene_id, gene_name, gene_location, gene_sequence) VALUES (8, 'GFP', 'Chr4:46200170-46200385', 'CCGTAGG...') ON CONFLICT (gene_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(255) NOT NULL,\n    genome_size FLOAT\n);\n\nCREATE TABLE genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255) NOT NULL,\n    gene_location VARCHAR(50) NOT NULL,\n    gene_sequence TEXT\n);\n\nCREATE TABLE mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT NOT NULL,\n    mutation_type VARCHAR(50) NOT NULL,\n    mutation_position INT,\n    mutation_effect VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO mutations (mutation_id, gene_id, mutation_type, mutation_position, mutation_effect) VALUES (8, 8, 'Insertion', 5678, 'Regulatory Region') ON CONFLICT (mutation_id) DO UPDATE SET mutation_position = 6000;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n  species_id INT PRIMARY KEY,\n  species_name VARCHAR(255) NOT NULL,\n  genome_size INT NOT NULL\n);\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  species_id INT,\n  chromosome_id INT,\n  sequence TEXT\n);\n\nCREATE TABLE Chromosomes (\n  chromosome_id INT PRIMARY KEY,\n  chromosome_name VARCHAR(255) NOT NULL,\n  species_id INT\n);\n\nCREATE TABLE Alignments (\n  alignment_id INT PRIMARY KEY,\n  gene_id INT,\n  chromosome_id INT,\n  alignment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Species (species_id, species_name, genome_size) VALUES (1, 'Human', 3000) ON DUPLICATE KEY UPDATE species_name = 'Human', genome_size = 3000;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n  species_id INT PRIMARY KEY,\n  species_name VARCHAR(255) NOT NULL,\n  genome_size INT NOT NULL\n);\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  species_id INT,\n  chromosome_id INT,\n  sequence TEXT\n);\n\nCREATE TABLE Chromosomes (\n  chromosome_id INT PRIMARY KEY,\n  chromosome_name VARCHAR(255) NOT NULL,\n  species_id INT\n);\n\nCREATE TABLE Alignments (\n  alignment_id INT PRIMARY KEY,\n  gene_id INT,\n  chromosome_id INT,\n  alignment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Genes (gene_id, gene_name, species_id, chromosome_id, sequence) VALUES (1, 'Gene1', 1, 1, 'ATCG') ON DUPLICATE KEY UPDATE gene_name = 'Gene1', species_id = 1, chromosome_id = 1, sequence = 'ATCG';",
  "### TABLEDATA\n\nCREATE TABLE Species (\n  species_id INT PRIMARY KEY,\n  species_name VARCHAR(255) NOT NULL,\n  genome_size INT NOT NULL\n);\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  species_id INT,\n  chromosome_id INT,\n  sequence TEXT\n);\n\nCREATE TABLE Chromosomes (\n  chromosome_id INT PRIMARY KEY,\n  chromosome_name VARCHAR(255) NOT NULL,\n  species_id INT\n);\n\nCREATE TABLE Alignments (\n  alignment_id INT PRIMARY KEY,\n  gene_id INT,\n  chromosome_id INT,\n  alignment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Chromosomes (chromosome_id, chromosome_name, species_id) VALUES (1, 'Chr1', 1) ON DUPLICATE KEY UPDATE chromosome_name = 'Chr1', species_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n  species_id INT PRIMARY KEY,\n  species_name VARCHAR(255) NOT NULL,\n  genome_size INT NOT NULL\n);\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  species_id INT,\n  chromosome_id INT,\n  sequence TEXT\n);\n\nCREATE TABLE Chromosomes (\n  chromosome_id INT PRIMARY KEY,\n  chromosome_name VARCHAR(255) NOT NULL,\n  species_id INT\n);\n\nCREATE TABLE Alignments (\n  alignment_id INT PRIMARY KEY,\n  gene_id INT,\n  chromosome_id INT,\n  alignment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Alignments (alignment_id, gene_id, chromosome_id, alignment_score) VALUES (1, 1, 1, 0.98) ON DUPLICATE KEY UPDATE alignment_score = 0.98;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n  species_id INT PRIMARY KEY,\n  species_name VARCHAR(255) NOT NULL,\n  genome_size INT NOT NULL\n);\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  species_id INT,\n  chromosome_id INT,\n  sequence TEXT\n);\n\nCREATE TABLE Chromosomes (\n  chromosome_id INT PRIMARY KEY,\n  chromosome_name VARCHAR(255) NOT NULL,\n  species_id INT\n);\n\nCREATE TABLE Alignments (\n  alignment_id INT PRIMARY KEY,\n  gene_id INT,\n  chromosome_id INT,\n  alignment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Species (species_id, species_name, genome_size) VALUES (1, 'Human', 3000000000) ON DUPLICATE KEY UPDATE species_name = VALUES(species_name), genome_size = VALUES(genome_size);",
  "### TABLEDATA\n\nCREATE TABLE Species (\n  species_id INT PRIMARY KEY,\n  species_name VARCHAR(255) NOT NULL,\n  genome_size INT NOT NULL\n);\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  species_id INT,\n  chromosome_id INT,\n  sequence TEXT\n);\n\nCREATE TABLE Chromosomes (\n  chromosome_id INT PRIMARY KEY,\n  chromosome_name VARCHAR(255) NOT NULL,\n  species_id INT\n);\n\nCREATE TABLE Alignments (\n  alignment_id INT PRIMARY KEY,\n  gene_id INT,\n  chromosome_id INT,\n  alignment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Genes (gene_id, gene_name, species_id, chromosome_id, sequence) VALUES (1, 'GeneA', 1, 1, 'ATCG') ON DUPLICATE KEY UPDATE gene_name = VALUES(gene_name), species_id = VALUES(species_id), chromosome_id = VALUES(chromosome_id), sequence = VALUES(sequence);",
  "### TABLEDATA\n\nCREATE TABLE Species (\n  species_id INT PRIMARY KEY,\n  species_name VARCHAR(255) NOT NULL,\n  genome_size INT NOT NULL\n);\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  species_id INT,\n  chromosome_id INT,\n  sequence TEXT\n);\n\nCREATE TABLE Chromosomes (\n  chromosome_id INT PRIMARY KEY,\n  chromosome_name VARCHAR(255) NOT NULL,\n  species_id INT\n);\n\nCREATE TABLE Alignments (\n  alignment_id INT PRIMARY KEY,\n  gene_id INT,\n  chromosome_id INT,\n  alignment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Chromosomes (chromosome_id, chromosome_name, species_id) VALUES (1, 'ChromosomeA', 1) ON DUPLICATE KEY UPDATE chromosome_name = VALUES(chromosome_name), species_id = VALUES(species_id);",
  "### TABLEDATA\n\nCREATE TABLE Species (\n  species_id INT PRIMARY KEY,\n  species_name VARCHAR(255) NOT NULL,\n  genome_size INT NOT NULL\n);\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  species_id INT,\n  chromosome_id INT,\n  sequence TEXT\n);\n\nCREATE TABLE Chromosomes (\n  chromosome_id INT PRIMARY KEY,\n  chromosome_name VARCHAR(255) NOT NULL,\n  species_id INT\n);\n\nCREATE TABLE Alignments (\n  alignment_id INT PRIMARY KEY,\n  gene_id INT,\n  chromosome_id INT,\n  alignment_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Alignments (alignment_id, gene_id, chromosome_id, alignment_score) VALUES (1, 1, 1, 0.95) ON DUPLICATE KEY UPDATE gene_id = VALUES(gene_id), chromosome_id = VALUES(chromosome_id), alignment_score = VALUES(alignment_score);",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Species (species_id, species_name, genome_size) VALUES (1, 'Human', 3200) ON DUPLICATE KEY UPDATE genome_size = 3200;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Genes (gene_id, gene_name, chromosome, species_id) VALUES (1, 'ATP1A1', 'chr1', 1) ON DUPLICATE KEY UPDATE chromosome = 'chr1';",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Mutations (mutation_id, gene_id, mutation_type, mutation_position) VALUES (1, 1, 'Substitution', 100) ON DUPLICATE KEY UPDATE mutation_type = 'Substitution';",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Alignments (alignment_id, alignment_score, mutation_id) VALUES (1, 95.5, 1) ON DUPLICATE KEY UPDATE alignment_score = 95.5;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Sequences (sequence_id, sequence_data, alignment_id) VALUES (1, 'AGCTAGCTAGCT', 1) ON DUPLICATE KEY UPDATE sequence_data = 'AGCTAGCTAGCT';",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Species (species_id, species_name, genome_size) VALUES (2, 'Mouse', 2800) ON DUPLICATE KEY UPDATE genome_size = 2800;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Genes (gene_id, gene_name, chromosome, species_id) VALUES (2, 'TP53', 'chr17', 2) ON DUPLICATE KEY UPDATE chromosome = 'chr17';",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Mutations (mutation_id, gene_id, mutation_type, mutation_position) VALUES (2, 2, 'Insertion', 200) ON DUPLICATE KEY UPDATE mutation_type = 'Insertion';",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Alignments (alignment_id, alignment_score, mutation_id) VALUES (2, 88.7, 2) ON DUPLICATE KEY UPDATE alignment_score = 88.7;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Sequences (sequence_id, sequence_data, alignment_id) VALUES (2, 'GTACGTACGTAC', 2) ON DUPLICATE KEY UPDATE sequence_data = 'GTACGTACGTAC';",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Species (species_id, species_name, genome_size) VALUES (3, 'Fruit Fly', 1300) ON DUPLICATE KEY UPDATE genome_size = 1300;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Genes (gene_id, gene_name, chromosome, species_id) VALUES (3, 'Cdkn2a', 'chr6', 3) ON DUPLICATE KEY UPDATE chromosome = 'chr6';",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Mutations (mutation_id, gene_id, mutation_type, mutation_position) VALUES (3, 3, 'Deletion', 50) ON DUPLICATE KEY UPDATE mutation_type = 'Deletion';",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Alignments (alignment_id, alignment_score, mutation_id) VALUES (3, 75.2, 3) ON DUPLICATE KEY UPDATE alignment_score = 75.2;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Sequences (sequence_id, sequence_data, alignment_id) VALUES (3, 'TCAGTCAGTCAG', 3) ON DUPLICATE KEY UPDATE sequence_data = 'TCAGTCAGTCAG';",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Species (species_id, species_name, genome_size) VALUES (4, 'E. coli', 1500) ON DUPLICATE KEY UPDATE genome_size = 1500;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Genes (gene_id, gene_name, chromosome, species_id) VALUES (4, 'lacZ', 'chr1', 4) ON DUPLICATE KEY UPDATE chromosome = 'chr1';",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Mutations (mutation_id, gene_id, mutation_type, mutation_position) VALUES (4, 4, 'Frameshift', 80) ON DUPLICATE KEY UPDATE mutation_type = 'Frameshift';",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Alignments (alignment_id, alignment_score, mutation_id) VALUES (4, 60.4, 4) ON DUPLICATE KEY UPDATE alignment_score = 60.4;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Sequences (sequence_id, sequence_data, alignment_id) VALUES (4, 'GGCCGGCCGGCC', 4) ON DUPLICATE KEY UPDATE sequence_data = 'GGCCGGCCGGCC';",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Species (species_id, species_name, genome_size) VALUES (1, 'Human', 3200) ON CONFLICT (species_id) DO UPDATE SET species_name = 'Human', genome_size = 3200;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Genes (gene_id, gene_name, chromosome, species_id) VALUES (1, 'GeneA', 'Chr1', 1) ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'GeneA', chromosome = 'Chr1', species_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Mutations (mutation_id, gene_id, mutation_type, mutation_position) VALUES (1, 1, 'insertion', 100) ON CONFLICT (mutation_id) DO UPDATE SET gene_id = 1, mutation_type = 'insertion', mutation_position = 100;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Alignments (alignment_id, alignment_score, mutation_id) VALUES (1, 0.75, 1) ON CONFLICT (alignment_id) DO UPDATE SET alignment_score = 0.75, mutation_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Sequences (sequence_id, sequence_data, alignment_id) VALUES (1, 'ATCG', 1) ON CONFLICT (sequence_id) DO UPDATE SET sequence_data = 'ATCG', alignment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Species (species_id, species_name, genome_size) VALUES (2, 'Mouse', 2500) ON CONFLICT (species_id) DO UPDATE SET species_name = 'Mouse', genome_size = 2500;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Genes (gene_id, gene_name, chromosome, species_id) VALUES (2, 'GeneB', 'Chr2', 2) ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'GeneB', chromosome = 'Chr2', species_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Mutations (mutation_id, gene_id, mutation_type, mutation_position) VALUES (2, 2, 'deletion', 150) ON CONFLICT (mutation_id) DO UPDATE SET gene_id = 2, mutation_type = 'deletion', mutation_position = 150;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Alignments (alignment_id, alignment_score, mutation_id) VALUES (2, 0.80, 2) ON CONFLICT (alignment_id) DO UPDATE SET alignment_score = 0.80, mutation_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Sequences (sequence_id, sequence_data, alignment_id) VALUES (2, 'TACG', 2) ON CONFLICT (sequence_id) DO UPDATE SET sequence_data = 'TACG', alignment_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Species (species_id, species_name, genome_size) VALUES (3, 'Dog', 2800) ON CONFLICT (species_id) DO UPDATE SET species_name = 'Dog', genome_size = 2800;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Genes (gene_id, gene_name, chromosome, species_id) VALUES (3, 'GeneC', 'Chr3', 3) ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'GeneC', chromosome = 'Chr3', species_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Mutations (mutation_id, gene_id, mutation_type, mutation_position) VALUES (3, 3, 'substitution', 200) ON CONFLICT (mutation_id) DO UPDATE SET gene_id = 3, mutation_type = 'substitution', mutation_position = 200;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Alignments (alignment_id, alignment_score, mutation_id) VALUES (3, 0.85, 3) ON CONFLICT (alignment_id) DO UPDATE SET alignment_score = 0.85, mutation_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Sequences (sequence_id, sequence_data, alignment_id) VALUES (3, 'GCTA', 3) ON CONFLICT (sequence_id) DO UPDATE SET sequence_data = 'GCTA', alignment_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Species (species_id, species_name, genome_size) VALUES (4, 'Cat', 2600) ON CONFLICT (species_id) DO UPDATE SET species_name = 'Cat', genome_size = 2600;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Genes (gene_id, gene_name, chromosome, species_id) VALUES (4, 'GeneD', 'Chr4', 4) ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'GeneD', chromosome = 'Chr4', species_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Mutations (mutation_id, gene_id, mutation_type, mutation_position) VALUES (4, 4, 'deletion', 250) ON CONFLICT (mutation_id) DO UPDATE SET gene_id = 4, mutation_type = 'deletion', mutation_position = 250;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Alignments (alignment_id, alignment_score, mutation_id) VALUES (4, 0.90, 4) ON CONFLICT (alignment_id) DO UPDATE SET alignment_score = 0.90, mutation_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE Species (\n    species_id INT PRIMARY KEY,\n    species_name VARCHAR(50) NOT NULL,\n    genome_size INT\n);\n\nCREATE TABLE Genes (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(50) NOT NULL,\n    chromosome VARCHAR(10),\n    species_id INT REFERENCES Species(species_id)\n);\n\nCREATE TABLE Mutations (\n    mutation_id INT PRIMARY KEY,\n    gene_id INT REFERENCES Genes(gene_id),\n    mutation_type VARCHAR(20),\n    mutation_position INT\n);\n\nCREATE TABLE Alignments (\n    alignment_id INT PRIMARY KEY,\n    alignment_score FLOAT,\n    mutation_id INT REFERENCES Mutations(mutation_id)\n);\n\nCREATE TABLE Sequences (\n    sequence_id INT PRIMARY KEY,\n    sequence_data TEXT,\n    alignment_id INT REFERENCES Alignments(alignment_id)\n);\n\n### STATEMENT\n\nINSERT INTO Sequences (sequence_id, sequence_data, alignment_id) VALUES (4, 'TAGC', 4) ON CONFLICT (sequence_id) DO UPDATE SET sequence_data = 'TAGC', alignment_id = 4;"
]