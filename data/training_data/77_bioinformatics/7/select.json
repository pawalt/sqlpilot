[
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM patients LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis FROM patients WHERE patient_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, gender FROM patients WHERE birth_date > '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis FROM patients WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM patients WHERE diagnosis LIKE '%flu%';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, admission_date FROM patients ORDER BY admission_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT gender FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(LENGTH(treatment)) AS avg_treatment_length FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, birth_date, DATE_PART('year', AGE(birth_date)) AS age FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(diagnosis) AS diagnosis_count FROM patients GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, treatment FROM patients WHERE treatment IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, gender, diagnosis FROM patients WHERE diagnosis IS NOT NULL AND treatment IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, DATE_PART('year', AGE(birth_date)) AS age, birth_date FROM patients WHERE DATE_PART('year', AGE(birth_date)) > 50;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM patients WHERE gender = 'Female' ORDER BY birth_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, CONCAT('Patient ', patient_id) AS patient_identifier FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, DATE_PART('month', admission_date) AS admission_month FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis, treatment FROM patients WHERE diagnosis ILIKE 'cancer%';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, admission_date, DATE_PART('hour', admission_date) AS admission_hour FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, birth_date, CASE WHEN gender = 'Male' THEN 'Mr.' ELSE 'Ms.' END AS title FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis, treatment, DATE_PART('year', AGE(admission_date)) AS admission_age FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, diagnosis FROM patients WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM patients WHERE birth_date BETWEEN '1990-01-01' AND '2000-12-31';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT gender FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, treatment FROM patients WHERE diagnosis LIKE '%cancer%';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM patients ORDER BY admission_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_patients FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, birth_date FROM patients ORDER BY birth_date ASC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, admission_date FROM patients WHERE admission_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(*) AS total_visits FROM patients GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT diagnosis FROM patients WHERE treatment IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, admission_date, TIMESTAMPDIFF(DAY, admission_date, CURRENT_TIMESTAMP) AS days_admitted FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(TIMESTAMPDIFF(YEAR, birth_date, CURRENT_DATE)) AS average_age FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(*) AS total_visits FROM patients WHERE gender = 'Female' GROUP BY patient_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, treatment FROM patients WHERE diagnosis IN ('Flu', 'Cold', 'Fever');",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT patient_id) AS unique_patients FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, birth_date, admission_date FROM patients WHERE gender = 'Female' AND YEAR(admission_date) = 2021;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, treatment FROM patients WHERE admission_date < '2022-01-01' AND (diagnosis LIKE '%infection%' OR treatment LIKE '%antibiotics%');",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis, TIMESTAMPDIFF(MONTH, admission_date, CURRENT_TIMESTAMP) AS months_admitted FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    birth_date DATE,\n    gender VARCHAR(10),\n    diagnosis TEXT,\n    treatment TEXT,\n    admission_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT gender, AVG(TIMESTAMPDIFF(YEAR, birth_date, CURRENT_DATE)) AS average_age FROM patients GROUP BY gender ORDER BY gender ASC;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT * FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, age FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT * FROM patients WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT * FROM patients WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name FROM patients WHERE age BETWEEN 20 AND 30;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, age FROM patients ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_records;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT medical_condition, date_recorded FROM medical_records;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_records WHERE date_recorded >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT record_id, medical_condition FROM medical_records WHERE medical_condition LIKE '%flu%';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medical_condition FROM patients JOIN medical_records ON patients.patient_id = medical_records.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT * FROM patients LEFT JOIN medical_records ON patients.patient_id = medical_records.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT * FROM patients RIGHT JOIN medical_records ON patients.patient_id = medical_records.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT * FROM patients INNER JOIN medical_records ON patients.patient_id = medical_records.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medical_condition, date_recorded FROM patients JOIN medical_records ON patients.patient_id = medical_records.patient_id WHERE patients.age >= 35;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medical_condition, date_recorded FROM patients JOIN medical_records ON patients.patient_id = medical_records.patient_id WHERE medical_condition LIKE '%cancer%' AND patients.gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_patients FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS average_age FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(record_id) AS num_records FROM patients LEFT JOIN medical_records ON patients.patient_id = medical_records.patient_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT MAX(age) AS max_age, MIN(age) AS min_age FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT * FROM patients WHERE gender='Male';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, age FROM patients WHERE age > 50;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT * FROM patients p JOIN medical_records m ON p.patient_id = m.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medical_condition, date_recorded FROM patients p JOIN medical_records m ON p.patient_id = m.patient_id WHERE gender='Female';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT MAX(age) AS max_age FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT MIN(age) AS min_age FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS average_age FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(record_id) AS num_records FROM medical_records GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(record_id) AS num_records FROM patients p JOIN medical_records m ON p.patient_id = m.patient_id GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT medical_condition FROM medical_records;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medical_condition FROM patients p JOIN medical_records m ON p.patient_id = m.patient_id WHERE age < 30 AND gender='Female';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medical_condition FROM patients p JOIN medical_records m ON p.patient_id = m.patient_id WHERE date_recorded >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medical_condition, date_recorded FROM patients p JOIN medical_records m ON p.patient_id = m.patient_id WHERE medical_condition='Diabetes';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medical_condition, date_recorded FROM patients p JOIN medical_records m ON p.patient_id = m.patient_id ORDER BY date_recorded DESC;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_id, CASE WHEN gender='Male' THEN 'M' ELSE 'F' END AS gender_abbr FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT patient_id) AS num_patients FROM medical_records;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, age, COUNT(record_id) AS num_records FROM patients p JOIN medical_records m ON p.patient_id = m.patient_id GROUP BY patient_name, age HAVING num_records > 2;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, AVG(age) AS avg_age, COUNT(record_id) AS num_records FROM patients p JOIN medical_records m ON p.patient_id = m.patient_id GROUP BY patient_name HAVING avg_age > 40;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, age, COUNT(record_id) AS num_records FROM patients p JOIN medical_records m ON p.patient_id = m.patient_id GROUP BY patient_name, age ORDER BY num_records DESC;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, age, medical_condition FROM patients p JOIN medical_records m ON p.patient_id = m.patient_id WHERE (age < 25 AND medical_condition='Flu') OR (age >= 60 AND medical_condition='Hypertension');",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name STRING,\n  age INT,\n  gender STRING\n);\n\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  medical_condition STRING,\n  date_recorded DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, medical_condition, COUNT(record_id) AS num_records FROM patients p JOIN medical_records m ON p.patient_id = m.patient_id WHERE gender='Male' GROUP BY patient_name, medical_condition HAVING num_records > 1;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT * FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT name, age, gender FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT id, name, age, gender FROM patients WHERE age > 40;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT * FROM medical_records;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT diagnosis, prescription, date_created FROM medical_records WHERE diagnosis = 'COVID-19';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT * FROM appointments;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT appointment_date, doctor FROM appointments WHERE appointment_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT id, name, age, gender, height, weight FROM patients WHERE weight < 70;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT id, name, age, gender, height, weight FROM patients WHERE height BETWEEN 150 AND 170;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT patient_id, appointment_date, doctor FROM appointments WHERE doctor = 'Dr. Smith';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT name, age, gender FROM patients ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT * FROM medical_records WHERE prescription LIKE '%pain%';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT * FROM appointments WHERE appointment_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT id, name, age, gender FROM patients WHERE age <= 30 AND gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT appointment_date, doctor, reason FROM appointments WHERE reason IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT name, age, gender, height, weight FROM patients WHERE gender = 'Female' ORDER BY height DESC;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT id, name, age, gender, height, weight FROM patients WHERE age BETWEEN 20 AND 50 ORDER BY weight ASC;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT id, name, age, gender FROM patients WHERE age > 30 AND age < 50;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT patient_id, appointment_date, doctor FROM appointments WHERE outcome = 'Complete';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT name, age, doctor, reason FROM patients INNER JOIN appointments ON patients.id = appointments.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT * FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT name, age, gender FROM patients WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT * FROM medical_records WHERE diagnosis LIKE '%Cancer%';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT patients.name, medical_records.diagnosis FROM patients INNER JOIN medical_records ON patients.id = medical_records.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT patients.name, appointments.appointment_date, appointments.doctor FROM patients INNER JOIN appointments ON patients.id = appointments.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT patients.name, appointments.appointment_date, appointments.doctor FROM patients INNER JOIN appointments ON patients.id = appointments.patient_id WHERE appointments.appointment_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT patients.name, medical_records.diagnosis FROM patients LEFT JOIN medical_records ON patients.id = medical_records.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT patients.name, medical_records.diagnosis FROM patients RIGHT JOIN medical_records ON patients.id = medical_records.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT patients.name, medical_records.diagnosis, appointments.doctor FROM patients INNER JOIN medical_records ON patients.id = medical_records.patient_id INNER JOIN appointments ON patients.id = appointments.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_patients FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT AVG(weight) AS avg_weight FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT MAX(age) AS max_age FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT patients.name, COUNT(*) AS num_appointments FROM patients INNER JOIN appointments ON patients.id = appointments.patient_id GROUP BY patients.name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT patients.name, MAX(appointments.appointment_date) AS last_appointment FROM patients INNER JOIN appointments ON patients.id = appointments.patient_id GROUP BY patients.name;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT doctor, COUNT(*) AS num_appointments FROM appointments GROUP BY doctor ORDER BY COUNT(*) DESC;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT patients.name, appointments.appointment_date, appointments.doctor FROM patients INNER JOIN appointments ON patients.id = appointments.patient_id ORDER BY appointments.appointment_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT patients.name, appointments.appointment_date, appointments.doctor FROM patients INNER JOIN appointments ON patients.id = appointments.patient_id ORDER BY appointments.appointment_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT patients.name, medical_records.diagnosis, appointments.doctor FROM patients INNER JOIN medical_records ON patients.id = medical_records.patient_id INNER JOIN appointments ON patients.id = appointments.patient_id WHERE appointments.reason = 'Check-up' AND medical_records.diagnosis = 'Normal';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT patients.name, appointments.appointment_date, appointments.doctor FROM patients INNER JOIN appointments ON patients.id = appointments.patient_id WHERE appointments.outcome IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT doctor FROM appointments;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n  id INT PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  height FLOAT,\n  weight FLOAT\n);\n\nCREATE TABLE medical_records (\n  record_id INT PRIMARY KEY,\n  patient_id INT,\n  diagnosis TEXT,\n  prescription TEXT,\n  date_created DATE,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE appointments (\n  appointment_id INT PRIMARY KEY,\n  patient_id INT,\n  appointment_date DATE,\n  doctor VARCHAR(50),\n  reason TEXT,\n  outcome TEXT,\n  FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\n### STATEMENT\n\nSELECT patients.name, appointments.appointment_date, appointments.doctor FROM patients INNER JOIN appointments ON patients.id = appointments.patient_id WHERE appointments.appointment_date > (SELECT date('now'));",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT diagnosis, treatment FROM medical_records;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, gender FROM patients WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT trial_name, start_date, end_date FROM clinical_trials;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, address FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT record_id, patient_id, diagnosis FROM medical_records WHERE diagnosis LIKE '%COVID%';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT trial_name, description FROM clinical_trials WHERE start_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_data;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, address FROM patients WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT trial_name, end_date FROM clinical_trials WHERE end_date > '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, gender FROM patients WHERE date_of_birth < '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT record_id, patient_id, treatment FROM medical_records WHERE treatment != 'None';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT trial_name, description FROM clinical_trials WHERE description LIKE '%cancer%';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, gender FROM patients WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT trial_name, start_date FROM clinical_trials WHERE start_date BETWEEN '2022-01-01' AND '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM research_data WHERE research_type = 'Genetics';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, address FROM patients WHERE patient_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT trial_name, start_date, end_date FROM clinical_trials WHERE end_date < start_date;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT record_id, patient_id, diagnosis FROM medical_records WHERE patient_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT * FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, address FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, gender FROM patients WHERE date_of_birth >= '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.patient_name, clinical_trials.trial_name FROM patients JOIN clinical_trials ON patients.patient_id = clinical_trials.trial_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patients.patient_name, medical_records.diagnosis, medical_records.treatment FROM patients JOIN medical_records ON patients.patient_id = medical_records.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) FROM medical_records GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, CASE WHEN gender = 'Male' THEN 'M' ELSE 'F' END AS gender_short FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT trial_id, trial_name, start_date, end_date FROM clinical_trials WHERE start_date >= '2022-01-01' AND end_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, research_type FROM research_data WHERE research_type LIKE '%Genetics%';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) AS record_count FROM medical_records GROUP BY patient_id HAVING record_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, address FROM patients WHERE gender = 'Female' AND address LIKE '%CA%';",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, MAX(date_created) AS latest_record FROM medical_records GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis FROM patients LEFT JOIN medical_records ON patients.patient_id = medical_records.patient_id WHERE diagnosis IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, AVG(LENGTH(treatment)) AS avg_treatment_length FROM medical_records GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT trial_id, COUNT(*) AS participant_count FROM clinical_trials JOIN research_data ON clinical_trials.trial_id = research_data.trial_id GROUP BY trial_id;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT data_id, research_type, data FROM research_data WHERE LENGTH(data) > 10000;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth FROM patients ORDER BY date_of_birth DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, CONCAT(patient_name, ' - ', gender) AS patient_info FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) AS research_count FROM research_data GROUP BY patient_id HAVING research_count > 1;",
  "### TABLEDATA\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(255),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other'),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    record_id INT PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    treatment TEXT,\n    date_created TIMESTAMP,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\nCREATE TABLE clinical_trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE research_data (\n    data_id INT PRIMARY KEY,\n    patient_id INT,\n    research_type VARCHAR(255),\n    data BLOB,\n    FOREIGN KEY (patient_id) REFERENCES patients(patient_id)\n);\n\n### STATEMENT\n\nSELECT trial_id, trial_name, COUNT(*) AS participant_count FROM clinical_trials JOIN research_data ON clinical_trials.trial_id = research_data.trial_id GROUP BY trial_id HAVING participant_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, date_of_birth FROM Patients WHERE gender='Male';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, address FROM Patients WHERE date_of_birth < '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, address FROM Patients WHERE gender='Female' AND date_of_birth > '1980-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM PatientVisits;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT visit_id, patient_id, visit_date FROM PatientVisits WHERE diagnosis='COVID-19';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT visit_id, patient_id, visit_date, diagnosis FROM PatientVisits WHERE prescription IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT diagnosis, prescription FROM PatientVisits WHERE visit_date < '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM MedicalHistory;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT history_id, patient_id, condition, start_date FROM MedicalHistory WHERE end_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT condition, start_date FROM MedicalHistory WHERE end_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM LabResults;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT result_id, visit_id, test_name, result FROM LabResults WHERE result_date = '2021-06-15';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT test_name, result FROM LabResults WHERE result_date > '2020-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM ResearchData;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT research_id, patient_id, data_type, data_value FROM ResearchData WHERE record_date < '2021-10-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT data_type, data_value FROM ResearchData WHERE patient_id = 'abc123';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_id, record_date FROM ResearchData WHERE data_type='vital_signs';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Patients JOIN PatientVisits ON Patients.patient_id = PatientVisits.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT PatientVisits.patient_id, Patients.patient_name, PatientVisits.visit_date FROM Patients INNER JOIN PatientVisits ON Patients.patient_id = PatientVisits.patient_id WHERE PatientVisits.diagnosis = 'Hypertension';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, gender FROM Patients WHERE gender='Male';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, PatientVisits.diagnosis FROM Patients JOIN PatientVisits ON Patients.patient_id = PatientVisits.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, LabResults.test_name FROM Patients JOIN PatientVisits ON Patients.patient_id = PatientVisits.patient_id JOIN LabResults ON PatientVisits.visit_id = LabResults.visit_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT Patients.patient_name, PatientVisits.diagnosis FROM Patients JOIN PatientVisits ON Patients.patient_id = PatientVisits.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, COUNT(PatientVisits.visit_id) AS num_visits FROM Patients LEFT JOIN PatientVisits ON Patients.patient_id = PatientVisits.patient_id GROUP BY Patients.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, MedicalHistory.condition FROM Patients LEFT JOIN MedicalHistory ON Patients.patient_id = MedicalHistory.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT CONCAT(patient_name, ' - ', address) AS patient_details FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, date_of_birth, gender FROM Patients WHERE date_of_birth BETWEEN '1990-01-01' AND '2000-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, prescription FROM Patients JOIN PatientVisits ON Patients.patient_id = PatientVisits.patient_id WHERE PatientVisits.diagnosis LIKE '%flu%';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, data_type, data_value->>'blood_pressure' AS blood_pressure FROM Patients JOIN ResearchData ON Patients.patient_id = ResearchData.patient_id WHERE data_type='Vital Signs';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis, result FROM Patients JOIN PatientVisits ON Patients.patient_id = PatientVisits.patient_id JOIN LabResults ON PatientVisits.visit_id = LabResults.visit_id WHERE result='Negative';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, end_date - start_date AS duration FROM Patients JOIN MedicalHistory ON Patients.patient_id = MedicalHistory.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, AVG(result) AS avg_result FROM Patients JOIN PatientVisits ON Patients.patient_id = PatientVisits.patient_id JOIN LabResults ON PatientVisits.visit_id = LabResults.visit_id GROUP BY Patients.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(DISTINCT data_type) AS num_data_types FROM Patients JOIN ResearchData ON Patients.patient_id = ResearchData.patient_id GROUP BY Patients.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, diagnosis, result_date FROM Patients JOIN PatientVisits ON Patients.patient_id = PatientVisits.patient_id JOIN LabResults ON PatientVisits.visit_id = LabResults.visit_id WHERE result_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, MIN(result) AS min_result, MAX(result) AS max_result FROM Patients JOIN PatientVisits ON Patients.patient_id = PatientVisits.patient_id JOIN LabResults ON PatientVisits.visit_id = LabResults.visit_id GROUP BY Patients.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, JSONB_ARRAY_ELEMENTS(data_value->'allergies') AS allergy FROM Patients JOIN ResearchData ON Patients.patient_id = ResearchData.patient_id WHERE data_type='Allergies';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, gender, COUNT(visit_id) AS num_visits FROM Patients LEFT JOIN PatientVisits ON Patients.patient_id = PatientVisits.patient_id GROUP BY patient_name, gender;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, condition, end_date - start_date AS duration FROM Patients JOIN MedicalHistory ON Patients.patient_id = MedicalHistory.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id UUID PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  date_of_birth DATE,\n  gender VARCHAR(10),\n  address TEXT\n);\n\nCREATE TABLE PatientVisits (\n  visit_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  visit_date TIMESTAMP,\n  diagnosis TEXT,\n  prescription TEXT\n);\n\nCREATE TABLE MedicalHistory (\n  history_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  condition TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE LabResults (\n  result_id UUID PRIMARY KEY,\n  visit_id UUID REFERENCES PatientVisits(visit_id),\n  test_name VARCHAR(50),\n  result TEXT,\n  result_date DATE\n);\n\nCREATE TABLE ResearchData (\n  research_id UUID PRIMARY KEY,\n  patient_id UUID REFERENCES Patients(patient_id),\n  data_type TEXT,\n  data_value JSON,\n  record_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_name, prescription, result_date FROM Patients JOIN PatientVisits ON Patients.patient_id = PatientVisits.patient_id JOIN LabResults ON PatientVisits.visit_id = LabResults.visit_id WHERE prescription LIKE '%antibiotic%' AND result='Positive';"
]