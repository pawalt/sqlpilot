<t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><s>REVOKE INSERT, UPDATE, DELETE ON collaboration_tools FROM user1</s>
<t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><s>revoke insert, update, delete on collaboration_tools from user1</s>
<t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><s>REVOKE SELECT ON collaboration_tools(tool_id, tool_name) FROM user2</s>
<t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><s>revoke select on collaboration_tools(tool_id, tool_name) from user2</s>
<t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><s>REVOKE ALL PRIVILEGES ON collaboration_tools FROM user3</s>
<t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><s>revoke all privileges on collaboration_tools from user3</s>
<t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><s>REVOKE INSERT, UPDATE ON Projects TO Members;</s>
<t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><s>revoke insert, update on projects to members;</s>
<t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><s>REVOKE INSERT, UPDATE ON Projects TO Members;</s>
<t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><s>revoke insert, update on projects to members;</s>
<t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><s>REVOKE SELECT, DELETE ON Members TO Projects;</s>
<t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><s>revoke select, delete on members to projects;</s>
<t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><s>REVOKE SELECT, DELETE ON Members TO Projects;</s>
<t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><s>revoke select, delete on members to projects;</s>
<t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><s>REVOKE ALL ON Projects, Members TO PUBLIC;</s>
<t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><s>revoke all on projects, members to public;</s>
<t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><s>REVOKE ALL ON Projects, Members TO PUBLIC;</s>
<t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><s>revoke all on projects, members to public;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>REVOKE SELECT ON TABLE users FROM PUBLIC;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>revoke select on table users from public;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>REVOKE SELECT ON TABLE users FROM PUBLIC;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>revoke select on table users from public;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>REVOKE SELECT ON TABLE users FROM PUBLIC;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>revoke select on table users from public;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>REVOKE SELECT ON TABLE users FROM PUBLIC;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>revoke select on table users from public;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>REVOKE SELECT ON TABLE users FROM PUBLIC;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>revoke select on table users from public;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>REVOKE SELECT ON TABLE users FROM PUBLIC;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>revoke select on table users from public;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>REVOKE INSERT, UPDATE ON TABLE projects FROM PUBLIC;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>revoke insert, update on table projects from public;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>REVOKE INSERT, UPDATE ON TABLE projects FROM PUBLIC;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>revoke insert, update on table projects from public;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>REVOKE INSERT, UPDATE ON TABLE projects FROM PUBLIC;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>revoke insert, update on table projects from public;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>REVOKE INSERT, UPDATE ON TABLE projects FROM PUBLIC;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>revoke insert, update on table projects from public;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>REVOKE INSERT, UPDATE ON TABLE projects FROM PUBLIC;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>revoke insert, update on table projects from public;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>REVOKE INSERT, UPDATE ON TABLE projects FROM PUBLIC;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>revoke insert, update on table projects from public;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>REVOKE DELETE ON TABLE tasks FROM PUBLIC;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>revoke delete on table tasks from public;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>REVOKE DELETE ON TABLE tasks FROM PUBLIC;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>revoke delete on table tasks from public;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>REVOKE DELETE ON TABLE tasks FROM PUBLIC;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>revoke delete on table tasks from public;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>REVOKE DELETE ON TABLE tasks FROM PUBLIC;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>revoke delete on table tasks from public;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>REVOKE DELETE ON TABLE tasks FROM PUBLIC;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>revoke delete on table tasks from public;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>REVOKE DELETE ON TABLE tasks FROM PUBLIC;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>revoke delete on table tasks from public;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE INSERT ON users FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke insert on users from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE DELETE, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke delete, update on teams from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>REVOKE SELECT ON projects FROM public</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>revoke select on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE SELECT ON users FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke select on users from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE INSERT, UPDATE ON teams FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke insert, update on teams from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>REVOKE DELETE ON projects FROM public</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>revoke delete on projects from public</s>
