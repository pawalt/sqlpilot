<t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><stat>INSERT INTO collaboration_tools (tool_id, tool_name, tool_description, tool_category) VALUES (1, 'Slack', 'Messaging and collaboration tool', 'Communication')</stat><divider><t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><stat>insert into collaboration_tools (tool_id, tool_name, tool_description, tool_category) values (1, 'slack', 'messaging and collaboration tool', 'communication')</stat><divider><t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><stat>INSERT INTO collaboration_tools (tool_id, tool_name, tool_description, tool_category) VALUES (2, 'Trello', 'Task management tool', 'Project Management')</stat><divider><t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><stat>insert into collaboration_tools (tool_id, tool_name, tool_description, tool_category) values (2, 'trello', 'task management tool', 'project management')</stat><divider><t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><stat>INSERT INTO collaboration_tools (tool_id, tool_name, tool_description, tool_category) VALUES (3, 'Google Docs', 'Document collaboration tool', 'Document Management')</stat><divider><t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><stat>insert into collaboration_tools (tool_id, tool_name, tool_description, tool_category) values (3, 'google docs', 'document collaboration tool', 'document management')</stat><divider><t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><stat>INSERT INTO Projects (projectID, project_name, project_description, created_date) VALUES (1, 'Project A', 'Description of Project A', '2022-01-01')</stat><divider><t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><stat>insert into projects (projectid, project_name, project_description, created_date) values (1, 'project a', 'description of project a', '2022-01-01')</stat><divider><t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><stat>INSERT INTO Projects (projectID, project_name, project_description, created_date) VALUES (1, 'Project A', 'Description of Project A', '2022-01-01')</stat><divider><t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><stat>insert into projects (projectid, project_name, project_description, created_date) values (1, 'project a', 'description of project a', '2022-01-01')</stat><divider><t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><stat>INSERT INTO Members (memberID, member_name, member_email, member_role, join_date) VALUES (1, 'John Doe', 'john.doe@example.com', 'Developer', '2022-01-01')</stat><divider><t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><stat>insert into members (memberid, member_name, member_email, member_role, join_date) values (1, 'john doe', 'john.doe@example.com', 'developer', '2022-01-01')</stat><divider><t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><stat>INSERT INTO Members (memberID, member_name, member_email, member_role, join_date) VALUES (1, 'John Doe', 'john.doe@example.com', 'Developer', '2022-01-01')</stat><divider><t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><stat>insert into members (memberid, member_name, member_email, member_role, join_date) values (1, 'john doe', 'john.doe@example.com', 'developer', '2022-01-01')</stat><divider><t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><stat>INSERT INTO Projects (projectID, project_name, project_description, created_date) VALUES (2, 'Project B', 'Description of Project B', '2022-02-01')</stat><divider><t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><stat>insert into projects (projectid, project_name, project_description, created_date) values (2, 'project b', 'description of project b', '2022-02-01')</stat><divider><t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><stat>INSERT INTO Projects (projectID, project_name, project_description, created_date) VALUES (2, 'Project B', 'Description of Project B', '2022-02-01')</stat><divider><t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><stat>insert into projects (projectid, project_name, project_description, created_date) values (2, 'project b', 'description of project b', '2022-02-01')</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES ('1f6b43b5-a49e-4a90-a608-617b5b1db1f5', 'john_doe', 'john.doe@example.com', '2022-03-01 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><stat>insert into users (user_id, username, email, created_at) values ('1f6b43b5-a49e-4a90-a608-617b5b1db1f5', 'john_doe', 'john.doe@example.com', '2022-03-01 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES ('1f6b43b5-a49e-4a90-a608-617b5b1db1f5', 'john_doe', 'john.doe@example.com', '2022-03-01 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><stat>insert into users (user_id, username, email, created_at) values ('1f6b43b5-a49e-4a90-a608-617b5b1db1f5', 'john_doe', 'john.doe@example.com', '2022-03-01 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES ('1f6b43b5-a49e-4a90-a608-617b5b1db1f5', 'john_doe', 'john.doe@example.com', '2022-03-01 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><stat>insert into users (user_id, username, email, created_at) values ('1f6b43b5-a49e-4a90-a608-617b5b1db1f5', 'john_doe', 'john.doe@example.com', '2022-03-01 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES ('1f6b43b5-a49e-4a90-a608-617b5b1db1f5', 'john_doe', 'john.doe@example.com', '2022-03-01 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><stat>insert into users (user_id, username, email, created_at) values ('1f6b43b5-a49e-4a90-a608-617b5b1db1f5', 'john_doe', 'john.doe@example.com', '2022-03-01 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES ('1f6b43b5-a49e-4a90-a608-617b5b1db1f5', 'john_doe', 'john.doe@example.com', '2022-03-01 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><stat>insert into users (user_id, username, email, created_at) values ('1f6b43b5-a49e-4a90-a608-617b5b1db1f5', 'john_doe', 'john.doe@example.com', '2022-03-01 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES ('1f6b43b5-a49e-4a90-a608-617b5b1db1f5', 'john_doe', 'john.doe@example.com', '2022-03-01 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><stat>insert into users (user_id, username, email, created_at) values ('1f6b43b5-a49e-4a90-a608-617b5b1db1f5', 'john_doe', 'john.doe@example.com', '2022-03-01 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><stat>INSERT INTO projects (project_id, project_name, created_by, created_at) VALUES ('5c639880-4f41-4483-924e-8a6ffad4d0f9', 'Project X', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-01 12:00:00');</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><stat>insert into projects (project_id, project_name, created_by, created_at) values ('5c639880-4f41-4483-924e-8a6ffad4d0f9', 'project x', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-01 12:00:00');</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><stat>INSERT INTO projects (project_id, project_name, created_by, created_at) VALUES ('5c639880-4f41-4483-924e-8a6ffad4d0f9', 'Project X', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-01 12:00:00');</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><stat>insert into projects (project_id, project_name, created_by, created_at) values ('5c639880-4f41-4483-924e-8a6ffad4d0f9', 'project x', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-01 12:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><stat>INSERT INTO projects (project_id, project_name, created_by, created_at) VALUES ('5c639880-4f41-4483-924e-8a6ffad4d0f9', 'Project X', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-01 12:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><stat>insert into projects (project_id, project_name, created_by, created_at) values ('5c639880-4f41-4483-924e-8a6ffad4d0f9', 'project x', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-01 12:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><stat>INSERT INTO projects (project_id, project_name, created_by, created_at) VALUES ('5c639880-4f41-4483-924e-8a6ffad4d0f9', 'Project X', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-01 12:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><stat>insert into projects (project_id, project_name, created_by, created_at) values ('5c639880-4f41-4483-924e-8a6ffad4d0f9', 'project x', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-01 12:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><stat>INSERT INTO projects (project_id, project_name, created_by, created_at) VALUES ('5c639880-4f41-4483-924e-8a6ffad4d0f9', 'Project X', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-01 12:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><stat>insert into projects (project_id, project_name, created_by, created_at) values ('5c639880-4f41-4483-924e-8a6ffad4d0f9', 'project x', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-01 12:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><stat>INSERT INTO projects (project_id, project_name, created_by, created_at) VALUES ('5c639880-4f41-4483-924e-8a6ffad4d0f9', 'Project X', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-01 12:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><stat>insert into projects (project_id, project_name, created_by, created_at) values ('5c639880-4f41-4483-924e-8a6ffad4d0f9', 'project x', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-01 12:00:00');</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><stat>INSERT INTO tasks (task_id, task_name, project_id, assigned_to, due_date) VALUES ('efbc048c-43af-4ea8-9c28-97c797d2924c', 'Task A', '5c639880-4f41-4483-924e-8a6ffad4d0f9', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-15');</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><stat>insert into tasks (task_id, task_name, project_id, assigned_to, due_date) values ('efbc048c-43af-4ea8-9c28-97c797d2924c', 'task a', '5c639880-4f41-4483-924e-8a6ffad4d0f9', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-15');</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><stat>INSERT INTO tasks (task_id, task_name, project_id, assigned_to, due_date) VALUES ('efbc048c-43af-4ea8-9c28-97c797d2924c', 'Task A', '5c639880-4f41-4483-924e-8a6ffad4d0f9', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-15');</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><stat>insert into tasks (task_id, task_name, project_id, assigned_to, due_date) values ('efbc048c-43af-4ea8-9c28-97c797d2924c', 'task a', '5c639880-4f41-4483-924e-8a6ffad4d0f9', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-15');</stat><divider><t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><stat>INSERT INTO tasks (task_id, task_name, project_id, assigned_to, due_date) VALUES ('efbc048c-43af-4ea8-9c28-97c797d2924c', 'Task A', '5c639880-4f41-4483-924e-8a6ffad4d0f9', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-15');</stat><divider><t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><stat>insert into tasks (task_id, task_name, project_id, assigned_to, due_date) values ('efbc048c-43af-4ea8-9c28-97c797d2924c', 'task a', '5c639880-4f41-4483-924e-8a6ffad4d0f9', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-15');</stat><divider><t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><stat>INSERT INTO tasks (task_id, task_name, project_id, assigned_to, due_date) VALUES ('efbc048c-43af-4ea8-9c28-97c797d2924c', 'Task A', '5c639880-4f41-4483-924e-8a6ffad4d0f9', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-15');</stat><divider><t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><stat>insert into tasks (task_id, task_name, project_id, assigned_to, due_date) values ('efbc048c-43af-4ea8-9c28-97c797d2924c', 'task a', '5c639880-4f41-4483-924e-8a6ffad4d0f9', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-15');</stat><divider><t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><stat>INSERT INTO tasks (task_id, task_name, project_id, assigned_to, due_date) VALUES ('efbc048c-43af-4ea8-9c28-97c797d2924c', 'Task A', '5c639880-4f41-4483-924e-8a6ffad4d0f9', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-15');</stat><divider><t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><stat>insert into tasks (task_id, task_name, project_id, assigned_to, due_date) values ('efbc048c-43af-4ea8-9c28-97c797d2924c', 'task a', '5c639880-4f41-4483-924e-8a6ffad4d0f9', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-15');</stat><divider><t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><stat>INSERT INTO tasks (task_id, task_name, project_id, assigned_to, due_date) VALUES ('efbc048c-43af-4ea8-9c28-97c797d2924c', 'Task A', '5c639880-4f41-4483-924e-8a6ffad4d0f9', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-15');</stat><divider><t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><stat>insert into tasks (task_id, task_name, project_id, assigned_to, due_date) values ('efbc048c-43af-4ea8-9c28-97c797d2924c', 'task a', '5c639880-4f41-4483-924e-8a6ffad4d0f9', '1f6b43b5-a49e-4a90-a608-617b5b1db1f5', '2022-03-15');</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01 12:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO teams (team_id, team_name, description, created_at) VALUES (1, 'Team A', 'A great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into teams (team_id, team_name, description, created_at) values (1, 'team a', 'a great team', '2022-01-02 08:00:00')</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>INSERT INTO projects (project_id, project_name, description, start_date, end_date, team_id) VALUES (1, 'Project X', 'Project X description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><stat>insert into projects (project_id, project_name, description, start_date, end_date, team_id) values (1, 'project x', 'project x description', '2022-01-03', '2022-02-03', 1)</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO users (user_id, username, email, created_at) VALUES (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into users (user_id, username, email, created_at) values (1, 'john_doe', 'john@example.com', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO teams (team_id, team_name, created_at) VALUES (1, 'Development Team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into teams (team_id, team_name, created_at) values (1, 'development team', '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>INSERT INTO projects (project_id, project_name, team_id, created_at) VALUES (1, 'Project X', 1, '2021-10-15 10:00:00');</stat><divider><t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><stat>insert into projects (project_id, project_name, team_id, created_at) values (1, 'project x', 1, '2021-10-15 10:00:00');</stat>