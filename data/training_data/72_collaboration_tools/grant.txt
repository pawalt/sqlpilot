<t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><s>GRANT SELECT ON collaboration_tools TO user1</s>
<t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><s>grant select on collaboration_tools to user1</s>
<t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><s>GRANT INSERT, UPDATE ON collaboration_tools TO user2</s>
<t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><s>grant insert, update on collaboration_tools to user2</s>
<t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><s>GRANT DELETE ON collaboration_tools TO user3</s>
<t>CREATE TABLE collaboration_tools (     tool_id INT PRIMARY KEY,     tool_name VARCHAR(50) NOT NULL,     tool_description TEXT,     tool_category VARCHAR(30) )</t><s>grant delete on collaboration_tools to user3</s>
<t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><s>GRANT SELECT, INSERT, UPDATE ON Projects TO user1</s>
<t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><s>grant select, insert, update on projects to user1</s>
<t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><s>GRANT SELECT, INSERT, UPDATE ON Projects TO user1</s>
<t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><s>grant select, insert, update on projects to user1</s>
<t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><s>GRANT SELECT, INSERT, DELETE ON Members TO user2</s>
<t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><s>grant select, insert, delete on members to user2</s>
<t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><s>GRANT SELECT, INSERT, DELETE ON Members TO user2</s>
<t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><s>grant select, insert, delete on members to user2</s>
<t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><s>GRANT ALL PRIVILEGES ON Projects, Members TO admin</s>
<t>CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)

CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)</t><s>grant all privileges on projects, members to admin</s>
<t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><s>GRANT ALL PRIVILEGES ON Projects, Members TO admin</s>
<t>CREATE TABLE Members (memberID INT PRIMARY KEY, member_name VARCHAR(255) NOT NULL, member_email VARCHAR(255) UNIQUE, member_role VARCHAR(50), join_date DATE)

CREATE TABLE Projects (projectID INT PRIMARY KEY, project_name VARCHAR(255) NOT NULL, project_description TEXT, created_date DATE)</t><s>grant all privileges on projects, members to admin</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>GRANT SELECT ON users TO analyst;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>grant select on users to analyst;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>GRANT SELECT ON users TO analyst;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>grant select on users to analyst;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>GRANT SELECT ON users TO analyst;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>grant select on users to analyst;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>GRANT SELECT ON users TO analyst;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>grant select on users to analyst;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>GRANT SELECT ON users TO analyst;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>grant select on users to analyst;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>GRANT SELECT ON users TO analyst;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>grant select on users to analyst;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>GRANT SELECT, INSERT, UPDATE ON projects TO developer;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>grant select, insert, update on projects to developer;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>GRANT SELECT, INSERT, UPDATE ON projects TO developer;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>grant select, insert, update on projects to developer;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>GRANT SELECT, INSERT, UPDATE ON projects TO developer;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>grant select, insert, update on projects to developer;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>GRANT SELECT, INSERT, UPDATE ON projects TO developer;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>grant select, insert, update on projects to developer;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>GRANT SELECT, INSERT, UPDATE ON projects TO developer;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>grant select, insert, update on projects to developer;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>GRANT SELECT, INSERT, UPDATE ON projects TO developer;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>grant select, insert, update on projects to developer;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON tasks TO admin;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>grant select, insert, update, delete on tasks to admin;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON tasks TO admin;</s>
<t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>grant select, insert, update, delete on tasks to admin;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON tasks TO admin;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);</t><s>grant select, insert, update, delete on tasks to admin;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON tasks TO admin;</s>
<t>CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>grant select, insert, update, delete on tasks to admin;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON tasks TO admin;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);</t><s>grant select, insert, update, delete on tasks to admin;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON tasks TO admin;</s>
<t>CREATE TABLE tasks (
    task_id UUID PRIMARY KEY,
    task_name VARCHAR(100) NOT NULL,
    project_id UUID REFERENCES projects(project_id),
    assigned_to UUID REFERENCES users(user_id),
    due_date DATE
);

CREATE TABLE projects (
    project_id UUID PRIMARY KEY,
    project_name VARCHAR(50) NOT NULL,
    created_by UUID REFERENCES users(user_id),
    created_at TIMESTAMP
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP
);</t><s>grant select, insert, update, delete on tasks to admin;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on users to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON teams TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on teams to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>GRANT SELECT, INSERT, UPDATE, DELETE ON projects TO user_role;</s>
<t>CREATE TABLE tasks ( task_id SERIAL PRIMARY KEY, task_name VARCHAR(100) NOT NULL, description TEXT, deadline DATE NOT NULL, user_id INT REFERENCES users(user_id), project_id INT REFERENCES projects(project_id) )

CREATE TABLE projects ( project_id INT PRIMARY KEY, project_name VARCHAR(100) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, team_id INT REFERENCES teams(team_id) )

CREATE TABLE teams ( team_id INT PRIMARY KEY, team_name VARCHAR(50) NOT NULL, description TEXT, created_at TIMESTAMP NOT NULL )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP NOT NULL )</t><s>grant select, insert, update, delete on projects to user_role;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, INSERT ON users TO marketing_user;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, insert on users to marketing_user;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, DELETE ON teams TO team_lead;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, delete on teams to team_lead;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>GRANT SELECT, UPDATE ON projects TO project_manager;</s>
<t>CREATE TABLE messages (
    message_id INT PRIMARY KEY,
    sender_id INT REFERENCES users(user_id),
    receiver_id INT REFERENCES users(user_id),
    message_text STRING,
    sent_at TIMESTAMP
);


CREATE TABLE tasks (
    task_id INT PRIMARY KEY,
    task_name STRING NOT NULL,
    project_id INT REFERENCES projects(project_id),
    assigned_to INT REFERENCES users(user_id),
    due_date DATE,
    status STRING
);


CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name STRING NOT NULL,
    team_id INT REFERENCES teams(team_id),
    created_at TIMESTAMP
);


CREATE TABLE teams (
    team_id INT PRIMARY KEY,
    team_name STRING NOT NULL,
    created_at TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username STRING NOT NULL,
    email STRING NOT NULL,
    created_at TIMESTAMP
);
</t><s>grant select, update on projects to project_manager;</s>
