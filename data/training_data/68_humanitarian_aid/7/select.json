[
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM aid_organizations;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_name, contact_person FROM aid_organizations;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_id, org_name, email FROM aid_organizations WHERE org_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM aid_organizations WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_name, phone_number FROM aid_organizations WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_id, org_name, address FROM aid_organizations WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM aid_organizations;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(org_id) FROM aid_organizations;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(org_id) FROM aid_organizations;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(org_id) FROM aid_organizations;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT SUM(org_id) FROM aid_organizations;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT org_name FROM aid_organizations;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_id, org_name FROM aid_organizations ORDER BY org_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_id, org_name FROM aid_organizations ORDER BY org_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM aid_organizations LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM aid_organizations OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM aid_organizations WHERE org_name = 'Red Cross';",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM aid_organizations WHERE org_name = 'Save the Children';",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM aid_organizations WHERE org_name LIKE 'UN%';",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_id, org_name, email FROM aid_organizations WHERE email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM aid_organizations;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_name, address FROM aid_organizations;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_name, contact_person, phone_number FROM aid_organizations WHERE org_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM aid_organizations WHERE org_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_id, org_name, email FROM aid_organizations WHERE phone_number LIKE '%123%';",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM aid_organizations;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT contact_person FROM aid_organizations;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_id, org_name, email FROM aid_organizations WHERE org_name LIKE 'ABC%';",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM aid_organizations WHERE email LIKE '%example.com';",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_id, org_name, phone_number FROM aid_organizations WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_id, org_name, email FROM aid_organizations WHERE contact_person IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_id, org_name, contact_person FROM aid_organizations WHERE email = 'info@organization.com';",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_name, phone_number FROM aid_organizations ORDER BY org_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_name, address FROM aid_organizations ORDER BY org_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_id, org_name, email FROM aid_organizations WHERE org_name IN ('Organization A', 'Organization B');",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_name, phone_number FROM aid_organizations WHERE org_name <> 'Organization C';",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_name, email FROM aid_organizations WHERE address LIKE '%City%' AND phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_id, contact_person FROM aid_organizations WHERE org_name = 'Organization D';",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_name, CONCAT(contact_person, ' - ', phone_number) AS contact_info FROM aid_organizations;",
  "### TABLEDATA\n\nCREATE TABLE aid_organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50) NOT NULL,\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15),\n  email VARCHAR(50) UNIQUE,\n  address TEXT\n);\n\n### STATEMENT\n\nSELECT org_id, org_name, contact_person, email FROM aid_organizations WHERE email LIKE '%@domain.com';",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Organizations;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location FROM Organizations;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, contact_person FROM Organizations;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, phone_number FROM Organizations;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT project_name, start_date FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT project_name, end_date FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT project_name, budget FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT Organizations.org_name, Projects.project_name FROM Organizations JOIN Projects ON Organizations.org_id = Projects.org_id;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT Organizations.org_name, Projects.project_name FROM Organizations INNER JOIN Projects ON Organizations.org_id = Projects.org_id;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT Organizations.org_name, Projects.project_name FROM Organizations LEFT JOIN Projects ON Organizations.org_id = Projects.org_id;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT Organizations.org_name, Projects.project_name FROM Organizations RIGHT JOIN Projects ON Organizations.org_id = Projects.org_id;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Organizations;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT MAX(budget) FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT MIN(budget) FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT AVG(budget) FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT SUM(budget) FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT org_name FROM Organizations;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT project_name FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number FROM Organizations;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT project_name, start_date, end_date, budget FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations INNER JOIN Projects ON Organizations.org_id = Projects.org_id;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations LEFT JOIN Projects ON Organizations.org_id = Projects.org_id;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations RIGHT JOIN Projects ON Organizations.org_id = Projects.org_id;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations INNER JOIN Projects ON Organizations.org_id = Projects.org_id WHERE Projects.budget > 10000;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations LEFT JOIN Projects ON Organizations.org_id = Projects.org_id WHERE Projects.start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations RIGHT JOIN Projects ON Organizations.org_id = Projects.org_id WHERE Organizations.location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations INNER JOIN Projects ON Organizations.org_id = Projects.org_id WHERE Organizations.org_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations LEFT JOIN Projects ON Organizations.org_id = Projects.org_id ORDER BY Organizations.org_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations RIGHT JOIN Projects ON Organizations.org_id = Projects.org_id ORDER BY Projects.budget DESC;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations INNER JOIN Projects ON Organizations.org_id = Projects.org_id GROUP BY Organizations.org_name;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, MAX(budget) AS max_budget FROM Organizations INNER JOIN Projects ON Organizations.org_id = Projects.org_id GROUP BY org_name;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS project_count, org_name, location, contact_person, phone_number FROM Organizations LEFT JOIN Projects ON Organizations.org_id = Projects.org_id GROUP BY Organizations.org_id;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations INNER JOIN Projects ON Organizations.org_id = Projects.org_id HAVING SUM(budget) > 50000;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations LEFT JOIN Projects ON Organizations.org_id = Projects.org_id LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations RIGHT JOIN Projects ON Organizations.org_id = Projects.org_id OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations INNER JOIN Projects ON Organizations.org_id = Projects.org_id WHERE Projects.start_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations LEFT JOIN Projects ON Organizations.org_id = Projects.org_id WHERE Organizations.location LIKE '%London%';",
  "### TABLEDATA\n\nCREATE TABLE Organizations (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(50),\n  location VARCHAR(50),\n  contact_person VARCHAR(50),\n  phone_number VARCHAR(15)\n);\n\nCREATE TABLE Projects (\n  project_id INT PRIMARY KEY,\n  project_name VARCHAR(50),\n  org_id INT,\n  start_date DATE,\n  end_date DATE,\n  budget DECIMAL(10, 2),\n  FOREIGN KEY (org_id) REFERENCES Organizations(org_id)\n);\n\n### STATEMENT\n\nSELECT org_name, location, contact_person, phone_number, project_name, start_date, end_date, budget FROM Organizations RIGHT JOIN Projects ON Organizations.org_id = Projects.org_id WHERE Projects.end_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM organization;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT org_name, org_type FROM organization;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM contact;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT contact_name, email FROM contact;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM aid_data;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT aid_type, quantity FROM aid_data;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT org_id, org_name, org_type FROM organization WHERE org_type = 'Non-profit';",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT contact_id, contact_name, phone_number FROM contact WHERE org_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT aid_id, aid_type, location FROM aid_data WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM organization WHERE org_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT contact_name, email FROM contact WHERE contact_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT org_name, org_type FROM organization WHERE org_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT contact_id, contact_name, phone_number FROM contact WHERE email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT aid_id, aid_type, location FROM aid_data WHERE quantity > 50;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT org_id, org_name, org_type FROM organization WHERE org_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT contact_id, contact_name, phone_number FROM contact WHERE org_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT aid_id, aid_type, location FROM aid_data WHERE location LIKE '%City%';",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM organization WHERE org_type = 'Government';",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT contact_name, email FROM contact WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT org_name, org_type FROM organization WHERE org_type = 'NGO';",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM organization;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT org_id, org_name FROM organization WHERE org_type = 'NGO';",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT contact.contact_id, contact.contact_name, organization.org_name FROM contact JOIN organization ON contact.org_id = organization.org_id;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT organization.org_name, SUM(aid_data.quantity) AS total_quantity FROM organization LEFT JOIN aid_data ON organization.org_id = aid_data.org_id GROUP BY organization.org_name;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT contact.contact_name, contact.email, aid_data.aid_type FROM contact LEFT JOIN aid_data ON contact.org_id = aid_data.org_id;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT organization.org_name, aid_data.aid_type, aid_data.quantity FROM organization INNER JOIN aid_data ON organization.org_id = aid_data.org_id WHERE aid_data.quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM organization WHERE org_id IN (SELECT org_id FROM aid_data WHERE quantity > 50);",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT organization.org_name, contact.contact_name, aid_data.aid_type FROM organization LEFT JOIN contact ON organization.org_id = contact.org_id LEFT JOIN aid_data ON organization.org_id = aid_data.org_id;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT org_name, COUNT(contact_id) AS total_contacts FROM organization LEFT JOIN contact ON organization.org_id = contact.org_id GROUP BY org_name;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT org_name, AVG(quantity) AS average_quantity FROM organization INNER JOIN aid_data ON organization.org_id = aid_data.org_id GROUP BY org_name;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT contact_name, email, phone_number FROM contact WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT org_name, aid_type, location FROM organization INNER JOIN aid_data ON organization.org_id = aid_data.org_id WHERE location <> '';",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT org_name, contact_name, email, phone_number FROM organization JOIN contact ON organization.org_id = contact.org_id WHERE org_type = 'NGO';",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT organization.org_name, aid_data.aid_type, SUM(aid_data.quantity) AS total_quantity FROM organization INNER JOIN aid_data ON organization.org_id = aid_data.org_id GROUP BY organization.org_name, aid_data.aid_type;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT org_name, SUM(quantity) AS total_quantity FROM organization INNER JOIN aid_data ON organization.org_id = aid_data.org_id GROUP BY org_name HAVING total_quantity > 500;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT org_name, contact_name FROM organization LEFT JOIN contact ON organization.org_id = contact.org_id WHERE contact_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT org_name, COUNT(*) AS total_aid_types FROM organization INNER JOIN aid_data ON organization.org_id = aid_data.org_id GROUP BY org_name;",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT contact_name, email, phone_number FROM contact WHERE contact_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT org_name, AVG(quantity) AS average_quantity FROM organization INNER JOIN aid_data ON organization.org_id = aid_data.org_id WHERE aid_type = 'food';",
  "### TABLEDATA\n\nCREATE TABLE organization (\n  org_id INT PRIMARY KEY,\n  org_name VARCHAR(255) NOT NULL,\n  org_type VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE contact (\n  contact_id INT PRIMARY KEY,\n  org_id INT,\n  contact_name VARCHAR(100) NOT NULL,\n  email VARCHAR(100),\n  phone_number VARCHAR(20)\n);\n\n\nCREATE TABLE aid_data (\n  aid_id INT PRIMARY KEY,\n  org_id INT,\n  aid_type VARCHAR(50) NOT NULL,\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT org_name, contact_name, email FROM organization JOIN contact ON organization.org_id = contact.org_id WHERE contact_name LIKE '%son';",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT * FROM aid_organization;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_id, org_name FROM aid_organization;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name FROM aid_organization WHERE org_type = 'NGO';",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_id, org_name, established_date FROM aid_organization WHERE established_date > '2020-01-01';",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, COUNT(*) AS project_count FROM aid_organization INNER JOIN aid_project ON aid_organization.org_id = aid_project.org_id GROUP BY org_name;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, start_date, end_date FROM aid_project WHERE start_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, project_member.member_name, member_role FROM aid_project INNER JOIN project_member ON aid_project.project_id = project_member.project_id;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, activity_name, activity_description FROM aid_project INNER JOIN project_activity ON aid_project.project_id = project_activity.project_id;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, activity_name, activity_description FROM aid_project LEFT JOIN project_activity ON aid_project.project_id = project_activity.project_id;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, activity_name, activity_description FROM aid_project RIGHT JOIN project_activity ON aid_project.project_id = project_activity.project_id;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, project_name, member_name, member_role FROM aid_organization INNER JOIN aid_project ON aid_organization.org_id = aid_project.org_id INNER JOIN project_member ON aid_project.project_id = project_member.project_id;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, COUNT(project_id) AS project_count FROM aid_organization LEFT JOIN aid_project ON aid_organization.org_id = aid_project.org_id GROUP BY org_name;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, project_name, activity_name FROM aid_organization LEFT JOIN aid_project ON aid_organization.org_id = aid_project.org_id LEFT JOIN project_activity ON aid_project.project_id = project_activity.project_id;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, project_name, activity_name FROM aid_organization RIGHT JOIN aid_project ON aid_organization.org_id = aid_project.org_id RIGHT JOIN project_activity ON aid_project.project_id = project_activity.project_id;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, project_name, activity_name, activity_description FROM aid_organization FULL JOIN aid_project ON aid_organization.org_id = aid_project.org_id FULL JOIN project_activity ON aid_project.project_id = project_activity.project_id;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT * FROM aid_organization WHERE org_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name FROM aid_project WHERE project_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT member_name, member_role FROM project_member WHERE project_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT activity_name, activity_description FROM project_activity WHERE project_id = 7;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name AS organization_name, org_type AS organization_type FROM aid_organization;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT * FROM aid_organization;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, org_type, established_date FROM aid_organization WHERE org_type = 'NGO';",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT aid_project.project_name, aid_project.start_date, aid_organization.org_name FROM aid_project INNER JOIN aid_organization ON aid_project.org_id = aid_organization.org_id;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_member.member_name, project_member.member_role, aid_project.project_name FROM project_member INNER JOIN aid_project ON project_member.project_id = aid_project.project_id;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT activity_name, activity_description FROM project_activity WHERE project_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, COUNT(*) AS project_count FROM aid_organization INNER JOIN aid_project ON aid_organization.org_id = aid_project.org_id GROUP BY org_name;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, COUNT(*) AS member_count FROM aid_project INNER JOIN project_member ON aid_project.project_id = project_member.project_id GROUP BY project_name;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, COUNT(DISTINCT aid_project.project_id) AS project_count FROM aid_organization INNER JOIN aid_project ON aid_organization.org_id = aid_project.org_id GROUP BY org_name;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT member_name, COUNT(DISTINCT project_id) AS project_count FROM project_member GROUP BY member_name;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, MAX(project_count) AS max_projects FROM (SELECT org_name, COUNT(DISTINCT aid_project.project_id) AS project_count FROM aid_organization INNER JOIN aid_project ON aid_organization.org_id = aid_project.org_id GROUP BY org_name) AS project_counts;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, AVG(project_count) AS avg_projects FROM (SELECT org_name, COUNT(DISTINCT aid_project.project_id) AS project_count FROM aid_organization INNER JOIN aid_project ON aid_organization.org_id = aid_project.org_id GROUP BY org_name) AS project_counts;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, MIN(project_count) AS min_projects FROM (SELECT org_name, COUNT(DISTINCT aid_project.project_id) AS project_count FROM aid_organization INNER JOIN aid_project ON aid_organization.org_id = aid_project.org_id GROUP BY org_name) AS project_counts;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, CONCAT_WS(' - ', start_date, end_date) AS project_duration FROM aid_project;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, SUM(CASE WHEN org_type = 'NGO' THEN 1 ELSE 0 END) AS ngo_count, SUM(CASE WHEN org_type = 'Government' THEN 1 ELSE 0 END) AS gov_count FROM aid_organization GROUP BY org_name;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, DATEDIFF(end_date, start_date) AS project_duration_days FROM aid_project WHERE project_name LIKE 'Water%';",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, GROUP_CONCAT(DISTINCT project_member.member_name) AS team_members FROM project_member INNER JOIN aid_project ON project_member.project_id = aid_project.project_id GROUP BY project_name;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, project_name, activity_name, activity_description FROM aid_organization INNER JOIN aid_project ON aid_organization.org_id = aid_project.org_id INNER JOIN project_activity ON aid_project.project_id = project_activity.project_id;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, project_name, member_name, member_role, activity_name, activity_description FROM aid_organization INNER JOIN aid_project ON aid_organization.org_id = aid_project.org_id INNER JOIN project_member ON aid_project.project_id = project_member.project_id INNER JOIN project_activity ON aid_project.project_id = project_activity.project_id;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, project_start_date, project_end_date, org_name, project_member_count FROM (SELECT aid_project.project_name AS project_name, aid_project.start_date AS project_start_date, aid_project.end_date AS project_end_date, aid_organization.org_name AS org_name, COUNT(DISTINCT project_member.member_id) AS project_member_count FROM aid_project INNER JOIN aid_organization ON aid_project.org_id = aid_organization.org_id INNER JOIN project_member ON aid_project.project_id = project_member.project_id GROUP BY project_name) AS project_details;",
  "### TABLEDATA\n\nCREATE TABLE aid_organization (\n    org_id INT PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    established_date DATE\n);\n\nCREATE TABLE aid_project (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    org_id INT REFERENCES aid_organization(org_id)\n);\n\nCREATE TABLE project_member (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(50) NOT NULL,\n    member_role VARCHAR(50),\n    project_id INT REFERENCES aid_project(project_id)\n);\n\nCREATE TABLE project_activity (\n    activity_id INT PRIMARY KEY,\n    activity_name VARCHAR(50) NOT NULL,\n    activity_description TEXT,\n    project_id INT REFERENCES aid_project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, project_name, AVG(DATEDIFF(end_date, start_date)) AS avg_project_duration FROM aid_organization INNER JOIN aid_project ON aid_organization.org_id = aid_project.org_id GROUP BY org_name, project_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Organization;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, org_type FROM Organization;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, contact_person FROM Organization WHERE org_type='Non-profit';",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Project;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, total_budget FROM Project WHERE start_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, total_budget FROM Project WHERE end_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Donor;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT donor_name, donation_amount FROM Donor WHERE donation_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Donation;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT donor_id, project_id, donation_date FROM Donation WHERE donation_amount > 5000;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Communication;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT comm_type, comm_date FROM Communication WHERE project_id=3;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, project_name, donation_amount FROM Organization o JOIN Project p ON o.org_id=p.org_id JOIN Donation d ON p.project_id=d.project_id;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT p.project_name, d.donation_amount FROM Project p JOIN Donation d ON p.project_id=d.project_id WHERE d.donation_amount >= 1000;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT d.donor_name, p.project_name, d.donation_amount FROM Donation d JOIN Project p ON d.project_id=p.project_id JOIN Donor dn ON d.donor_id=dn.donor_id WHERE dn.donor_name='John Doe';",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT o.org_name, p.project_name, d.donation_amount FROM Organization o JOIN Project p ON o.org_id=p.org_id JOIN Donation d ON p.project_id=d.project_id WHERE d.donation_amount > 5000;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT o.org_name, p.project_name, d.donation_amount FROM Organization o JOIN Project p ON o.org_id=p.org_id JOIN Donation d ON p.project_id=d.project_id WHERE o.org_type='NGO';",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT o.org_name, p.project_name, c.comm_date FROM Organization o JOIN Project p ON o.org_id=p.org_id JOIN Communication c ON p.project_id=c.project_id WHERE c.comm_type='Meeting';",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT o.org_name, p.project_name, c.comm_content FROM Organization o JOIN Project p ON o.org_id=p.org_id JOIN Communication c ON p.project_id=c.project_id WHERE c.comm_date >= '2022-06-01' AND c.comm_date < '2022-07-01'",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, org_type, contact_person FROM Organization;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, start_date, total_budget FROM Project;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT donor_name, donation_amount FROM Donor;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT donation_date, donation_amount FROM Donation;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT comm_type, comm_date, comm_content FROM Communication;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_id, org_name, org_type, contact_email FROM Organization WHERE org_type = 'Non-Profit';",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, start_date, total_budget FROM Project WHERE total_budget > 10000;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT donor_name, donation_amount FROM Donor WHERE donation_amount > 5000;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT donation_date, donation_amount FROM Donation WHERE donation_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT comm_type, comm_date, comm_content FROM Communication WHERE comm_type = 'Email';",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, contact_person FROM Organization WHERE org_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, total_budget FROM Project WHERE start_date BETWEEN '2023-01-01' AND '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT donor_name, donation_amount FROM Donor ORDER BY donation_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT donation_date, donation_amount FROM Donation ORDER BY donation_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT comm_type, comm_date, comm_content FROM Communication ORDER BY comm_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, COUNT(project_id) AS project_count FROM Organization JOIN Project ON Organization.org_id = Project.org_id GROUP BY org_name;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, SUM(total_budget) AS total_budget FROM Project GROUP BY project_name;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT donor_name, AVG(donation_amount) AS average_donation FROM Donation JOIN Donor ON Donation.donor_id = Donor.donor_id GROUP BY donor_name;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT org_name, MAX(total_budget) AS max_budget FROM Organization JOIN Project ON Organization.org_id = Project.org_id GROUP BY org_name HAVING MAX(total_budget) > 50000;",
  "### TABLEDATA\n\nCREATE TABLE Organization (\n    org_id SERIAL PRIMARY KEY,\n    org_name VARCHAR(50) NOT NULL,\n    org_type VARCHAR(50) NOT NULL,\n    contact_person VARCHAR(50),\n    contact_email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Project (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(100) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    total_budget DECIMAL(10, 2) NOT NULL,\n    org_id INTEGER REFERENCES Organization(org_id)\n);\n\nCREATE TABLE Donor (\n    donor_id SERIAL PRIMARY KEY,\n    donor_name VARCHAR(50) NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Donation (\n    donation_id SERIAL PRIMARY KEY,\n    donor_id INTEGER REFERENCES Donor(donor_id),\n    project_id INTEGER REFERENCES Project(project_id),\n    donation_date DATE NOT NULL,\n    donation_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE Communication (\n    comm_id SERIAL PRIMARY KEY,\n    comm_type VARCHAR(50) NOT NULL,\n    comm_date TIMESTAMP NOT NULL,\n    comm_content TEXT NOT NULL,\n    project_id INTEGER REFERENCES Project(project_id)\n);\n\n### STATEMENT\n\nSELECT project_name, MIN(total_budget) AS min_budget FROM Project GROUP BY project_name HAVING MIN(total_budget) < 1000;"
]