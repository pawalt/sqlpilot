<t>CREATE TABLE HumanitarianAid (id INT PRIMARY KEY, organization_name STRING, donation_amount DECIMAL)</t><stat>GRANT SELECT ON HumanitarianAid TO user1</stat><divider><t>CREATE TABLE HumanitarianAid (id INT PRIMARY KEY, organization_name STRING, donation_amount DECIMAL)</t><stat>grant select on humanitarianaid to user1</stat><divider><t>CREATE TABLE HumanitarianAid (id INT PRIMARY KEY, organization_name STRING, donation_amount DECIMAL)</t><stat>GRANT UPDATE(organization_name) ON HumanitarianAid TO user2</stat><divider><t>CREATE TABLE HumanitarianAid (id INT PRIMARY KEY, organization_name STRING, donation_amount DECIMAL)</t><stat>grant update(organization_name) on humanitarianaid to user2</stat><divider><t>CREATE TABLE HumanitarianAid (id INT PRIMARY KEY, organization_name STRING, donation_amount DECIMAL)</t><stat>GRANT INSERT, DELETE ON HumanitarianAid TO user3</stat><divider><t>CREATE TABLE HumanitarianAid (id INT PRIMARY KEY, organization_name STRING, donation_amount DECIMAL)</t><stat>grant insert, delete on humanitarianaid to user3</stat><divider><t>CREATE TABLE beneficiaries (
    id INT PRIMARY KEY,
    name STRING,
    age INT,
    address STRING
);


CREATE TABLE donations (
    donation_id INT PRIMARY KEY,
    donor_name STRING,
    amount DECIMAL,
    donation_date DATE
);
</t><stat>GRANT SELECT ON beneficiaries TO analysts;</stat><divider><t>CREATE TABLE beneficiaries (
    id INT PRIMARY KEY,
    name STRING,
    age INT,
    address STRING
);


CREATE TABLE donations (
    donation_id INT PRIMARY KEY,
    donor_name STRING,
    amount DECIMAL,
    donation_date DATE
);
</t><stat>grant select on beneficiaries to analysts;</stat><divider><t>CREATE TABLE donations (
    donation_id INT PRIMARY KEY,
    donor_name STRING,
    amount DECIMAL,
    donation_date DATE
);


CREATE TABLE beneficiaries (
    id INT PRIMARY KEY,
    name STRING,
    age INT,
    address STRING
);
</t><stat>GRANT SELECT ON beneficiaries TO analysts;</stat><divider><t>CREATE TABLE donations (
    donation_id INT PRIMARY KEY,
    donor_name STRING,
    amount DECIMAL,
    donation_date DATE
);


CREATE TABLE beneficiaries (
    id INT PRIMARY KEY,
    name STRING,
    age INT,
    address STRING
);
</t><stat>grant select on beneficiaries to analysts;</stat><divider><t>CREATE TABLE beneficiaries (
    id INT PRIMARY KEY,
    name STRING,
    age INT,
    address STRING
);


CREATE TABLE donations (
    donation_id INT PRIMARY KEY,
    donor_name STRING,
    amount DECIMAL,
    donation_date DATE
);
</t><stat>GRANT INSERT, UPDATE, DELETE ON donations TO donors;</stat><divider><t>CREATE TABLE beneficiaries (
    id INT PRIMARY KEY,
    name STRING,
    age INT,
    address STRING
);


CREATE TABLE donations (
    donation_id INT PRIMARY KEY,
    donor_name STRING,
    amount DECIMAL,
    donation_date DATE
);
</t><stat>grant insert, update, delete on donations to donors;</stat><divider><t>CREATE TABLE donations (
    donation_id INT PRIMARY KEY,
    donor_name STRING,
    amount DECIMAL,
    donation_date DATE
);


CREATE TABLE beneficiaries (
    id INT PRIMARY KEY,
    name STRING,
    age INT,
    address STRING
);
</t><stat>GRANT INSERT, UPDATE, DELETE ON donations TO donors;</stat><divider><t>CREATE TABLE donations (
    donation_id INT PRIMARY KEY,
    donor_name STRING,
    amount DECIMAL,
    donation_date DATE
);


CREATE TABLE beneficiaries (
    id INT PRIMARY KEY,
    name STRING,
    age INT,
    address STRING
);
</t><stat>grant insert, update, delete on donations to donors;</stat><divider><t>CREATE TABLE beneficiaries (
    id INT PRIMARY KEY,
    name STRING,
    age INT,
    address STRING
);


CREATE TABLE donations (
    donation_id INT PRIMARY KEY,
    donor_name STRING,
    amount DECIMAL,
    donation_date DATE
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON beneficiaries TO admins;</stat><divider><t>CREATE TABLE beneficiaries (
    id INT PRIMARY KEY,
    name STRING,
    age INT,
    address STRING
);


CREATE TABLE donations (
    donation_id INT PRIMARY KEY,
    donor_name STRING,
    amount DECIMAL,
    donation_date DATE
);
</t><stat>grant select, insert, update, delete on beneficiaries to admins;</stat><divider><t>CREATE TABLE donations (
    donation_id INT PRIMARY KEY,
    donor_name STRING,
    amount DECIMAL,
    donation_date DATE
);


CREATE TABLE beneficiaries (
    id INT PRIMARY KEY,
    name STRING,
    age INT,
    address STRING
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON beneficiaries TO admins;</stat><divider><t>CREATE TABLE donations (
    donation_id INT PRIMARY KEY,
    donor_name STRING,
    amount DECIMAL,
    donation_date DATE
);


CREATE TABLE beneficiaries (
    id INT PRIMARY KEY,
    name STRING,
    age INT,
    address STRING
);
</t><stat>grant select, insert, update, delete on beneficiaries to admins;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name TEXT, org_type TEXT)</t><stat>GRANT SELECT ON organizations TO user1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name TEXT, org_type TEXT)</t><stat>grant select on organizations to user1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name TEXT, org_type TEXT)</t><stat>GRANT INSERT, UPDATE, DELETE ON organizations TO user2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name TEXT, org_type TEXT)</t><stat>grant insert, update, delete on organizations to user2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name TEXT, org_type TEXT)</t><stat>GRANT ALL ON organizations TO user3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name TEXT, org_type TEXT)</t><stat>grant all on organizations to user3</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, INSERT ON aid_agencies TO user1;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, insert on aid_agencies to user1;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, UPDATE ON aid_workers TO user2;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, update on aid_workers to user2;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON aid_requests TO user3;</stat><divider><t>CREATE TABLE aid_deliveries (
  delivery_id INT,
  delivery_date DATE,
  request_id INT,
  delivered_quantity INT,
  PRIMARY KEY (delivery_id),
  FOREIGN KEY (request_id) REFERENCES aid_requests(request_id)
);

CREATE TABLE aid_requests (
  request_id INT,
  request_date DATE,
  requester_name VARCHAR(255),
  request_description TEXT,
  worker_id INT,
  PRIMARY KEY (request_id),
  FOREIGN KEY (worker_id) REFERENCES aid_workers(worker_id)
);

CREATE TABLE aid_workers (
  worker_id INT,
  worker_name VARCHAR(255),
  skills VARCHAR(255),
  agency_id INT,
  PRIMARY KEY (worker_id),
  FOREIGN KEY (agency_id) REFERENCES aid_agencies(agency_id)
);

CREATE TABLE aid_agencies (
  agency_id INT,
  agency_name VARCHAR(255),
  country VARCHAR(100),
  PRIMARY KEY (agency_id)
);</t><stat>grant select, insert, update, delete on aid_requests to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user1;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on organizations to user1;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON volunteers TO user2;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on volunteers to user2;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON donations TO user3;</stat><divider><t>CREATE TABLE distribution (
  dist_id INT PRIMARY KEY,
  dist_date DATE NOT NULL,
  org_id INT,
  supply_id INT,
  donation_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id),
  FOREIGN KEY (supply_id) REFERENCES supplies(supply_id),
  FOREIGN KEY (donation_id) REFERENCES donations(donation_id)
);


CREATE TABLE supplies (
  supply_id INT PRIMARY KEY,
  supply_name VARCHAR(255) NOT NULL,
  supply_quantity INT NOT NULL,
  supply_description TEXT
);


CREATE TABLE donations (
  donation_id INT PRIMARY KEY,
  donation_date TIMESTAMP NOT NULL,
  donation_amount DECIMAL(10, 2) NOT NULL,
  vol_id INT,
  FOREIGN KEY (vol_id) REFERENCES volunteers(vol_id)
);


CREATE TABLE volunteers (
  vol_id INT PRIMARY KEY,
  vol_name VARCHAR(255) NOT NULL,
  vol_email VARCHAR(255) NOT NULL,
  org_id INT,
  FOREIGN KEY (org_id) REFERENCES organizations(org_id)
);


CREATE TABLE organizations (
  org_id INT PRIMARY KEY,
  org_name VARCHAR(255) NOT NULL,
  org_type VARCHAR(50) NOT NULL
);
</t><stat>grant select, insert, update, delete on donations to user3;</stat>