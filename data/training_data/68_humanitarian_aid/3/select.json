[
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM disaster_affected_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, affected_population FROM disaster_affected_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_id, area_name, resources_needed FROM disaster_affected_areas WHERE priority_level > 3;",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM disaster_affected_areas WHERE affected_population > 10000;",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_id, area_name, affected_population, priority_level FROM disaster_affected_areas WHERE resources_needed LIKE '%food%';",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name FROM disaster_affected_areas WHERE priority_level = 1;",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, affected_population FROM disaster_affected_areas WHERE priority_level = 1 AND affected_population < 5000;",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_id, area_name, resources_needed FROM disaster_affected_areas WHERE resources_needed IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, resources_needed FROM disaster_affected_areas WHERE priority_level = 2;",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_id, area_name, affected_population, resources_needed FROM disaster_affected_areas WHERE area_id BETWEEN 10 AND 20;",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, priority_level FROM disaster_affected_areas ORDER BY priority_level DESC;",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM disaster_affected_areas WHERE priority_level = (SELECT MAX(priority_level) FROM disaster_affected_areas);",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_id, area_name, affected_population FROM disaster_affected_areas WHERE area_name LIKE '%valley%' OR area_name LIKE '%mountain%';",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, affected_population, resources_needed FROM disaster_affected_areas WHERE affected_population < 5000 AND priority_level > 2;",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT priority_level FROM disaster_affected_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_id, area_name, priority_level FROM disaster_affected_areas WHERE affected_population = (SELECT MIN(affected_population) FROM disaster_affected_areas);",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT AVG(affected_population) AS avg_population, MAX(affected_population) AS max_population FROM disaster_affected_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_areas FROM disaster_affected_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT SUM(affected_population) AS total_population FROM disaster_affected_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_id, area_name, resources_needed FROM disaster_affected_areas WHERE area_name IN ('City A', 'City B', 'City C');",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, affected_population FROM disaster_affected_areas",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, resources_needed, priority_level FROM disaster_affected_areas WHERE priority_level > 3",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM disaster_affected_areas WHERE area_id = 5",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, affected_population FROM disaster_affected_areas WHERE affected_population > 10000",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, resources_needed FROM disaster_affected_areas WHERE resources_needed LIKE '%food%'",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_id, area_name, affected_population FROM disaster_affected_areas WHERE priority_level >= 2 AND affected_population < 5000",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, priority_level FROM disaster_affected_areas ORDER BY priority_level DESC",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_areas FROM disaster_affected_areas",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT AVG(affected_population) AS avg_population FROM disaster_affected_areas",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT MAX(affected_population) AS max_population FROM disaster_affected_areas",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT MIN(affected_population) AS min_population FROM disaster_affected_areas",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT SUM(affected_population) AS total_population FROM disaster_affected_areas",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, resources_needed, priority_level FROM disaster_affected_areas WHERE resources_needed IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, priority_level FROM disaster_affected_areas WHERE priority_level BETWEEN 3 AND 5",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, affected_population, priority_level FROM disaster_affected_areas WHERE priority_level > 1 ORDER BY affected_population DESC",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, affected_population, resources_needed FROM disaster_affected_areas WHERE affected_population < 5000 OR resources_needed LIKE '%shelter%'",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, affected_population, priority_level FROM disaster_affected_areas WHERE area_name NOT LIKE '%City%'",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, COUNT(*) AS total_areas FROM disaster_affected_areas GROUP BY area_name HAVING COUNT(*) > 1",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, SUM(affected_population) AS total_population FROM disaster_affected_areas GROUP BY area_name",
  "### TABLEDATA\n\nCREATE TABLE disaster_affected_areas (\n  area_id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resources_needed VARCHAR(100),\n  priority_level INT\n)\n\n### STATEMENT\n\nSELECT area_name, AVG(priority_level) AS avg_priority FROM disaster_affected_areas GROUP BY area_name HAVING AVG(priority_level) > 3",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM disaster_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, affected_population FROM disaster_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM relief_resources;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT resource_type, quantity_available FROM relief_resources;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, affected_population, resource_needs FROM disaster_areas WHERE affected_population > 10000;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, affected_population, resource_needs FROM disaster_areas WHERE area_name = 'City A';",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, affected_population, resource_needs FROM disaster_areas WHERE area_name LIKE 'City%';",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT resource_type, quantity_available FROM relief_resources WHERE quantity_available > 50;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, affected_population FROM disaster_areas ORDER BY affected_population DESC;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, affected_population FROM disaster_areas ORDER BY affected_population ASC;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, affected_population FROM disaster_areas LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, affected_population FROM disaster_areas OFFSET 2;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, affected_population FROM disaster_areas LIMIT 5 OFFSET 2;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, SUM(affected_population) AS total_population FROM disaster_areas GROUP BY area_name;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, COUNT(*) AS count FROM disaster_areas GROUP BY area_name;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, COUNT(*) AS count FROM disaster_areas WHERE affected_population > 10000 GROUP BY area_name;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, AVG(affected_population) AS avg_population FROM disaster_areas GROUP BY area_name;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, resource_type, quantity_available FROM disaster_areas INNER JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, resource_type, quantity_available FROM disaster_areas LEFT JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, resource_type, quantity_available FROM disaster_areas RIGHT JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM disaster_areas WHERE affected_population > 10000;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, affected_population FROM disaster_areas WHERE affected_population BETWEEN 5000 AND 10000;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, resource_type, quantity_available FROM disaster_areas JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, resource_needs FROM disaster_areas WHERE resource_needs LIKE '%food%';",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, AVG(affected_population) AS avg_population FROM disaster_areas GROUP BY area_name;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, resource_type, SUM(quantity_available) AS total_quantity FROM disaster_areas JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id GROUP BY area_name, resource_type;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, COUNT(*) AS resource_count FROM disaster_areas JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id GROUP BY area_name HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, MAX(affected_population) AS max_population FROM disaster_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, MIN(affected_population) AS min_population FROM disaster_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, location, SUM(quantity_available) AS total_available FROM disaster_areas JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id GROUP BY area_name, location;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, resource_type, MAX(quantity_available) AS max_quantity FROM disaster_areas JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id GROUP BY area_name, resource_type;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, COUNT(*) AS total_resources FROM disaster_areas JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, AVG(affected_population) AS avg_population, MAX(quantity_available) AS max_quantity FROM disaster_areas JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id GROUP BY area_name;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, resource_type, SUM(quantity_available) AS total_available FROM disaster_areas JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id WHERE quantity_available > 50 GROUP BY area_name, resource_type;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, SUM(affected_population) AS total_population, AVG(quantity_available) AS avg_quantity FROM disaster_areas JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id GROUP BY area_name;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, resource_type, location FROM disaster_areas JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id WHERE location = 'warehouse';",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, resource_needs FROM disaster_areas WHERE area_name LIKE '%earthquake%';",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, resource_type, COUNT(*) AS resource_count FROM disaster_areas JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id GROUP BY area_name, resource_type HAVING COUNT(*) >= 3;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, AVG(affected_population) AS avg_population, MAX(quantity_available) AS max_quantity FROM disaster_areas JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id GROUP BY area_name HAVING AVG(affected_population) > 5000;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, SUM(affected_population) AS total_population, MAX(quantity_available) AS max_quantity FROM disaster_areas JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id GROUP BY area_name HAVING total_population > 10000;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR(50),\n  affected_population INT,\n  resource_needs TEXT\n);\n\nCREATE TABLE relief_resources (\n  resource_id INT PRIMARY KEY,\n  resource_type VARCHAR(50),\n  quantity_available INT,\n  location VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT area_name, location, SUM(quantity_available) AS total_available FROM disaster_areas JOIN relief_resources ON disaster_areas.id = relief_resources.resource_id WHERE resource_type = 'medical supplies' GROUP BY area_name, location;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT * FROM disaster_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT area_name, affected_population FROM disaster_areas WHERE priority_level = 5;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT organization_name, resources_provided FROM relief_efforts;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT * FROM relief_efforts WHERE organization_name = 'Red Cross';",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT area_id, resources_allocated, allocation_date FROM resource_allocation;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT * FROM disaster_areas WHERE area_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT area_name, affected_population FROM disaster_areas WHERE affected_population > 10000;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT relief_id, organization_name, timestamp FROM relief_efforts WHERE area_id = 20;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT area_id, organization_name, resources_allocated FROM resource_allocation WHERE allocation_date = '2023-01-15';",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT * FROM disaster_areas ORDER BY priority_level DESC;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT area_name, priority_level FROM disaster_areas WHERE priority_level < 3;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT area_id, organization_name, resources_allocated FROM resource_allocation WHERE organization_name LIKE '%Red%';",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT area_id, organization_name, resources_allocated FROM resource_allocation ORDER BY allocation_date;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT area_id, area_name, affected_population FROM disaster_areas WHERE area_name LIKE '%Disease%';",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT * FROM relief_efforts WHERE timestamp >= '2023-05-01';",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT organization_name, resources_allocated FROM resource_allocation WHERE area_id = 15;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT DISTINCT organization_name FROM resource_allocation;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM disaster_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT MAX(affected_population) FROM disaster_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT * FROM disaster_areas WHERE priority_level > 5;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT area_name, affected_population FROM disaster_areas WHERE affected_population > 1000;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT d.area_name, r.organization_name FROM disaster_areas d JOIN relief_efforts r ON d.area_id = r.area_id;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT d.area_name, ra.organization_name FROM disaster_areas d JOIN resource_allocation ra ON d.area_id = ra.area_id;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT d.area_name, r.organization_name, ra.resources_allocated FROM disaster_areas d JOIN relief_efforts r ON d.area_id = r.area_id JOIN resource_allocation ra ON d.area_id = ra.area_id;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT d.area_name, COUNT(r.relief_id) AS relief_count FROM disaster_areas d LEFT JOIN relief_efforts r ON d.area_id = r.area_id GROUP BY d.area_name;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT d.area_name, ra.resources_allocated FROM disaster_areas d JOIN resource_allocation ra ON d.area_id = ra.area_id WHERE ra.allocation_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT d.area_name, r.organization_name FROM disaster_areas d JOIN relief_efforts r ON d.area_id = r.area_id WHERE r.timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT MAX(affected_population) AS max_population FROM disaster_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT MIN(priority_level) AS min_priority FROM disaster_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT AVG(affected_population) AS avg_population FROM disaster_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT SUM(affected_population) AS total_population FROM disaster_areas;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT area_name, SUM(resources_allocated) AS total_resources_allocated FROM disaster_areas d JOIN resource_allocation ra ON d.area_id = ra.area_id GROUP BY area_name;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT organization_name, COUNT(DISTINCT area_id) AS num_areas FROM relief_efforts GROUP BY organization_name;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT r.organization_name, SUM(d.affected_population) AS total_population_affected FROM disaster_areas d JOIN relief_efforts r ON d.area_id = r.area_id GROUP BY r.organization_name;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT d.area_name, r.organization_name FROM disaster_areas d JOIN relief_efforts r ON d.area_id = r.area_id WHERE r.timestamp > '2022-01-01' ORDER BY r.timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT d.area_name, r.organization_name FROM disaster_areas d JOIN relief_efforts r ON d.area_id = r.area_id WHERE r.timestamp > '2022-01-01' ORDER BY r.timestamp ASC;",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT d.area_name, ra.resources_allocated FROM disaster_areas d JOIN resource_allocation ra ON d.area_id = ra.area_id WHERE ra.allocation_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE disaster_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(255),\n    affected_population INT,\n    resources_needed VARCHAR(100),\n    priority_level INT\n)\n\nCREATE TABLE relief_efforts (\n    relief_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_provided VARCHAR(100),\n    timestamp TIMESTAMP\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    area_id INT,\n    organization_name VARCHAR(255),\n    resources_allocated VARCHAR(100),\n    allocation_date DATE\n    FOREIGN KEY (area_id) REFERENCES disaster_areas(area_id)\n)\n\n### STATEMENT\n\nSELECT d.area_name, ra.resources_allocated FROM disaster_areas d JOIN resource_allocation ra ON d.area_id = ra.area_id WHERE ra.allocation_date BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Disasters;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, date, location FROM Disasters;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Resources;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT name, type, quantity FROM Resources;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM ReliefEfforts;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, effort_date, description FROM ReliefEfforts;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM PriorityAreas;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT area_name, priority_level FROM PriorityAreas;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, location FROM Disasters WHERE severity='High';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT name, quantity FROM Resources WHERE type='Food';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM ReliefEfforts WHERE location='City A';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT area_name, status FROM PriorityAreas WHERE priority_level=1;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, date, location FROM Disasters WHERE location='City B' AND severity='Medium';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT name, quantity FROM Resources WHERE type='Medical Supplies' AND quantity>100;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM ReliefEfforts WHERE effort_date>'2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, location FROM Disasters WHERE severity='High' OR severity='Medium';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT area_name, status FROM PriorityAreas WHERE status='Active';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM ReliefEfforts WHERE resources_needed LIKE '%Water%';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, location FROM Disasters ORDER BY date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT area_name, priority_level FROM PriorityAreas ORDER BY priority_level ASC;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Disasters;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, location FROM Disasters WHERE severity = 'High';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Resources WHERE name LIKE '%water%';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, name, quantity FROM Resources WHERE type = 'food' AND quantity >= 100;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM ReliefEfforts WHERE effort_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, description FROM ReliefEfforts WHERE location = 'City A' AND resources_needed IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM PriorityAreas WHERE status = 'Active';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, area_name FROM PriorityAreas WHERE priority_level >= 3;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, date, severity FROM Disasters WHERE location = 'City B' AND severity = 'Critical';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Resources WHERE quantity BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM ReliefEfforts WHERE effort_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, name, type FROM Resources ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, area_name FROM PriorityAreas ORDER BY priority_level ASC;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, description FROM ReliefEfforts ORDER BY effort_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, location FROM ReliefEfforts WHERE resources_needed LIKE '%medical%';",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Disasters WHERE id IN (1, 3, 5, 7);",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Resources WHERE id NOT IN (2, 4, 6, 8);",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, area_name FROM PriorityAreas WHERE status IN ('Active', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM ReliefEfforts WHERE description LIKE '%urgent%' AND resources_needed IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Disasters (\n  id INT PRIMARY KEY,\n  date DATE,\n  location VARCHAR,\n  severity VARCHAR\n);\n\n\nCREATE TABLE Resources (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  type VARCHAR,\n  quantity INT\n);\n\n\nCREATE TABLE ReliefEfforts (\n  id INT PRIMARY KEY,\n  effort_date DATE,\n  description VARCHAR,\n  location VARCHAR,\n  resources_needed TEXT\n);\n\n\nCREATE TABLE PriorityAreas (\n  id INT PRIMARY KEY,\n  area_name VARCHAR,\n  priority_level INT,\n  status VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, date, severity FROM Disasters WHERE severity IN ('Moderate', 'High', 'Critical');",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM affected_areas;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT area_id, area_name FROM affected_areas;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT disaster_type FROM affected_areas;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT area_id, SUM(affected_population) AS total_population FROM affected_areas GROUP BY area_id;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM relief_efforts;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT organization_name, donation_amount FROM relief_efforts WHERE donation_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_efforts FROM relief_efforts;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT area_name, organization_name FROM affected_areas INNER JOIN relief_efforts ON affected_areas.area_id = relief_efforts.area_id;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM resource_allocation;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT resource_type, AVG(quantity) AS average_quantity FROM resource_allocation GROUP BY resource_type;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM volunteer_info;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, area_name FROM volunteer_info INNER JOIN affected_areas ON volunteer_info.area_id = affected_areas.area_id;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM action_plan;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT effort_id, plan_description FROM action_plan WHERE completion_date > NOW();",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT area_name, organization_name, resource_type FROM affected_areas INNER JOIN relief_efforts ON affected_areas.area_id = relief_efforts.area_id INNER JOIN resource_allocation ON relief_efforts.effort_id = resource_allocation.effort_id;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT area_name, SUM(quantity) AS total_quantity FROM affected_areas INNER JOIN relief_efforts ON affected_areas.area_id = relief_efforts.area_id INNER JOIN resource_allocation ON relief_efforts.effort_id = resource_allocation.effort_id GROUP BY area_name;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT name, contact_number FROM volunteer_info WHERE area_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT organization_name, COUNT(*) AS total_volunteers FROM relief_efforts INNER JOIN volunteer_info ON relief_efforts.area_id = volunteer_info.area_id GROUP BY organization_name;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT organization_name, MAX(donation_amount) AS highest_donation FROM relief_efforts GROUP BY organization_name;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT action_plan.effort_id, SUM(quantity) AS total_resources FROM action_plan INNER JOIN resource_allocation ON action_plan.effort_id = resource_allocation.effort_id GROUP BY action_plan.effort_id;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM affected_areas;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT area_name, disaster_type FROM affected_areas WHERE affected_population > 1000;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT organization_name, donation_amount FROM relief_efforts WHERE donation_amount > 5000;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM resource_allocation WHERE resource_type = 'Food';",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT area_name, name FROM affected_areas JOIN volunteer_info ON affected_areas.area_id = volunteer_info.area_id;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM action_plan WHERE completion_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT organization_name, donation_amount, area_name FROM relief_efforts JOIN affected_areas ON relief_efforts.area_id = affected_areas.area_id;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM resource_allocation WHERE quantity > 10 AND resource_type = 'Medicine';",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT plan_description FROM action_plan WHERE effort_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT organization_name, donation_amount FROM relief_efforts WHERE effort_id IN (SELECT effort_id FROM action_plan WHERE completion_date < '2022-06-30');",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT area_name, SUM(affected_population) AS total_population FROM affected_areas GROUP BY area_name;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT organization_name, SUM(donation_amount) AS total_donation FROM relief_efforts GROUP BY organization_name HAVING total_donation > 10000;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_efforts FROM relief_efforts;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT area_name, AVG(affected_population) AS avg_population FROM affected_areas GROUP BY area_name HAVING AVG(affected_population) > 500;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT organization_name, COUNT(*) AS total_efforts FROM relief_efforts GROUP BY organization_name HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT org1.organization_name AS donor, org2.organization_name AS recipient, SUM(org1.donation_amount) AS total_donation FROM relief_efforts AS org1 JOIN relief_efforts AS org2 ON org1.effort_id = org2.effort_id GROUP BY org1.organization_name, org2.organization_name;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM relief_efforts WHERE area_id IN (SELECT area_id FROM affected_areas WHERE disaster_type = 'Flood');",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT area_name, COUNT(*) AS total_volunteers FROM affected_areas JOIN volunteer_info ON affected_areas.area_id = volunteer_info.area_id GROUP BY area_name;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT organization_name, AVG(donation_amount) AS avg_donation FROM relief_efforts GROUP BY organization_name;",
  "### TABLEDATA\n\nCREATE TABLE affected_areas (\n    area_id INT PRIMARY KEY,\n    area_name VARCHAR(50),\n    disaster_type VARCHAR(50),\n    affected_population INT\n);\n\nCREATE TABLE relief_efforts (\n    effort_id INT PRIMARY KEY,\n    area_id INT REFERENCES affected_areas(area_id),\n    organization_name VARCHAR(50),\n    donation_amount DECIMAL\n);\n\nCREATE TABLE resource_allocation (\n    allocation_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    resource_type VARCHAR(50),\n    quantity INT\n);\n\nCREATE TABLE volunteer_info (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    area_id INT REFERENCES affected_areas(area_id),\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE action_plan (\n    plan_id INT PRIMARY KEY,\n    effort_id INT REFERENCES relief_efforts(effort_id),\n    plan_description TEXT,\n    completion_date DATE\n);\n\n### STATEMENT\n\nSELECT plan_description FROM action_plan WHERE completion_date IS NULL;"
]