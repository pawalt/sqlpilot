[
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM volunteer_registration WHERE volunteer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM volunteer_registration WHERE volunteer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT phone_number FROM volunteer_registration WHERE name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM volunteer_registration WHERE email = 'test@example.com';",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, address FROM volunteer_registration WHERE phone_number = '123456789';",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM volunteer_registration WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM volunteer_registration WHERE availability > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, phone_number FROM volunteer_registration WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT address FROM volunteer_registration;",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name FROM volunteer_registration WHERE availability < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM volunteer_registration WHERE phone_number LIKE '123%';",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT volunteer_id, email FROM volunteer_registration WHERE name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM volunteer_registration WHERE email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, address, availability FROM volunteer_registration;",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_volunteers FROM volunteer_registration;",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, phone_number, availability FROM volunteer_registration WHERE volunteer_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM volunteer_registration WHERE address = '123 Main Street';",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email, phone_number, address FROM volunteer_registration WHERE volunteer_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT volunteer_id, address FROM volunteer_registration WHERE phone_number = '987654321';",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM volunteer_registration WHERE name = 'Jane Doe';",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, email FROM volunteer_registration WHERE phone_number LIKE '%555%'",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM volunteer_registration WHERE address LIKE '%Street%' AND availability > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, email, phone_number FROM volunteer_registration WHERE availability BETWEEN '2022-01-01' AND '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_volunteers FROM volunteer_registration",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM volunteer_registration ORDER BY name ASC",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, email FROM volunteer_registration WHERE availability IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM volunteer_registration WHERE phone_number IN ('1234567890', '9876543210')",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, email FROM volunteer_registration WHERE email LIKE '%@gmail.com%'",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name FROM volunteer_registration WHERE address LIKE '%Lane%' AND availability < '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE volunteer_registration (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100),\n    availability TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, email FROM volunteer_registration WHERE availability < (SELECT MIN(availability) FROM volunteer_registration)",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Volunteers;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_name, email FROM Volunteers;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_name, phone_number FROM Volunteers WHERE registration_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_name, project_description FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_name, start_date, end_date FROM Projects WHERE start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_name, coordinator_id FROM Projects WHERE end_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Volunteers JOIN Projects ON Volunteers.volunteer_id = Projects.coordinator_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT Volunteers.volunteer_name, Projects.project_name FROM Volunteers JOIN Projects ON Volunteers.volunteer_id = Projects.coordinator_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT Volunteers.volunteer_name, Projects.project_name FROM Volunteers INNER JOIN Projects ON Volunteers.volunteer_id = Projects.coordinator_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT Volunteers.volunteer_name, Projects.project_name FROM Volunteers LEFT JOIN Projects ON Volunteers.volunteer_id = Projects.coordinator_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT Volunteers.volunteer_name, Projects.project_name FROM Volunteers RIGHT JOIN Projects ON Volunteers.volunteer_id = Projects.coordinator_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Volunteers;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT AVG(DATE_PART('year', age(registration_date))) AS average_registration_years FROM Volunteers;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT AVG(DATE_PART('year', age(start_date))) AS average_project_start_years FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_name, COUNT(*) AS project_count FROM Volunteers JOIN Projects ON Volunteers.volunteer_id = Projects.coordinator_id GROUP BY volunteer_name;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_name, COUNT(*) AS volunteer_count FROM Volunteers JOIN Projects ON Volunteers.volunteer_id = Projects.coordinator_id GROUP BY project_name;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_name, coordinator_id, volunteer_name FROM Projects JOIN Volunteers ON Projects.coordinator_id = Volunteers.volunteer_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_name, coordinator_id, volunteer_name FROM Projects JOIN Volunteers ON Projects.coordinator_id = Volunteers.volunteer_id WHERE DATE_PART('year', age(start_date)) >= 1;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Volunteers WHERE email = 'example@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_id, volunteer_name FROM Volunteers WHERE phone_number LIKE '+1%';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_name, email, registration_date FROM Volunteers ORDER BY registration_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Projects WHERE end_date > '2022-01-01' AND start_date < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_id, project_name, project_description FROM Projects WHERE coordinator_id = (SELECT volunteer_id FROM Volunteers WHERE volunteer_name = 'John Doe');",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_name, email, phone_number FROM Volunteers WHERE registration_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_name, start_date, end_date FROM Projects WHERE project_id IN (SELECT project_id FROM Projects WHERE coordinator_id = (SELECT volunteer_id FROM Volunteers WHERE email = 'example@example.com'));",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_name, email FROM Volunteers WHERE volunteer_name LIKE '%Smith%' AND email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_name, start_date, end_date FROM Projects WHERE coordinator_id = (SELECT volunteer_id FROM Volunteers WHERE phone_number = '+1234567890');",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_name, registration_date FROM Volunteers WHERE registration_date > (SELECT MAX(registration_date) FROM Volunteers);",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_name, project_description FROM Projects WHERE project_id NOT IN (SELECT project_id FROM Projects WHERE coordinator_id IS NULL);",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Volunteers JOIN Projects ON Volunteers.volunteer_id = Projects.coordinator_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_name, email, phone_number, project_name FROM Volunteers INNER JOIN Projects ON Volunteers.volunteer_id = Projects.coordinator_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_id, volunteer_name FROM Volunteers WHERE volunteer_id NOT IN (SELECT coordinator_id FROM Projects);",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Volunteers WHERE volunteer_name = 'Alice' UNION SELECT * FROM Volunteers WHERE volunteer_name = 'Bob';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_name, email, phone_number FROM Volunteers WHERE email = 'example@example.com' UNION SELECT volunteer_name, email, phone_number FROM Volunteers WHERE email = 'test@test.com';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_name, registration_date FROM Volunteers WHERE registration_date > ALL (SELECT registration_date FROM Volunteers WHERE volunteer_name = 'John Doe');",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_name, start_date, end_date FROM Projects WHERE coordinator_id = (SELECT volunteer_id FROM Volunteers WHERE registration_date = (SELECT MAX(registration_date) FROM Volunteers));",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_name, email FROM Volunteers WHERE registration_date = (SELECT MIN(registration_date) FROM Volunteers);",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id UUID PRIMARY KEY,\n    volunteer_name VARCHAR(50),\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(15),\n    registration_date TIMESTAMP\n);\n\nCREATE TABLE Projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(100),\n    project_description TEXT,\n    start_date TIMESTAMP,\n    end_date TIMESTAMP,\n    coordinator_id UUID,\n    FOREIGN KEY (coordinator_id) REFERENCES Volunteers(volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_name, project_description FROM Projects WHERE start_date < ANY (SELECT start_date FROM Projects WHERE coordinator_id = (SELECT volunteer_id FROM Volunteers WHERE email = 'example@example.com'));",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM Volunteers;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT name, age FROM Volunteers;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT project_name, project_description FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM Schedule;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT volunteer_id, project_id, date FROM Schedule;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT name, email, phone_number FROM Volunteers;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT project_name, project_location FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT volunteer_id, project_id, date, time FROM Schedule;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM Volunteers WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT project_name FROM Projects WHERE project_location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM Schedule WHERE date = '2022-08-15';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT name, email FROM Volunteers WHERE age < 25;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT project_name, project_description FROM Projects WHERE project_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT * FROM Schedule WHERE volunteer_id = 3 AND project_id = 6;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT volunteer_id, project_id, time FROM Schedule WHERE date = '2022-09-20';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT phone_number FROM Volunteers WHERE name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT project_name, project_location FROM Projects WHERE project_id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT name, age, email FROM Volunteers WHERE phone_number LIKE '%1234%';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT project_name, project_description, project_location FROM Projects WHERE project_id < 4;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, age FROM Volunteers WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT project_name, project_location FROM Projects WHERE CHAR_LENGTH(project_name) > 10;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT volunteer_id, project_id, date FROM Schedule WHERE project_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT volunteer_id, project_name, date, time FROM Schedule INNER JOIN Projects ON Schedule.project_id = Projects.project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT Volunteers.name, Projects.project_name, Schedule.date FROM Volunteers, Projects, Schedule WHERE Volunteers.volunteer_id = Schedule.volunteer_id AND Projects.project_id = Schedule.project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT volunteer_id, project_name, date FROM Schedule JOIN Projects ON Schedule.project_id = Projects.project_id WHERE project_id = 1001 AND volunteer_id = 2001;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT volunteer_id, project_name, date FROM Schedule JOIN Projects ON Schedule.project_id = Projects.project_id WHERE project_id IN (1001, 1002);",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, project_name FROM Volunteers JOIN Schedule ON Volunteers.volunteer_id = Schedule.volunteer_id JOIN Projects ON Schedule.project_id = Projects.project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS avg_age FROM Volunteers;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT project_id, COUNT(*) AS volunteer_count FROM Schedule GROUP BY project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT project_id, project_name, COUNT(volunteer_id) AS volunteer_count FROM Schedule JOIN Projects ON Schedule.project_id = Projects.project_id GROUP BY project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT Volunteers.name, Projects.project_name, Schedule.date FROM Volunteers LEFT JOIN Schedule ON Volunteers.volunteer_id = Schedule.volunteer_id LEFT JOIN Projects ON Schedule.project_id = Projects.project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT project_id, SUM(age) AS total_age FROM Volunteers JOIN Schedule ON Volunteers.volunteer_id = Schedule.volunteer_id GROUP BY project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT Volunteers.name AS volunteer_name, Projects.project_name AS project_name FROM Volunteers JOIN Schedule ON Volunteers.volunteer_id = Schedule.volunteer_id JOIN Projects ON Schedule.project_id = Projects.project_id ORDER BY volunteer_name ASC, project_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT DISTINCT project_id, project_name FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT volunteer_id, AVG(age) AS avg_age_per_volunteer FROM Volunteers JOIN Schedule ON Volunteers.volunteer_id = Schedule.volunteer_id GROUP BY volunteer_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT volunteer_id, COUNT(project_id) AS project_count FROM Schedule GROUP BY volunteer_id HAVING project_count > 2;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT project_id, MIN(date) AS earliest_date FROM Schedule WHERE date IS NOT NULL GROUP BY project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT volunteer_id, project_name, date FROM Schedule JOIN Projects ON Schedule.project_id = Projects.project_id WHERE project_name LIKE 'Volunteer%';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n    volunteer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    age INT,\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    project_description TEXT,\n    project_location VARCHAR(255)\n);\n\n\nCREATE TABLE Schedule (\n    schedule_id INT PRIMARY KEY,\n    volunteer_id INT,\n    project_id INT,\n    date DATE,\n    time TIME\n);\n\n### STATEMENT\n\nSELECT volunteer_id, project_name, date FROM Schedule JOIN Projects ON Schedule.project_id = Projects.project_id WHERE time BETWEEN '08:00:00' AND '12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Volunteers;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, email FROM Volunteers WHERE availability = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_id, project_name, location FROM Projects WHERE start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT assignment_id, volunteer_id, project_id FROM Assignments WHERE assignment_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT task_id, project_id, task_description FROM Tasks WHERE due_date < '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_id, COUNT(assignment_id) AS num_assignments FROM Assignments GROUP BY volunteer_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(end_date, start_date)) AS avg_project_duration FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_id, project_name, COUNT(task_id) AS num_tasks FROM Tasks GROUP BY project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, SUM(task_id) AS total_tasks_assigned FROM Tasks NATURAL JOIN Volunteers GROUP BY volunteer_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT assignment_id, volunteer_id, project_name FROM Assignments JOIN Projects ON Assignments.project_id = Projects.project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_id, project_name, task_description FROM Projects JOIN Tasks ON Projects.project_id = Tasks.project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_id, project_name, task_description FROM Volunteers JOIN Assignments ON Volunteers.volunteer_id = Assignments.volunteer_id JOIN Projects ON Assignments.project_id = Projects.project_id JOIN Tasks ON Projects.project_id = Tasks.project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Volunteers WHERE email LIKE '%example.com';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, assignment_status FROM Volunteers LEFT JOIN Assignments ON Volunteers.volunteer_id = Assignments.volunteer_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Projects WHERE project_id IN (SELECT project_id FROM Assignments);",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, project_name, task_description FROM Volunteers LEFT JOIN Assignments ON Volunteers.volunteer_id = Assignments.volunteer_id LEFT JOIN Projects ON Assignments.project_id = Projects.project_id LEFT JOIN Tasks ON Projects.project_id = Tasks.project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT project_id, project_name FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, project_name, task_description FROM Volunteers LEFT JOIN Assignments ON Volunteers.volunteer_id = Assignments.volunteer_id LEFT JOIN Projects ON Assignments.project_id = Projects.project_id LEFT JOIN Tasks ON Projects.project_id = Tasks.project_id WHERE task_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, SUM(CASE WHEN task_status = 'Completed' THEN 1 ELSE 0 END) AS total_completed_tasks FROM Volunteers LEFT JOIN Assignments ON Volunteers.volunteer_id = Assignments.volunteer_id LEFT JOIN Projects ON Assignments.project_id = Projects.project_id LEFT JOIN Tasks ON Projects.project_id = Tasks.project_id GROUP BY volunteer_id HAVING total_completed_tasks > 5;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Volunteers;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, email, phone_number, availability FROM Volunteers;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT name, email FROM Volunteers WHERE availability = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Projects WHERE start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_name, location FROM Projects WHERE end_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_name, description FROM Projects WHERE location LIKE '%City%';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Assignments INNER JOIN Volunteers ON Assignments.volunteer_id = Volunteers.volunteer_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT Volunteers.name, Projects.project_name FROM Assignments INNER JOIN Volunteers ON Assignments.volunteer_id = Volunteers.volunteer_id INNER JOIN Projects ON Assignments.project_id = Projects.project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT Tasks.task_description, Volunteers.name FROM Tasks INNER JOIN Volunteers ON Tasks.assigned_to = Volunteers.volunteer_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT Projects.project_name, Volunteers.name FROM Tasks INNER JOIN Volunteers ON Tasks.assigned_to = Volunteers.volunteer_id INNER JOIN Projects ON Tasks.project_id = Projects.project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT Volunteers.name AS volunteer_name, Projects.project_name AS project_name FROM Assignments INNER JOIN Volunteers ON Assignments.volunteer_id = Volunteers.volunteer_id INNER JOIN Projects ON Assignments.project_id = Projects.project_id;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT Tasks.task_id, Tasks.task_description, Volunteers.name FROM Tasks INNER JOIN Volunteers ON Tasks.assigned_to = Volunteers.volunteer_id WHERE Tasks.task_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_name, COUNT(assignment_id) AS assignment_count FROM Projects INNER JOIN Assignments ON Projects.project_id = Assignments.project_id GROUP BY project_name;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT Volunteers.name, COUNT(Assignments.assignment_id) AS assignment_count FROM Volunteers LEFT JOIN Assignments ON Volunteers.volunteer_id = Assignments.volunteer_id GROUP BY Volunteers.name;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT Projects.project_name, AVG(DATEDIFF(end_date, start_date)) AS average_duration FROM Projects;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT Volunteers.name, SUM(CASE WHEN assignment_status = 'Completed' THEN 1 ELSE 0 END) AS completed_assignments FROM Assignments INNER JOIN Volunteers ON Assignments.volunteer_id = Volunteers.volunteer_id GROUP BY Volunteers.name;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT Projects.project_name, MAX(due_date) AS latest_due_date FROM Tasks INNER JOIN Projects ON Tasks.project_id = Projects.project_id GROUP BY Projects.project_name;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT volunteer_id, name, email FROM Volunteers WHERE volunteer_id IN (SELECT volunteer_id FROM Assignments WHERE assignment_status = 'Completed');",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Volunteers ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Volunteers (\n\tvolunteer_id INT PRIMARY KEY,\n\tname VARCHAR(255) NOT NULL,\n\temail VARCHAR(255) UNIQUE,\n\tphone_number VARCHAR(20),\n\tavailability BOOLEAN\n);\n\n\nCREATE TABLE Projects (\n\tproject_id INT PRIMARY KEY,\n\tproject_name VARCHAR(255) NOT NULL,\n\tdescription TEXT,\n\tlocation VARCHAR(100),\n\tstart_date DATE,\n\tend_date DATE\n);\n\n\nCREATE TABLE Assignments (\n\tassignment_id INT PRIMARY KEY,\n\tvolunteer_id INT,\n\tproject_id INT,\n\tassignment_date DATE,\n\tassignment_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (volunteer_id) REFERENCES Volunteers (volunteer_id),\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\n\nCREATE TABLE Tasks (\n\ttask_id INT PRIMARY KEY,\n\tproject_id INT,\n\ttask_description TEXT,\n\tdue_date DATE,\n\tassigned_to INT,\n\ttask_status VARCHAR(20) DEFAULT 'Pending',\n\tFOREIGN KEY (project_id) REFERENCES Projects (project_id),\n\tFOREIGN KEY (assigned_to) REFERENCES Volunteers (volunteer_id)\n);\n\n### STATEMENT\n\nSELECT project_name, description FROM Projects ORDER BY start_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT * FROM volunteers;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT id, name, email FROM volunteers;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT * FROM projects;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT project_id, project_name, start_date FROM projects;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT * FROM volunteer_projects;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT volunteer_id, project_id FROM volunteer_projects;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT * FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT schedule_id, project_id, volunteer_id FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT * FROM tasks;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT task_id, task_description, project_id, volunteer_id FROM tasks;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT id, name, phone_number FROM volunteers;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT project_id, end_date FROM projects;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT volunteer_id, project_id, date, start_time FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT task_id, task_description, completion_status FROM tasks;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT id, email, phone_number FROM volunteers;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT project_name, start_date, end_date FROM projects;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT volunteer_id, project_id, date, end_time FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT task_id, volunteer_id, completion_status FROM tasks;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT id, name, email, phone_number FROM volunteers;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT project_id, project_name, start_date, end_date FROM projects;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT * FROM volunteers;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT name, email FROM volunteers WHERE phone_number LIKE '%555%';",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT project_name, start_date, end_date FROM projects WHERE start_date BETWEEN '2023-01-01' AND '2023-06-30';",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT v.name, p.project_name FROM volunteers v JOIN volunteer_projects vp ON v.id = vp.volunteer_id JOIN projects p ON vp.project_id = p.project_id;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT v.name AS volunteer_name, p.project_name AS project_name, s.date AS schedule_date FROM volunteers v JOIN volunteer_projects vp ON v.id = vp.volunteer_id JOIN projects p ON vp.project_id = p.project_id JOIN schedules s ON vp.project_id = s.project_id AND vp.volunteer_id = s.volunteer_id;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT t.task_id, t.task_description, v.name AS volunteer_name, p.project_name FROM tasks t JOIN volunteers v ON t.volunteer_id = v.id JOIN projects p ON t.project_id = p.project_id;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_tasks FROM tasks;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT v.name AS volunteer_name, COUNT(*) AS total_tasks FROM tasks t JOIN volunteers v ON t.volunteer_id = v.id GROUP BY volunteer_name;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT v.name AS volunteer_name, COUNT(*) AS total_tasks FROM tasks t JOIN volunteers v ON t.volunteer_id = v.id WHERE t.completion_status = TRUE GROUP BY volunteer_name;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT v.name AS volunteer_name, AVG(t.completion_status) AS avg_completion_status FROM tasks t JOIN volunteers v ON t.volunteer_id = v.id GROUP BY volunteer_name;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT p.project_name, COUNT(*) AS total_volunteers FROM volunteer_projects vp JOIN projects p ON vp.project_id = p.project_id GROUP BY project_name;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT p.project_name, MAX(s.date) AS last_schedule_date FROM schedules s JOIN projects p ON s.project_id = p.project_id GROUP BY project_name;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT v.name AS volunteer_name, SUM(TIMEDIFF(s.end_time, s.start_time)) AS total_hours FROM schedules s JOIN volunteers v ON s.volunteer_id = v.id GROUP BY volunteer_name;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT v.name AS volunteer_name, SUM(TIMEDIFF(s.end_time, s.start_time)) AS total_hours FROM schedules s JOIN volunteers v ON s.volunteer_id = v.id WHERE s.date BETWEEN '2023-07-01' AND '2023-12-31' GROUP BY volunteer_name;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT v.name AS volunteer_name, AVG(TIMEDIFF(s.end_time, s.start_time)) AS avg_hours FROM schedules s JOIN volunteers v ON s.volunteer_id = v.id GROUP BY volunteer_name;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT v.name AS volunteer_name, MAX(TIMEDIFF(s.end_time, s.start_time)) AS max_hours FROM schedules s JOIN volunteers v ON s.volunteer_id = v.id GROUP BY volunteer_name;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT p.project_name, COUNT(*) AS total_schedules FROM schedules s JOIN projects p ON s.project_id = p.project_id GROUP BY project_name;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT v.name AS volunteer_name, COUNT(*) AS total_schedules FROM schedules s JOIN volunteers v ON s.volunteer_id = v.id GROUP BY volunteer_name;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT v.name AS volunteer_name, COUNT(*) AS total_schedules FROM schedules s JOIN volunteers v ON s.volunteer_id = v.id WHERE s.date BETWEEN '2023-07-01' AND '2023-12-31' GROUP BY volunteer_name;",
  "### TABLEDATA\n\nCREATE TABLE volunteers (\n    id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE volunteer_projects (\n    volunteer_id INT,\n    project_id INT,\n    PRIMARY KEY (volunteer_id, project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id),\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n\nCREATE TABLE schedules (\n    schedule_id INT PRIMARY KEY,\n    project_id INT,\n    volunteer_id INT,\n    date DATE,\n    start_time TIME,\n    end_time TIME,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_description TEXT,\n    project_id INT,\n    volunteer_id INT,\n    completion_status BOOLEAN,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (volunteer_id) REFERENCES volunteers(id)\n);\n\n### STATEMENT\n\nSELECT v.name AS volunteer_name, AVG(TIMEDIFF(s.end_time, s.start_time)) AS avg_schedule_duration FROM schedules s JOIN volunteers v ON s.volunteer_id = v.id GROUP BY volunteer_name;"
]