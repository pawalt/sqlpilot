[
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, beneficiary_id, survey_date FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT beneficiary_id FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, satisfaction_score FROM surveys WHERE satisfaction_score > 3;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM surveys WHERE satisfaction_score = 5;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT feedback FROM surveys WHERE survey_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(satisfaction_score) FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(satisfaction_score) FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(satisfaction_score) FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT beneficiary_id, AVG(satisfaction_score) AS avg_score FROM surveys GROUP BY beneficiary_id;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, beneficiary_id, survey_date, satisfaction_score FROM surveys ORDER BY survey_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, beneficiary_id, survey_date, satisfaction_score FROM surveys ORDER BY satisfaction_score DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, beneficiary_id, survey_date, satisfaction_score FROM surveys WHERE beneficiary_id = 'abc123';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, beneficiary_id, survey_date, satisfaction_score FROM surveys WHERE satisfaction_score BETWEEN 3 AND 5;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, beneficiary_id, survey_date, satisfaction_score FROM surveys WHERE feedback IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, beneficiary_id, survey_date, satisfaction_score FROM surveys WHERE feedback LIKE '%great%';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, beneficiary_id, survey_date, satisfaction_score, feedback FROM surveys WHERE survey_id = '12345678-1234-1234-1234-1234567890ab';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, beneficiary_id, survey_date, satisfaction_score, feedback FROM surveys WHERE survey_date = '2021-05-10';",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, beneficiary_id, survey_date, satisfaction_score, feedback FROM surveys WHERE survey_id IN ('12345678-1234-1234-1234-1234567890ab', '87654321-4321-4321-4321-0987654321ba');",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM surveys WHERE beneficiary_id = '123e4567-e89b-12d3-a456-426614174000' ORDER BY survey_date DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, satisfaction_score FROM surveys WHERE satisfaction_score > 8 AND survey_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT beneficiary_id, COUNT(*) as total_surveys FROM surveys GROUP BY beneficiary_id HAVING total_surveys > 5",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(satisfaction_score) as avg_score, EXTRACT(MONTH FROM survey_date) as survey_month FROM surveys GROUP BY survey_month ORDER BY survey_month",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM surveys WHERE satisfaction_score < 5 AND feedback IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, beneficiary_id, satisfaction_score FROM surveys WHERE satisfaction_score = (SELECT MAX(satisfaction_score) FROM surveys)",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT beneficiary_id FROM surveys WHERE survey_date < '2022-06-01'",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT beneficiary_id) as unique_beneficiaries FROM surveys",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, survey_date, satisfaction_score FROM surveys WHERE survey_date = (SELECT MAX(survey_date) FROM surveys)",
  "### TABLEDATA\n\nCREATE TABLE surveys (\n    survey_id UUID PRIMARY KEY,\n    beneficiary_id UUID,\n    survey_date DATE,\n    satisfaction_score INT,\n    feedback TEXT\n);\n\n### STATEMENT\n\nSELECT survey_id, survey_date, satisfaction_score FROM surveys WHERE beneficiary_id IN ('123e4567-e89b-12d3-a456-426614174001', '123e4567-e89b-12d3-a456-426614174002') ORDER BY satisfaction_score DESC",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT response_id, beneficiary_id, survey_date, survey_score FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM BeneficiaryInformation;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT beneficiary_id, beneficiary_name, contact_number, address FROM BeneficiaryInformation;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT response_id, beneficiary_id, survey_date FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT beneficiary_id, beneficiary_name FROM BeneficiaryInformation;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT response_id, survey_score FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT contact_number, address FROM BeneficiaryInformation;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT response_id, survey_score FROM SurveyResponses WHERE survey_score > 80;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM BeneficiaryInformation WHERE beneficiary_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT beneficiary_id, address FROM BeneficiaryInformation WHERE contact_number LIKE '%123%';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT response_id, survey_date FROM SurveyResponses WHERE survey_date BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM BeneficiaryInformation WHERE address = '123 Main Street';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT response_id, survey_score FROM SurveyResponses ORDER BY survey_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT beneficiary_id, beneficiary_name FROM BeneficiaryInformation ORDER BY beneficiary_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT AVG(survey_score) AS average_score FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT beneficiary_id, COUNT(*) AS response_count FROM SurveyResponses GROUP BY beneficiary_id;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT beneficiary_name, MAX(survey_score) AS max_score FROM SurveyResponses GROUP BY beneficiary_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT b.beneficiary_id, b.beneficiary_name, s.survey_score FROM BeneficiaryInformation b JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT b.beneficiary_name, COUNT(*) AS response_count FROM BeneficiaryInformation b JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT response_id, beneficiary_id, survey_date FROM SurveyResponses WHERE survey_score > 80;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT s.beneficiary_id, b.beneficiary_name, s.survey_score FROM SurveyResponses s INNER JOIN BeneficiaryInformation b ON s.beneficiary_id = b.beneficiary_id;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT b.beneficiary_name, b.contact_number, s.survey_score FROM BeneficiaryInformation b INNER JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id WHERE s.survey_score < 50;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT s.response_id, s.survey_date FROM SurveyResponses s INNER JOIN BeneficiaryInformation b ON s.beneficiary_id = b.beneficiary_id WHERE b.beneficiary_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT SUM(survey_score) AS total_score FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT AVG(survey_score) AS average_score FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS response_count FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT MAX(survey_score) AS max_score FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT MIN(survey_score) AS min_score FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT b.beneficiary_name, COUNT(s.response_id) AS response_count FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT b.beneficiary_name, MAX(s.survey_score) AS max_score FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT b.beneficiary_name, AVG(s.survey_score) AS average_score FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT b.beneficiary_name, MIN(s.survey_score) AS min_score FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT b.beneficiary_name, COUNT(s.response_id) AS response_count, MAX(s.survey_score) AS max_score FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT b.beneficiary_name, COUNT(s.response_id) AS response_count, AVG(s.survey_score) AS average_score FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT b.beneficiary_name, COUNT(s.response_id) AS response_count, MIN(s.survey_score) AS min_score FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT b.beneficiary_name, MAX(s.survey_date) AS latest_survey_date FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT b.beneficiary_name, MIN(s.survey_date) AS earliest_survey_date FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    response_id INT PRIMARY KEY,\n    beneficiary_id INT,\n    survey_date DATE,\n    survey_score INT\n);\n\n\nCREATE TABLE BeneficiaryInformation (\n    beneficiary_id INT PRIMARY KEY,\n    beneficiary_name VARCHAR(50),\n    contact_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT b.beneficiary_name, COUNT(DISTINCT s.survey_date) AS unique_survey_dates FROM BeneficiaryInformation b LEFT JOIN SurveyResponses s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.beneficiary_name;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT name, email FROM Beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT name, age FROM Beneficiaries WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Surveys;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT survey_name, survey_date FROM Surveys;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Feedback;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT feedback_text, feedback_date FROM Feedback;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, s.survey_name FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, f.feedback_text FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id JOIN Feedback f ON s.survey_id = f.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, f.feedback_text FROM Beneficiaries b LEFT JOIN Feedback f ON b.beneficiary_id = f.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, COUNT(*) as total_surveys FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.name;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT gender, AVG(age) as average_age FROM Beneficiaries GROUP BY gender;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, s.survey_name, f.feedback_text FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id LEFT JOIN Feedback f ON s.survey_id = f.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, s.survey_name, f.feedback_text FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id JOIN Feedback f ON s.survey_id = f.survey_id WHERE f.feedback_text IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Beneficiaries WHERE age BETWEEN 25 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT name, email FROM Beneficiaries WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Surveys WHERE survey_date >= '2022-01-01' AND survey_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, COUNT(s.*) as total_surveys FROM Beneficiaries b LEFT JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.name;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, s.survey_name, COUNT(f.*) as total_feedback FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id LEFT JOIN Feedback f ON s.survey_id = f.survey_id GROUP BY b.name, s.survey_name;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT gender, MAX(age) as max_age FROM Beneficiaries GROUP BY gender;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Beneficiaries WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT name, email FROM Beneficiaries WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT name, age FROM Beneficiaries WHERE age BETWEEN 20 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, s.survey_name FROM Beneficiaries b INNER JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, f.feedback_text FROM Beneficiaries b INNER JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id INNER JOIN Feedback f ON s.survey_id = f.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT MAX(age) FROM Beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT AVG(age) FROM Beneficiaries WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT gender FROM Beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, s.survey_date FROM Beneficiaries b LEFT JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT MAX(age), MIN(age) FROM Beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, COUNT(f.feedback_id) AS total_feedback FROM Beneficiaries b LEFT JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id LEFT JOIN Feedback f ON s.survey_id = f.survey_id GROUP BY b.name;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, s.survey_name, f.feedback_text FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id JOIN Feedback f ON s.survey_id = f.survey_id WHERE b.age < 30;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, s.survey_name, f.feedback_text FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id JOIN Feedback f ON s.survey_id = f.survey_id WHERE s.survey_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, s.survey_name, SUM(b.age) AS total_age FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id GROUP BY b.name, s.survey_name;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, COUNT(DISTINCT f.survey_id) AS total_surveys FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id JOIN Feedback f ON s.survey_id = f.survey_id GROUP BY b.name;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS avg_age, COUNT(*) AS total_beneficiaries FROM Beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT name, CASE WHEN age > 30 THEN 'Old' ELSE 'Young' END AS age_group FROM Beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT name, email, ROW_NUMBER() OVER (ORDER BY age DESC) AS age_rank FROM Beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, s.survey_name, ROW_NUMBER() OVER (PARTITION BY s.survey_name ORDER BY b.name) AS survey_rank FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id;",
  "### TABLEDATA\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INT,\n    gender VARCHAR(10)\n);\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    beneficiary_id INT,\n    FOREIGN KEY (beneficiary_id) REFERENCES Beneficiaries(beneficiary_id)\n);\n\nCREATE TABLE Feedback (\n    feedback_id INT PRIMARY KEY,\n    survey_id INT,\n    feedback_text TEXT,\n    feedback_date TIMESTAMP,\n    FOREIGN KEY (survey_id) REFERENCES Surveys(survey_id)\n);\n\n### STATEMENT\n\nSELECT b.name, s.survey_name, LEAD(s.survey_date) OVER (PARTITION BY b.name ORDER BY s.survey_date) AS next_survey_date FROM Beneficiaries b JOIN Surveys s ON b.beneficiary_id = s.beneficiary_id;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT survey_id, beneficiary_id, question, response FROM SurveyResponses WHERE survey_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT survey_id, beneficiary_id, response FROM SurveyResponses WHERE response LIKE '%positive%';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT name, age, gender, location FROM Beneficiaries WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Surveys;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT survey_name, survey_date FROM Surveys WHERE completed = true;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM AidPrograms;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT program_id, program_name, start_date, end_date FROM AidPrograms WHERE start_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT SUM(age) AS total_age FROM Beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_surveys FROM Surveys;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS average_age FROM Beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT gender FROM Beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT program_name, COUNT(*) AS total_beneficiaries FROM Beneficiaries GROUP BY program_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT survey_name, COUNT(*) AS total_responses FROM SurveyResponses GROUP BY survey_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT program_name, SUM(age) AS total_age FROM Beneficiaries INNER JOIN AidPrograms ON Beneficiaries.beneficiary_id = AidPrograms.program_id GROUP BY program_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Beneficiaries WHERE location LIKE '%city%';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT name, location FROM Beneficiaries WHERE age < 25;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT program_name, AVG(age) AS average_age FROM Beneficiaries INNER JOIN AidPrograms ON Beneficiaries.beneficiary_id = AidPrograms.program_id GROUP BY program_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT survey_name, AVG(LENGTH(response)) AS avg_response_length FROM SurveyResponses GROUP BY survey_name;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM SurveyResponses WHERE beneficiary_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT survey_id, question FROM SurveyResponses WHERE beneficiary_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Beneficiaries WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT name, age, gender FROM Beneficiaries WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Surveys WHERE completed = true;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT program_id, program_name FROM AidPrograms WHERE start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT name, age, location FROM Beneficiaries WHERE location LIKE '%city%';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT survey_name, survey_date FROM Surveys WHERE survey_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM SurveyResponses WHERE question LIKE '%satisfaction%';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Beneficiaries WHERE age BETWEEN 20 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT program_id, program_name, end_date FROM AidPrograms WHERE end_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM SurveyResponses WHERE survey_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT name, age, gender, location FROM Beneficiaries WHERE name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT program_name, start_date, end_date FROM AidPrograms WHERE program_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT survey_name, survey_date FROM Surveys WHERE survey_date > '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Beneficiaries WHERE gender IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT survey_id FROM SurveyResponses;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT program_id, program_name FROM AidPrograms WHERE end_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(age) FROM Beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE SurveyResponses (\n    survey_id INT PRIMARY KEY,\n    beneficiary_id INT NOT NULL,\n    question TEXT,\n    response TEXT\n);\n\n\nCREATE TABLE Beneficiaries (\n    beneficiary_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    age INT,\n    gender VARCHAR(10),\n    location TEXT\n);\n\n\nCREATE TABLE Surveys (\n    survey_id INT PRIMARY KEY,\n    survey_name VARCHAR(100) NOT NULL,\n    survey_date DATE,\n    completed BOOLEAN\n);\n\n\nCREATE TABLE AidPrograms (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(100) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Surveys WHERE survey_name NOT LIKE '%feedback%';",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, age, gender FROM beneficiaries WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT email FROM beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM surveys;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT question, created_at FROM surveys WHERE closed = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM responses;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT answer, submitted_at FROM responses WHERE survey_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM aid_programs;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT program_name, description FROM aid_programs WHERE start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM feedback;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT feedback_text, rating FROM feedback WHERE rating = 5;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT b.name, r.answer, r.submitted_at FROM beneficiaries b INNER JOIN responses r ON b.id = r.beneficiary_id;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT s.question, r.answer, r.submitted_at FROM surveys s INNER JOIN responses r ON s.survey_id = r.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT p.program_name, p.start_date, f.feedback_text FROM aid_programs p LEFT JOIN feedback f ON p.program_id = f.response_id;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT b.name AS beneficiary_name, s.question AS survey_question, r.answer AS response_answer FROM beneficiaries b, surveys s, responses r WHERE b.id = r.beneficiary_id AND s.survey_id = r.survey_id;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM beneficiaries ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, age FROM beneficiaries WHERE age BETWEEN 20 AND 30;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT program_name, end_date FROM aid_programs WHERE end_date < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT count(*) AS total_responses FROM responses;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(rating) AS average_rating FROM feedback;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM beneficiaries WHERE age > 50;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM beneficiaries WHERE gender='Female';",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT b.name, r.answer FROM beneficiaries b JOIN responses r ON b.id = r.beneficiary_id;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT p.program_name, p.start_date, p.end_date, COUNT(r.response_id) AS total_responses FROM aid_programs p LEFT JOIN responses r ON p.program_id = r.survey_id GROUP BY p.program_name, p.start_date, p.end_date;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT s.question, COUNT(r.response_id) AS total_responses FROM surveys s LEFT JOIN responses r ON s.survey_id = r.survey_id GROUP BY s.question;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT b.name, a.program_name FROM beneficiaries b JOIN responses r ON b.id = r.beneficiary_id JOIN aid_programs a ON r.survey_id = a.program_id;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT b.name, f.feedback_text FROM beneficiaries b JOIN responses r ON b.id = r.beneficiary_id JOIN feedback f ON r.response_id = f.response_id;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT b.name, COUNT(f.feedback_id) AS total_feedbacks FROM beneficiaries b LEFT JOIN responses r ON b.id = r.beneficiary_id LEFT JOIN feedback f ON r.response_id = f.response_id GROUP BY b.name;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM beneficiaries WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS average_age FROM beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT count(*) as total_beneficiaries FROM beneficiaries;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(start_date) AS latest_start_date FROM aid_programs;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(created_at) AS earliest_response FROM responses;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT b.name, COALESCE(f.rating, 0) AS feedback_rating FROM beneficiaries b LEFT JOIN responses r ON b.id = r.beneficiary_id LEFT JOIN feedback f ON r.response_id = f.response_id;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(COALESCE(f.rating, 0)) AS average_rating FROM beneficiaries b LEFT JOIN responses r ON b.id = r.beneficiary_id LEFT JOIN feedback f ON r.response_id = f.response_id;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT b.name, COUNT(DISTINCT r.survey_id) AS total_surveys_answered FROM beneficiaries b JOIN responses r ON b.id = r.beneficiary_id;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT b.name, SUBSTRING(email, 1, POSITION('@' IN email) - 1) AS username FROM beneficiaries b;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT b.name, COUNT(*) AS total_responses FROM beneficiaries b JOIN responses r ON b.id = r.beneficiary_id GROUP BY b.name;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT a.program_name, SUM(CASE WHEN r.answer LIKE '%Yes%' THEN 1 ELSE 0 END) AS yes_count, SUM(CASE WHEN r.answer LIKE '%No%' THEN 1 ELSE 0 END) AS no_count FROM aid_programs a JOIN responses r ON a.program_id = r.survey_id GROUP BY a.program_name;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT b.name, COUNT(*) AS total_responses, AVG(f.rating) AS average_rating FROM beneficiaries b JOIN responses r ON b.id = r.beneficiary_id LEFT JOIN feedback f ON r.response_id = f.response_id GROUP BY b.name;",
  "### TABLEDATA\n\nCREATE TABLE beneficiaries (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE surveys (\n  survey_id SERIAL PRIMARY KEY,\n  question TEXT NOT NULL,\n  created_at TIMESTAMP,\n  closed BOOLEAN\n);\n\nCREATE TABLE responses (\n  response_id SERIAL PRIMARY KEY,\n  survey_id INT REFERENCES surveys(survey_id),\n  beneficiary_id INT REFERENCES beneficiaries(id),\n  answer TEXT,\n  submitted_at TIMESTAMP\n);\n\nCREATE TABLE aid_programs (\n  program_id SERIAL PRIMARY KEY,\n  program_name VARCHAR(100) UNIQUE,\n  description TEXT,\n  start_date DATE,\n  end_date DATE\n);\n\nCREATE TABLE feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  response_id INT REFERENCES responses(response_id),\n  feedback_text TEXT,\n  rating INT CHECK (rating >= 1 AND rating <= 5),\n  created_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT b.name, COUNT(*) AS total_responses, AVG(f.rating) AS average_rating FROM beneficiaries b JOIN responses r ON b.id = r.beneficiary_id LEFT JOIN feedback f ON r.response_id = f.feedback_id GROUP BY b.name;"
]