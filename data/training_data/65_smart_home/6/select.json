[
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT * FROM smart_home_notifications WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT id, device_id, message FROM smart_home_notifications WHERE notification_type = 'Alert';",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT COUNT(*) FROM smart_home_notifications;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT MAX(created_at) FROM smart_home_notifications;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) AS num_notifications FROM smart_home_notifications GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT * FROM smart_home_notifications ORDER BY created_at DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT * FROM smart_home_notifications WHERE created_at > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, notification_type FROM smart_home_notifications WHERE message LIKE '%motion%';",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT DISTINCT device_id FROM smart_home_notifications;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT id, created_at FROM smart_home_notifications WHERE device_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT message FROM smart_home_notifications WHERE id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT * FROM smart_home_notifications WHERE id BETWEEN 10 AND 20;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) AS num_notifications FROM smart_home_notifications WHERE notification_type = 'Warning' GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id FROM smart_home_notifications;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT * FROM smart_home_notifications WHERE message = 'System Error' OR message = 'Connection Lost';",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT * FROM smart_home_notifications WHERE created_at BETWEEN '2021-01-01' AND '2021-02-28';",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT id, message FROM smart_home_notifications WHERE created_at >= '2021-06-01' AND created_at < '2021-07-01';",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, notification_type FROM smart_home_notifications WHERE notification_type LIKE '%Fire%';",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT * FROM smart_home_notifications WHERE message IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT id, message FROM smart_home_notifications WHERE device_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT id, device_id, notification_type, message, created_at FROM smart_home_notifications WHERE device_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT id, device_id, notification_type, message, created_at FROM smart_home_notifications WHERE notification_type = 'Alert' ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT COUNT(*) as total_notifications FROM smart_home_notifications WHERE device_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) as total_alerts FROM smart_home_notifications WHERE notification_type = 'Alert' GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, AVG(id) as avg_notification_id FROM smart_home_notifications GROUP BY device_id HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, notification_type, COUNT(*) as total_notifications FROM smart_home_notifications GROUP BY device_id, notification_type HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, DATE(created_at) as notification_date, COUNT(*) as total_notifications FROM smart_home_notifications GROUP BY device_id, notification_date;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT device_id) as total_devices FROM smart_home_notifications;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, MAX(created_at) as latest_notification FROM smart_home_notifications GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, MIN(created_at) as earliest_notification FROM smart_home_notifications GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, notification_type, COUNT(*) as total_notifications, EXTRACT(MONTH FROM created_at) as month FROM smart_home_notifications GROUP BY device_id, notification_type, month;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, notification_type, COUNT(*) as total_notifications FROM smart_home_notifications WHERE EXTRACT(YEAR FROM created_at) = 2022 GROUP BY device_id, notification_type;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, notification_type, COUNT(*) as total_notifications, EXTRACT(WEEK FROM created_at) as week FROM smart_home_notifications WHERE EXTRACT(YEAR FROM created_at) = 2022 GROUP BY device_id, notification_type, week;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, AVG(EXTRACT(HOUR FROM created_at)) as avg_notification_hour FROM smart_home_notifications GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) as total_notifications, (SELECT message FROM smart_home_notifications WHERE device_id = 3 LIMIT 1) as sample_message FROM smart_home_notifications GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, notification_type, COUNT(*) as total_notifications, CONCAT('Notification: ', notification_type) as formatted_notification_type FROM smart_home_notifications GROUP BY device_id, notification_type;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, notification_type, COUNT(*) as total_notifications, CONCAT('Device: ', device_id, ' - Notification: ', notification_type) as formatted_info FROM smart_home_notifications GROUP BY device_id, notification_type;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) as total_notifications, SUBSTRING(message, 1, 20) as short_message FROM smart_home_notifications GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, notification_type, COUNT(*) as total_notifications FROM smart_home_notifications WHERE message LIKE '%warning%' GROUP BY device_id, notification_type;",
  "### TABLEDATA\n\nCREATE TABLE smart_home_notifications (\n        id INT PRIMARY KEY,\n        device_id INT NOT NULL,\n        notification_type TEXT NOT NULL,\n        message TEXT NOT NULL,\n        created_at TIMESTAMP NOT NULL\n    );\n\n### STATEMENT\n\nSELECT device_id, notification_type, COUNT(*) as total_notifications FROM smart_home_notifications WHERE message LIKE '%important%' GROUP BY device_id, notification_type;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notification_id, notification_type FROM notifications WHERE device_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, device_name FROM devices WHERE is_active = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT message FROM notifications WHERE created_at >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM notifications JOIN devices ON notifications.device_id = devices.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, location FROM devices WHERE device_name LIKE '%iPhone%';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(created_at) AS latest_notification FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) AS notification_count FROM notifications GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notification_type, COUNT(*) AS type_count FROM notifications GROUP BY notification_type;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, AVG(notification_id) AS avg_notification_id FROM notifications GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, MIN(created_at) AS earliest_notification FROM notifications GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, location FROM devices WHERE device_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, MAX(created_at) AS latest_notification FROM notifications GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, SUM(notification_id) AS total_notifications FROM notifications GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_name, COUNT(*) AS total_notifications FROM notifications JOIN devices ON notifications.device_id = devices.device_id GROUP BY device_name;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) AS notification_count FROM notifications WHERE device_id BETWEEN 1 AND 10 GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(created_at) - MIN(created_at) AS time_difference FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT is_active, COUNT(*) AS active_devices FROM devices GROUP BY is_active;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_name, location, is_active FROM devices WHERE last_update < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM notifications WHERE notification_type = 'alert';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notification_id, message FROM notifications WHERE device_id = 123 AND created_at >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notifications.notification_id, notifications.message, devices.device_name FROM notifications INNER JOIN devices ON notifications.device_id = devices.device_id WHERE devices.location = 'Office';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notification_id, message FROM notifications WHERE notification_type = 'info' OR notification_type = 'warning';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_alerts FROM notifications WHERE notification_type = 'alert';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, AVG(notification_id) AS avg_notification_id FROM notifications GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM devices WHERE is_active = TRUE AND last_update BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, location FROM devices WHERE device_id IN (SELECT device_id FROM notifications WHERE notification_type = 'alert');",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notification_id, message FROM notifications WHERE device_id IN (SELECT device_id FROM devices WHERE location = 'Home');",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(notification_id) AS total_notifications FROM notifications GROUP BY device_id HAVING COUNT(notification_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(notification_id) AS max_notification_id, MIN(notification_id) AS min_notification_id, AVG(notification_id) AS avg_notification_id FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notification_id, message FROM notifications ORDER BY created_at DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notification_id, notification_type, message, created_at FROM notifications WHERE device_id = (SELECT device_id FROM devices WHERE device_name = 'Mobile Device');",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM devices WHERE location LIKE '%Building%' AND is_active = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) AS total_notifications FROM notifications GROUP BY device_id ORDER BY COUNT(*) DESC;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_name, location, COUNT(notification_type) AS total_notifications FROM devices LEFT JOIN notifications ON devices.device_id = notifications.device_id GROUP BY device_name, location ORDER BY total_notifications DESC;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notification_type, COUNT(*) AS total_notifications FROM notifications GROUP BY notification_type HAVING COUNT(*) > 100;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notifications.notification_id, notifications.message, devices.device_name FROM notifications INNER JOIN devices ON notifications.device_id = devices.device_id WHERE devices.is_active = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    device_id INT,\n    notification_type VARCHAR(50),\n    message TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(50),\n    location VARCHAR(100),\n    is_active BOOLEAN,\n    last_update TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT notification_id, message FROM notifications WHERE created_at >= '2022-01-01' AND created_at <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT id, message, timestamp FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT id, message FROM notifications WHERE device_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT id, message FROM notifications WHERE timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name FROM devices WHERE location = 'Home';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT device_id, status FROM devices WHERE device_name = 'Smartphone';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE phone_number = '123456789';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE email LIKE '%@example.com%';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT device_id, device_name FROM devices INNER JOIN notifications ON devices.device_id = notifications.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, username, device_name FROM users JOIN devices ON users.user_id = devices.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT u.user_id, u.username, d.device_name FROM users u INNER JOIN devices d ON u.user_id = d.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT d.device_id, d.device_name, n.message FROM devices d JOIN notifications n ON d.device_id = n.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT u.username, d.device_name, n.message FROM users u JOIN devices d ON u.user_id = d.device_id JOIN notifications n ON d.device_id = n.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT u.username, d.device_name, n.message FROM users u, devices d, notifications n WHERE u.user_id = d.device_id AND d.device_id = n.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT u.username AS user, d.device_name AS device, n.message AS notification FROM users u JOIN devices d ON u.user_id = d.device_id JOIN notifications n ON d.device_id = n.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) as notification_count FROM notifications GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT location, COUNT(*) as device_count FROM devices GROUP BY location HAVING device_count > 1;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT device_id, MAX(timestamp) as latest_timestamp FROM notifications GROUP BY device_id ORDER BY latest_timestamp DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM notifications WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT device_id, message FROM notifications WHERE timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT notifications.id, notifications.message, devices.device_name FROM notifications JOIN devices ON notifications.device_id = devices.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT notifications.message, devices.location FROM notifications JOIN devices ON notifications.device_id = devices.device_id WHERE devices.device_name = 'Device A';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT notifications.message, devices.location, users.username FROM notifications JOIN devices ON notifications.device_id = devices.device_id JOIN users ON devices.device_id = users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT device_id FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(id) FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT AVG(device_id) FROM notifications GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MAX(timestamp) FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT device_name, COUNT(id) AS notification_count FROM notifications JOIN devices ON notifications.device_id = devices.device_id GROUP BY device_name;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT device_name, COUNT(id) AS notification_count FROM notifications JOIN devices ON notifications.device_id = devices.device_id WHERE devices.status = 'Active' GROUP BY device_name;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT notification_id, message FROM notifications UNION SELECT device_id, device_name FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM notifications WHERE message LIKE '%urgent%';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM notifications WHERE message LIKE '%error%' AND timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM notifications ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM notifications WHERE device_id IN (SELECT device_id FROM devices WHERE location = 'Floor 1');",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT devices.device_name, notifications.message, notifications.timestamp FROM devices LEFT JOIN notifications ON devices.device_id = notifications.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(id) AS notification_count FROM notifications GROUP BY device_id HAVING COUNT(id) > 10;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT device_name, COUNT(id) AS notification_count FROM notifications JOIN devices ON notifications.device_id = devices.device_id GROUP BY device_name HAVING COUNT(id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT device_name, MAX(timestamp) AS latest_notification FROM notifications JOIN devices ON notifications.device_id = devices.device_id GROUP BY device_name;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n    id INT PRIMARY KEY,\n    device_id INT,\n    message VARCHAR(255),\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    location VARCHAR(255),\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(id) AS notification_count, DATE(timestamp) AS notification_date FROM notifications GROUP BY DATE(timestamp);",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_name FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, device_name FROM devices WHERE device_type='phone';",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT notification_id, message FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, maintenance_type FROM maintenance_logs;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM users WHERE phone_number='1234567890';",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, user_id, message FROM notifications WHERE timestamp>'2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM devices ORDER BY last_updated DESC;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE email LIKE '%@example.com%';",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, device_type, last_updated FROM devices LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, phone_number FROM users WHERE username='john_doe';",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT device_type FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE user_id IN (SELECT user_id FROM notifications);",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, maintenance_date FROM maintenance_logs WHERE maintenance_type='routine';",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE user_id=1001;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM devices WHERE device_id IN (SELECT device_id FROM maintenance_logs);",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(*) AS num_maintenances FROM maintenance_logs GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, MAX(maintenance_date) AS last_maintenance_date FROM maintenance_logs GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, device_type FROM devices WHERE device_type = 'mobile';",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, device_type, last_updated FROM devices WHERE last_updated >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, device_type FROM devices ORDER BY device_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, device_type, last_updated FROM devices WHERE device_type = 'tablet' AND last_updated < '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, device_type, last_updated FROM devices WHERE device_name LIKE 'S%';",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM users WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username, email, phone_number FROM users WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM notifications WHERE timestamp >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, user_id, message, timestamp FROM notifications ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, user_id, message FROM notifications WHERE device_id IN (SELECT device_id FROM devices WHERE device_type = 'laptop');",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, maintenance_type, maintenance_date FROM maintenance_logs WHERE maintenance_type = 'repair' ORDER BY maintenance_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_devices FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(last_updated) AS latest_update FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(notification_id) AS total_notifications FROM notifications GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(log_id) AS total_logs FROM maintenance_logs GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(user_id) AS total_users FROM notifications GROUP BY device_id HAVING COUNT(user_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, user_id FROM notifications UNION SELECT device_id, user_id FROM maintenance_logs;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, device_type, users.username AS user_assigned FROM devices LEFT JOIN users ON devices.device_id = users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE devices (\n  device_id INT PRIMARY KEY,\n  device_name VARCHAR(255),\n  device_type VARCHAR(50),\n  last_updated TIMESTAMP\n);\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(255),\n  phone_number VARCHAR(20)\n);\n\nCREATE TABLE notifications (\n  notification_id INT PRIMARY KEY,\n  device_id INT,\n  user_id INT,\n  message VARCHAR(255),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_logs (\n  log_id INT PRIMARY KEY,\n  device_id INT,\n  maintenance_type VARCHAR(50),\n  maintenance_date DATE\n);\n\n### STATEMENT\n\nSELECT users.username, maintenance_logs.maintenance_type, maintenance_logs.maintenance_date FROM users RIGHT JOIN maintenance_logs ON users.user_id = maintenance_logs.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT notification_id, device_id, message, created_at FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT device_name, location FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT username, email FROM users;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT log_id, notification_id, user_id, status, timestamp FROM notifications_log;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM maintenance_schedule;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, start_date, end_date FROM maintenance_schedule;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT notification_id, device_id, status, timestamp FROM notifications_log;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT notification_id, message, created_at, status, timestamp FROM notifications, notifications_log;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username, email, log_id, notification_id FROM users, notifications_log;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, location, start_date, end_date FROM devices, maintenance_schedule;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, device_name, location, start_date, end_date FROM devices INNER JOIN maintenance_schedule ON devices.device_id = maintenance_schedule.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT notification_id, message, status, timestamp, device_name, location FROM notifications, notifications_log, devices WHERE notifications.device_id = devices.device_id AND notifications_log.notification_id = notifications.notification_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username, email, status, timestamp, device_name FROM users, notifications_log, devices WHERE users.user_id = notifications_log.user_id AND devices.device_id = notifications_log.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM notifications WHERE notification_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT device_name, location FROM devices WHERE device_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE user_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT status, timestamp FROM notifications_log WHERE log_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, start_date, end_date FROM maintenance_schedule WHERE schedule_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT notification_id, device_id, message FROM notifications WHERE created_at > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT notifications.notification_id, notifications.message, devices.device_name FROM notifications JOIN devices ON notifications.device_id = devices.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(notification_id) AS total_notifications FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM notifications WHERE device_id IN (SELECT device_id FROM devices WHERE location = 'Living Room');",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT notifications.notification_id, notifications.message, notifications_log.status FROM notifications JOIN notifications_log ON notifications.notification_id = notifications_log.notification_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM notifications WHERE notification_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT notifications.notification_id, notifications.message, users.username FROM notifications JOIN notifications_log ON notifications.notification_id = notifications_log.notification_id JOIN users ON notifications_log.user_id = users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT devices.location, COUNT(notification_id) AS total_notifications FROM devices LEFT JOIN notifications ON devices.device_id = notifications.device_id GROUP BY devices.location;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT notification_id, message FROM notifications WHERE notification_id NOT IN (SELECT notification_id FROM notifications_log);",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT notifications.notification_id, notifications.message, maintenance_schedule.start_date FROM notifications LEFT JOIN maintenance_schedule ON notifications.device_id = maintenance_schedule.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT device_id FROM maintenance_schedule;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT notifications.notification_id, notifications_log.status, maintenance_schedule.start_date FROM notifications JOIN notifications_log ON notifications.notification_id = notifications_log.notification_id LEFT JOIN maintenance_schedule ON notifications.device_id = maintenance_schedule.device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, COUNT(schedule_id) AS total_maintenance_schedules FROM maintenance_schedule GROUP BY device_id HAVING total_maintenance_schedules > 0;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, device_name FROM devices UNION SELECT device_id, device_name FROM maintenance_schedule;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, location FROM devices WHERE device_name LIKE 'Kitchen%';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT devices.location, COUNT(notification_id) AS total_notifications FROM devices RIGHT JOIN notifications ON devices.device_id = notifications.device_id GROUP BY devices.location;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT users.username, notifications_log.status FROM users JOIN notifications_log ON users.user_id = notifications_log.user_id WHERE notifications_log.status = 'SENT';",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT device_id, MIN(start_date) AS earliest_maintenance FROM maintenance_schedule GROUP BY device_id;",
  "### TABLEDATA\n\nCREATE TABLE notifications (\n   notification_id INT PRIMARY KEY,\n   device_id INT,\n   message TEXT,\n   created_at TIMESTAMP\n);\n\nCREATE TABLE devices (\n   device_id INT PRIMARY KEY,\n   device_name TEXT,\n   location TEXT\n);\n\nCREATE TABLE users (\n   user_id INT PRIMARY KEY,\n   username TEXT,\n   email TEXT\n);\n\nCREATE TABLE notifications_log (\n   log_id INT PRIMARY KEY,\n   notification_id INT,\n   user_id INT,\n   status TEXT,\n   timestamp TIMESTAMP\n);\n\nCREATE TABLE maintenance_schedule (\n   schedule_id INT PRIMARY KEY,\n   device_id INT,\n   start_date DATE,\n   end_date DATE\n);\n\n### STATEMENT\n\nSELECT notifications.notification_id, notifications.message, notifications_log.status FROM notifications JOIN notifications_log ON notifications.notification_id = notifications_log.notification_id WHERE notifications_log.timestamp BETWEEN '2022-01-01' AND '2022-12-31';"
]