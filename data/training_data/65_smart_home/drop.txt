<t>CREATE TABLE smart_home_devices ( device_id SERIAL PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50), room_name VARCHAR(50), owner_id INT, active BOOLEAN default TRUE );</t><stat>DROP TABLE IF EXISTS smart_home_devices;</stat><divider><t>CREATE TABLE smart_home_devices ( device_id SERIAL PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50), room_name VARCHAR(50), owner_id INT, active BOOLEAN default TRUE );</t><stat>drop table if exists smart_home_devices;</stat><divider><t>CREATE TABLE smart_home_devices ( device_id SERIAL PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50), room_name VARCHAR(50), owner_id INT, active BOOLEAN default TRUE );</t><stat>DROP SEQUENCE IF EXISTS smart_home_devices_device_id_seq;</stat><divider><t>CREATE TABLE smart_home_devices ( device_id SERIAL PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50), room_name VARCHAR(50), owner_id INT, active BOOLEAN default TRUE );</t><stat>drop sequence if exists smart_home_devices_device_id_seq;</stat><divider><t>CREATE TABLE smart_home_devices ( device_id SERIAL PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50), room_name VARCHAR(50), owner_id INT, active BOOLEAN default TRUE );</t><stat>DROP TYPE IF EXISTS smart_home_devices_device_type_enum;</stat><divider><t>CREATE TABLE smart_home_devices ( device_id SERIAL PRIMARY KEY, device_name VARCHAR(50), device_type VARCHAR(50), room_name VARCHAR(50), owner_id INT, active BOOLEAN default TRUE );</t><stat>drop type if exists smart_home_devices_device_type_enum;</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )</t><stat>DROP TABLE device_logs</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )</t><stat>drop table device_logs</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )</t><stat>DROP TABLE device_logs</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )</t><stat>drop table device_logs</stat><divider><t>CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )</t><stat>DROP TABLE device_logs</stat><divider><t>CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )</t><stat>drop table device_logs</stat><divider><t>CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )</t><stat>DROP TABLE device_logs</stat><divider><t>CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )</t><stat>drop table device_logs</stat><divider><t>CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )</t><stat>DROP TABLE device_logs</stat><divider><t>CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )</t><stat>drop table device_logs</stat><divider><t>CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )</t><stat>DROP TABLE device_logs</stat><divider><t>CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )</t><stat>drop table device_logs</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )</t><stat>DROP TABLE devices</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )</t><stat>drop table devices</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )</t><stat>DROP TABLE devices</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )</t><stat>drop table devices</stat><divider><t>CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )</t><stat>DROP TABLE devices</stat><divider><t>CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )</t><stat>drop table devices</stat><divider><t>CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )</t><stat>DROP TABLE devices</stat><divider><t>CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )</t><stat>drop table devices</stat><divider><t>CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )</t><stat>DROP TABLE devices</stat><divider><t>CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )</t><stat>drop table devices</stat><divider><t>CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )</t><stat>DROP TABLE devices</stat><divider><t>CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )</t><stat>drop table devices</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )</t><stat>drop table users</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )</t><stat>drop table users</stat><divider><t>CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )</t><stat>drop table users</stat><divider><t>CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )</t><stat>drop table users</stat><divider><t>CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )</t><stat>drop table users</stat><divider><t>CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )</t><stat>DROP TABLE users</stat><divider><t>CREATE TABLE device_logs ( log_id INT PRIMARY KEY, device_id INT NOT NULL, log_timestamp TIMESTAMP NOT NULL DEFAULT NOW(), log_message TEXT NOT NULL, FOREIGN KEY (device_id) REFERENCES devices(device_id) ON DELETE CASCADE )

CREATE TABLE devices ( device_id INT PRIMARY KEY, device_name VARCHAR(50) NOT NULL, device_type VARCHAR(50) NOT NULL, user_id INT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE )

CREATE TABLE users ( user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() )</t><stat>drop table users</stat><divider><t>CREATE TABLE IF NOT EXISTS houses (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL)</t><stat>DROP TABLE IF EXISTS houses</stat><divider><t>CREATE TABLE IF NOT EXISTS houses (id SERIAL PRIMARY KEY, name VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL)</t><stat>drop table if exists houses</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE schedules;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table schedules;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE device_logs;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table device_logs;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);
</t><stat>drop table rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>DROP TABLE rooms;</stat><divider><t>CREATE TABLE schedules (
    schedule_id INT PRIMARY KEY,
    schedule_name VARCHAR(50) NOT NULL,
    device_id INT REFERENCES devices(device_id),
    start_time TIMESTAMP,
    end_time TIMESTAMP
);


CREATE TABLE device_logs (
    log_id INT PRIMARY KEY,
    device_id INT REFERENCES devices(device_id),
    log_timestamp TIMESTAMP,
    log_message TEXT
);


CREATE TABLE rooms (
    room_id INT PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL
);


CREATE TABLE devices (
    device_id INT PRIMARY KEY,
    device_name VARCHAR(50) NOT NULL,
    device_type VARCHAR(50) NOT NULL,
    user_id INT REFERENCES users(user_id)
);


CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL
);
</t><stat>drop table rooms;</stat>