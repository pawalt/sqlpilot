[
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules WHERE task_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT task_name FROM TaskSchedules WHERE task_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT schedule_time FROM TaskSchedules WHERE task_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules WHERE task_name = 'Task A';",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT task_id, task_name FROM TaskSchedules WHERE task_name LIKE '%Task%';",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules WHERE schedule_time > NOW();",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules WHERE schedule_time BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT MAX(schedule_time) FROM TaskSchedules;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT MIN(repeat_interval) FROM TaskSchedules;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM TaskSchedules;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT DISTINCT task_name FROM TaskSchedules;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules ORDER BY schedule_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules WHERE repeat_interval > INTERVAL '1 day';",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT AVG(task_id) FROM TaskSchedules;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT SUM(EXTRACT(EPOCH FROM repeat_interval)) FROM TaskSchedules;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules WHERE EXTRACT(MONTH FROM schedule_time) = 6;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules WHERE EXTRACT(DOW FROM schedule_time) = 0;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT task_name, COUNT(*) AS task_count FROM TaskSchedules GROUP BY task_name;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules WHERE task_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT task_name, schedule_time FROM TaskSchedules WHERE schedule_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules ORDER BY schedule_time ASC;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT task_name, repeat_interval FROM TaskSchedules WHERE repeat_interval BETWEEN '1 day' AND '1 month';",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT task_id, task_name FROM TaskSchedules WHERE task_name LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules WHERE task_id IN (2, 5, 8);",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT DISTINCT task_name FROM TaskSchedules;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT task_id, task_name, schedule_time FROM TaskSchedules WHERE schedule_time >= '2022-03-01' AND schedule_time < '2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_tasks FROM TaskSchedules;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT AVG(EXTRACT(EPOCH FROM repeat_interval)) AS avg_interval FROM TaskSchedules;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT task_id, task_name FROM TaskSchedules WHERE repeat_interval < '1 week' ORDER BY task_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules WHERE schedule_time::date = CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT task_id, MAX(schedule_time) AS latest_schedule FROM TaskSchedules GROUP BY task_id;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules WHERE EXTRACT(DOW FROM schedule_time) = 1;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT task_id, task_name FROM TaskSchedules WHERE schedule_time >= '2022-05-01' AND schedule_time < '2022-05-15';",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT task_id, task_name FROM TaskSchedules WHERE EXTRACT(YEAR FROM schedule_time) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT task_id, task_name, EXTRACT(MONTH FROM schedule_time) AS month FROM TaskSchedules GROUP BY task_id, task_name, month;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT task_id, task_name, repeat_interval FROM TaskSchedules WHERE repeat_interval IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT task_id, task_name, schedule_time, repeat_interval FROM TaskSchedules WHERE schedule_time > '2022-06-01' AND repeat_interval IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE TaskSchedules (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    schedule_time TIMESTAMP,\n    repeat_interval INTERVAL\n)\n\n### STATEMENT\n\nSELECT task_id, task_name, schedule_time FROM TaskSchedules WHERE schedule_time < CURRENT_TIMESTAMP;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT * FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT schedule_id, task_name FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_name, start_time, end_time FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT * FROM tasks;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_id, task_name FROM tasks;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_name, task_type FROM tasks;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT schedule_id, task_id FROM schedules JOIN tasks ON schedules.task_name = tasks.task_name;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_name, task_type, task_frequency FROM tasks WHERE task_type = 'Important';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_name, start_time FROM schedules WHERE start_time >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT schedule_id, end_time FROM schedules WHERE end_time <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_name, task_type, task_frequency FROM tasks ORDER BY task_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT schedule_id, task_name, start_time FROM schedules ORDER BY start_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_name, task_description FROM schedules WHERE task_name LIKE '%meeting%';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_name, end_time FROM schedules WHERE EXTRACT(MONTH FROM end_time) = 6;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_name, task_type FROM tasks WHERE task_type IN ('Urgent', 'Critical');",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT DISTINCT task_name FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT AVG(task_frequency) FROM tasks;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT COUNT(schedule_id) FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT schedule_id, task_name, task_type FROM schedules LEFT JOIN tasks ON schedules.task_name = tasks.task_name;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT schedule_id, task_name, task_type FROM schedules RIGHT JOIN tasks ON schedules.task_name = tasks.task_name;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT * FROM schedules WHERE task_name = 'Meeting';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_name, task_description FROM schedules WHERE start_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_name, start_time, end_time FROM schedules WHERE task_name LIKE 'Report%';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT * FROM tasks WHERE task_type = 'Work' AND task_frequency = '1 day';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_name, task_description FROM tasks WHERE task_frequency >= '3 hours';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT schedule_id, task_name, start_time FROM schedules WHERE end_time < '2023-01-01' ORDER BY start_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT * FROM tasks WHERE task_name LIKE '%Review%' OR task_name LIKE '%Analysis%';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_name, task_description FROM tasks WHERE task_type IN ('Meeting', 'Presentation');",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_id, task_name, task_description FROM tasks WHERE task_frequency = '30 minutes' AND task_type = 'Reminder';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_id, task_name, task_type, task_frequency FROM tasks WHERE task_frequency BETWEEN '1 hour' AND '3 hours';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_name, task_frequency FROM tasks WHERE task_frequency = '1 week';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT schedule_id, start_time, end_time FROM schedules WHERE task_name NOT LIKE '%Meeting%';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_name, task_frequency FROM tasks WHERE task_type = 'Work' ORDER BY task_frequency ASC;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT * FROM schedules JOIN tasks ON schedules.task_name = tasks.task_name;",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_name, start_time, end_time FROM schedules WHERE task_name = 'Report' AND start_time BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT task_id, task_name, task_description FROM tasks WHERE task_name ILIKE '%important%' AND task_type = 'Task';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT schedule_id, task_name, start_time, end_time FROM schedules WHERE task_name = 'Presentation' AND (start_time < '2023-01-01' OR end_time > '2023-01-01');",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT count(*) FROM schedules WHERE start_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE schedules (\n    schedule_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    task_type VARCHAR(50),\n    task_frequency INTERVAL\n);\n\n### STATEMENT\n\nSELECT DISTINCT task_name FROM tasks;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM lights_schedule;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT task_name, start_time FROM lights_schedule;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT username, email FROM users;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM logs;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT action, timestamp FROM logs;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT task_description FROM lights_schedule WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT username FROM users WHERE role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM lights_schedule WHERE start_time > '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM logs WHERE action LIKE '%login%';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT task_name, end_time FROM lights_schedule WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, action FROM logs WHERE timestamp < '2022-06-01 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE role = 'user';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT task_name, task_description FROM lights_schedule WHERE start_time BETWEEN '2022-07-01 00:00:00' AND '2022-07-31 23:59:59';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM logs WHERE user_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE email LIKE '%example.com%';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT action, timestamp FROM logs WHERE user_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM lights_schedule WHERE end_time < '2022-09-30';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT task_name FROM lights_schedule WHERE task_name = 'Cleaning Task';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM lights_schedule WHERE start_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT task_name, task_description FROM lights_schedule WHERE end_time < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM logs WHERE action = 'login';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT task_name, start_time, end_time FROM lights_schedule WHERE task_description LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM logs WHERE timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, role FROM users WHERE email LIKE '%@example.com%';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT task_name, task_description, start_time FROM lights_schedule ORDER BY start_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM users ORDER BY username ASC;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT task_name, end_time FROM lights_schedule WHERE task_name LIKE '%meeting%' ORDER BY end_time ASC;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM logs WHERE timestamp BETWEEN '2022-01-01' AND '2022-12-31' AND action = 'logout';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email, role FROM users WHERE role = 'admin' OR role = 'manager';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT task_name, end_time FROM lights_schedule WHERE end_time < '2022-12-31' AND task_description NOT LIKE '%obsolete%';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM logs WHERE timestamp >= '2022-01-01' AND user_id IN (SELECT user_id FROM users WHERE role = 'admin');",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE user_id = 123456;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT task_name, start_time, end_time FROM lights_schedule WHERE task_name IN ('Meeting', 'Training', 'Presentation');",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email, role FROM users WHERE role NOT IN ('admin', 'manager');",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT task_name, start_time, end_time FROM lights_schedule WHERE end_time < '2022-06-30' OR start_time > '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    task_name VARCHAR(255),\n    task_description TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) UNIQUE,\n    email VARCHAR(255),\n    password TEXT,\n    role VARCHAR(50)\n);\n\nCREATE TABLE logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    action VARCHAR(255),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM logs WHERE user_id = (SELECT user_id FROM users WHERE username = 'john_doe');",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM lights_schedule;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT light_name FROM lights_schedule WHERE turn_on_time < NOW();",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT task_name, task_description FROM tasks WHERE task_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM schedule_logs WHERE log_timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE username LIKE 'john%';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM tasks;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT task_name, task_description FROM tasks WHERE task_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM schedule_logs ORDER BY log_timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT light_name, turn_on_time, turn_off_time FROM lights_schedule WHERE turn_off_time < DATE_ADD(turn_on_time, INTERVAL 1 DAY);",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE email LIKE '%example.com';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT task_id, task_name FROM tasks WHERE task_description LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT task_id) AS unique_tasks FROM schedule_logs;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM tasks LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT task_name, LENGTH(task_description) AS description_length FROM tasks;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS task_count FROM schedule_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(log_id) AS avg_log_id FROM schedule_logs;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(log_timestamp) AS latest_log_timestamp FROM schedule_logs;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT light_name, COUNT(*) AS usage_count FROM lights_schedule GROUP BY light_name;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS log_count FROM schedule_logs GROUP BY user_id HAVING log_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM lights_schedule WHERE light_name = 'Living Room Light';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT task_name FROM tasks WHERE task_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE email LIKE '%@example.com%';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT task_name, task_description FROM tasks WHERE task_name LIKE '%clean%';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM lights_schedule WHERE turn_on_time < '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM lights_schedule WHERE turn_off_time > '2021-12-01 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE user_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM tasks WHERE task_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE username = 'admin' AND email = 'admin@example.com';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT task_name FROM tasks WHERE task_id > 5 AND task_description IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM schedule_logs WHERE log_timestamp BETWEEN '2022-01-01 00:00:00' AND '2022-01-31 23:59:59';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users ORDER BY username ASC;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT log_id, log_timestamp, log_message FROM schedule_logs ORDER BY log_timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT(light_name) FROM lights_schedule;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT task_name, COUNT(*) AS task_count FROM schedule_logs GROUP BY task_name;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS log_count FROM schedule_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT(light_name), MIN(turn_on_time) AS earliest_time, MAX(turn_off_time) AS latest_time FROM lights_schedule GROUP BY light_name;",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM tasks JOIN schedule_logs ON tasks.task_id = schedule_logs.task_id WHERE tasks.task_name = 'Programming';",
  "### TABLEDATA\n\nCREATE TABLE lights_schedule (\n    id INT PRIMARY KEY,\n    light_name VARCHAR(50) NOT NULL,\n    turn_on_time TIMESTAMP NOT NULL,\n    turn_off_time TIMESTAMP NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) NOT NULL,\n    task_description TEXT\n);\n\nCREATE TABLE schedule_logs (\n    log_id INT PRIMARY KEY,\n    task_id INT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS log_count FROM schedule_logs GROUP BY user_id HAVING log_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM LightSchedules;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT light_id, scheduled_time FROM LightSchedules WHERE is_active = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT schedule_id, scheduled_time FROM LightSchedules WHERE light_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM ScheduleTypes;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT schedule_type_name FROM ScheduleTypes WHERE schedule_type_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM TaskLogs;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT task_id, execution_time FROM TaskLogs WHERE status = 'Completed';",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Tasks;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT task_name, description FROM Tasks WHERE is_enabled = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM TaskSchedules;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT task_id, schedule_id FROM TaskSchedules WHERE day_of_week = 1;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT light_id, task_id FROM LightSchedules JOIN Tasks ON LightSchedules.schedule_id = Tasks.task_id;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT schedule_id, task_name FROM TaskSchedules JOIN Tasks ON TaskSchedules.task_id = Tasks.task_id;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT task_id, task_name FROM Tasks WHERE task_id IN (SELECT task_id FROM TaskSchedules WHERE day_of_week = 1);",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM LightSchedules UNION SELECT * FROM TaskSchedules;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM TaskLogs ORDER BY execution_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT task_name, count(log_id) AS num_logs FROM Tasks JOIN TaskLogs ON Tasks.task_id = TaskLogs.task_id GROUP BY task_name;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT task_id, MAX(execution_time) AS last_execution FROM TaskLogs GROUP BY task_id;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT task_name, AVG(TIMESTAMPDIFF(SECOND,execution_time,NOW())) AS avg_execution_duration FROM Tasks JOIN TaskLogs ON Tasks.task_id = TaskLogs.task_id GROUP BY task_name;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT light_id, COUNT(schedule_id) AS num_schedules FROM LightSchedules GROUP BY light_id HAVING num_schedules > 1;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM LightSchedules WHERE is_active = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT task_name, description FROM Tasks WHERE is_enabled = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT schedule_type_name, schedule_type_id FROM ScheduleTypes WHERE schedule_type_id > 5;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT task_id, task_name, is_enabled FROM Tasks WHERE task_name LIKE '%update%';",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT task_id, task_name, description FROM Tasks WHERE description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT task_id, task_name FROM Tasks WHERE is_enabled = TRUE ORDER BY task_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT log_id, task_id, execution_time FROM TaskLogs WHERE status = 'completed';",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT task_id, schedule_id, day_of_week FROM TaskSchedules WHERE day_of_week = 1;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM LightSchedules ls JOIN TaskSchedules ts ON ls.schedule_id = ts.schedule_id;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT ls.light_id, ts.task_id FROM LightSchedules ls JOIN TaskSchedules ts ON ls.schedule_id = ts.schedule_id;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT ls.light_id, ts.task_id, ts.day_of_week FROM LightSchedules ls JOIN TaskSchedules ts ON ls.schedule_id = ts.schedule_id WHERE ts.day_of_week = 3;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT t1.task_id, t1.task_name, t2.task_name AS dependency FROM Tasks t1 JOIN Tasks t2 ON t1.task_id = t2.task_id;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT ls.light_id, st.schedule_type_name FROM LightSchedules ls JOIN ScheduleTypes st ON ls.schedule_id = st.schedule_type_id;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT ls.light_id, ts.task_id, t.task_name FROM LightSchedules ls JOIN TaskSchedules ts ON ls.schedule_id = ts.schedule_id JOIN Tasks t ON ts.task_id = t.task_id WHERE t.is_enabled = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT t.task_id, t.task_name, COUNT(tl.log_id) AS log_count FROM Tasks t LEFT JOIN TaskLogs tl ON t.task_id = tl.task_id GROUP BY t.task_id;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT t.task_id, t.task_name, AVG(EXTRACT(EPOCH FROM age(tl.execution_time, CURRENT_TIMESTAMP))) AS avg_execution_time FROM Tasks t JOIN TaskLogs tl ON t.task_id = tl.task_id GROUP BY t.task_id;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT t.task_id, t.task_name, COUNT(tl.log_id) AS log_count, AVG(EXTRACT(EPOCH FROM age(tl.execution_time, CURRENT_TIMESTAMP))) AS avg_execution_time FROM Tasks t LEFT JOIN TaskLogs tl ON t.task_id = tl.task_id GROUP BY t.task_id;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT t.task_id, t.task_name, COUNT(tl.log_id) AS log_count, AVG(EXTRACT(EPOCH FROM age(tl.execution_time, CURRENT_TIMESTAMP))) AS avg_execution_time FROM Tasks t LEFT JOIN TaskLogs tl ON t.task_id = tl.task_id WHERE t.is_enabled = TRUE GROUP BY t.task_id;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT t.task_id, t.task_name, COUNT(tl.log_id) AS log_count, AVG(EXTRACT(EPOCH FROM age(tl.execution_time, CURRENT_TIMESTAMP))) AS avg_execution_time FROM Tasks t LEFT JOIN TaskLogs tl ON t.task_id = tl.task_id WHERE tl.status = 'failed' GROUP BY t.task_id;",
  "### TABLEDATA\n\nCREATE TABLE LightSchedules (\n    light_id INT PRIMARY KEY,\n    schedule_id INT,\n    scheduled_time TIMESTAMP,\n    is_active BOOL\n);\n\nCREATE TABLE ScheduleTypes (\n    schedule_type_id INT PRIMARY KEY,\n    schedule_type_name VARCHAR(50) UNIQUE\n);\n\nCREATE TABLE TaskLogs (\n    log_id INT PRIMARY KEY,\n    task_id INT,\n    execution_time TIMESTAMP,\n    status VARCHAR(20)\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(50) UNIQUE,\n    description TEXT,\n    is_enabled BOOL\n);\n\nCREATE TABLE TaskSchedules (\n    task_id INT,\n    schedule_id INT,\n    day_of_week INT,\n    PRIMARY KEY(task_id, schedule_id)\n);\n\n### STATEMENT\n\nSELECT t.task_id, t.task_name, COUNT(tl.log_id) AS log_count, AVG(EXTRACT(EPOCH FROM age(tl.execution_time, CURRENT_TIMESTAMP))) AS avg_execution_time FROM Tasks t LEFT JOIN TaskLogs tl ON t.task_id = tl.task_id WHERE t.is_enabled = TRUE AND tl.status = 'completed' GROUP BY t.task_id;"
]