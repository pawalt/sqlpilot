<t>CREATE TABLE artificial_intelligence (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT
);

CREATE TABLE neural_networks (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    layers INTEGER,
    activation_function VARCHAR(255)
);</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE artificial_intelligence FROM user1;</stat><divider><t>CREATE TABLE artificial_intelligence (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT
);

CREATE TABLE neural_networks (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    layers INTEGER,
    activation_function VARCHAR(255)
);</t><stat>revoke insert, update, delete on table artificial_intelligence from user1;</stat><divider><t>CREATE TABLE neural_networks (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    layers INTEGER,
    activation_function VARCHAR(255)
);

CREATE TABLE artificial_intelligence (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT
);</t><stat>REVOKE INSERT, UPDATE, DELETE ON TABLE artificial_intelligence FROM user1;</stat><divider><t>CREATE TABLE neural_networks (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    layers INTEGER,
    activation_function VARCHAR(255)
);

CREATE TABLE artificial_intelligence (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT
);</t><stat>revoke insert, update, delete on table artificial_intelligence from user1;</stat><divider><t>CREATE TABLE artificial_intelligence (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT
);

CREATE TABLE neural_networks (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    layers INTEGER,
    activation_function VARCHAR(255)
);</t><stat>REVOKE SELECT ON TABLE neural_networks FROM user2;</stat><divider><t>CREATE TABLE artificial_intelligence (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT
);

CREATE TABLE neural_networks (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    layers INTEGER,
    activation_function VARCHAR(255)
);</t><stat>revoke select on table neural_networks from user2;</stat><divider><t>CREATE TABLE neural_networks (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    layers INTEGER,
    activation_function VARCHAR(255)
);

CREATE TABLE artificial_intelligence (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT
);</t><stat>REVOKE SELECT ON TABLE neural_networks FROM user2;</stat><divider><t>CREATE TABLE neural_networks (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    layers INTEGER,
    activation_function VARCHAR(255)
);

CREATE TABLE artificial_intelligence (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT
);</t><stat>revoke select on table neural_networks from user2;</stat><divider><t>CREATE TABLE artificial_intelligence (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT
);

CREATE TABLE neural_networks (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    layers INTEGER,
    activation_function VARCHAR(255)
);</t><stat>REVOKE ALL PRIVILEGES ON ALL TABLES IN SCHEMA public FROM user3;</stat><divider><t>CREATE TABLE artificial_intelligence (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT
);

CREATE TABLE neural_networks (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    layers INTEGER,
    activation_function VARCHAR(255)
);</t><stat>revoke all privileges on all tables in schema public from user3;</stat><divider><t>CREATE TABLE neural_networks (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    layers INTEGER,
    activation_function VARCHAR(255)
);

CREATE TABLE artificial_intelligence (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT
);</t><stat>REVOKE ALL PRIVILEGES ON ALL TABLES IN SCHEMA public FROM user3;</stat><divider><t>CREATE TABLE neural_networks (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    layers INTEGER,
    activation_function VARCHAR(255)
);

CREATE TABLE artificial_intelligence (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT
);</t><stat>revoke all privileges on all tables in schema public from user3;</stat><divider><t>CREATE TABLE ai_models (
  id UUID PRIMARY KEY,
  model_name STRING,
  algorithm STRING,
  accuracy FLOAT,
  created_at TIMESTAMP
);

CREATE TABLE ai_datasets (
  id UUID PRIMARY KEY,
  dataset_name STRING,
  data_type STRING,
  size INTEGER,
  created_at TIMESTAMP
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON ai_models FROM PUBLIC;</stat><divider><t>CREATE TABLE ai_models (
  id UUID PRIMARY KEY,
  model_name STRING,
  algorithm STRING,
  accuracy FLOAT,
  created_at TIMESTAMP
);

CREATE TABLE ai_datasets (
  id UUID PRIMARY KEY,
  dataset_name STRING,
  data_type STRING,
  size INTEGER,
  created_at TIMESTAMP
);</t><stat>revoke select, insert, update, delete on ai_models from public;</stat><divider><t>CREATE TABLE ai_datasets (
  id UUID PRIMARY KEY,
  dataset_name STRING,
  data_type STRING,
  size INTEGER,
  created_at TIMESTAMP
);

CREATE TABLE ai_models (
  id UUID PRIMARY KEY,
  model_name STRING,
  algorithm STRING,
  accuracy FLOAT,
  created_at TIMESTAMP
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON ai_models FROM PUBLIC;</stat><divider><t>CREATE TABLE ai_datasets (
  id UUID PRIMARY KEY,
  dataset_name STRING,
  data_type STRING,
  size INTEGER,
  created_at TIMESTAMP
);

CREATE TABLE ai_models (
  id UUID PRIMARY KEY,
  model_name STRING,
  algorithm STRING,
  accuracy FLOAT,
  created_at TIMESTAMP
);</t><stat>revoke select, insert, update, delete on ai_models from public;</stat><divider><t>CREATE TABLE ai_models (
  id UUID PRIMARY KEY,
  model_name STRING,
  algorithm STRING,
  accuracy FLOAT,
  created_at TIMESTAMP
);

CREATE TABLE ai_datasets (
  id UUID PRIMARY KEY,
  dataset_name STRING,
  data_type STRING,
  size INTEGER,
  created_at TIMESTAMP
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON ai_datasets FROM PUBLIC;</stat><divider><t>CREATE TABLE ai_models (
  id UUID PRIMARY KEY,
  model_name STRING,
  algorithm STRING,
  accuracy FLOAT,
  created_at TIMESTAMP
);

CREATE TABLE ai_datasets (
  id UUID PRIMARY KEY,
  dataset_name STRING,
  data_type STRING,
  size INTEGER,
  created_at TIMESTAMP
);</t><stat>revoke select, insert, update, delete on ai_datasets from public;</stat><divider><t>CREATE TABLE ai_datasets (
  id UUID PRIMARY KEY,
  dataset_name STRING,
  data_type STRING,
  size INTEGER,
  created_at TIMESTAMP
);

CREATE TABLE ai_models (
  id UUID PRIMARY KEY,
  model_name STRING,
  algorithm STRING,
  accuracy FLOAT,
  created_at TIMESTAMP
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON ai_datasets FROM PUBLIC;</stat><divider><t>CREATE TABLE ai_datasets (
  id UUID PRIMARY KEY,
  dataset_name STRING,
  data_type STRING,
  size INTEGER,
  created_at TIMESTAMP
);

CREATE TABLE ai_models (
  id UUID PRIMARY KEY,
  model_name STRING,
  algorithm STRING,
  accuracy FLOAT,
  created_at TIMESTAMP
);</t><stat>revoke select, insert, update, delete on ai_datasets from public;</stat><divider><t>CREATE TABLE ai_models (
  id UUID PRIMARY KEY,
  model_name STRING,
  algorithm STRING,
  accuracy FLOAT,
  created_at TIMESTAMP
);

CREATE TABLE ai_datasets (
  id UUID PRIMARY KEY,
  dataset_name STRING,
  data_type STRING,
  size INTEGER,
  created_at TIMESTAMP
);</t><stat>REVOKE ALL PRIVILEGES ON ai_models FROM PUBLIC;</stat><divider><t>CREATE TABLE ai_models (
  id UUID PRIMARY KEY,
  model_name STRING,
  algorithm STRING,
  accuracy FLOAT,
  created_at TIMESTAMP
);

CREATE TABLE ai_datasets (
  id UUID PRIMARY KEY,
  dataset_name STRING,
  data_type STRING,
  size INTEGER,
  created_at TIMESTAMP
);</t><stat>revoke all privileges on ai_models from public;</stat><divider><t>CREATE TABLE ai_datasets (
  id UUID PRIMARY KEY,
  dataset_name STRING,
  data_type STRING,
  size INTEGER,
  created_at TIMESTAMP
);

CREATE TABLE ai_models (
  id UUID PRIMARY KEY,
  model_name STRING,
  algorithm STRING,
  accuracy FLOAT,
  created_at TIMESTAMP
);</t><stat>REVOKE ALL PRIVILEGES ON ai_models FROM PUBLIC;</stat><divider><t>CREATE TABLE ai_datasets (
  id UUID PRIMARY KEY,
  dataset_name STRING,
  data_type STRING,
  size INTEGER,
  created_at TIMESTAMP
);

CREATE TABLE ai_models (
  id UUID PRIMARY KEY,
  model_name STRING,
  algorithm STRING,
  accuracy FLOAT,
  created_at TIMESTAMP
);</t><stat>revoke all privileges on ai_models from public;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_models FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);</t><stat>revoke select, insert, update, delete on ai_models from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_models FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);</t><stat>revoke select, insert, update, delete on ai_models from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_models FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);</t><stat>revoke select, insert, update, delete on ai_models from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_models FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);</t><stat>revoke select, insert, update, delete on ai_models from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_models FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);</t><stat>revoke select, insert, update, delete on ai_models from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_models FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);</t><stat>revoke select, insert, update, delete on ai_models from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_datasets FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);</t><stat>revoke select, insert, update, delete on ai_datasets from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_datasets FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);</t><stat>revoke select, insert, update, delete on ai_datasets from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_datasets FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);</t><stat>revoke select, insert, update, delete on ai_datasets from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_datasets FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);</t><stat>revoke select, insert, update, delete on ai_datasets from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_datasets FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);</t><stat>revoke select, insert, update, delete on ai_datasets from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_datasets FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);</t><stat>revoke select, insert, update, delete on ai_datasets from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_users FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);</t><stat>revoke select, insert, update, delete on ai_users from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_users FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);</t><stat>revoke select, insert, update, delete on ai_users from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_users FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);</t><stat>revoke select, insert, update, delete on ai_users from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_users FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);</t><stat>revoke select, insert, update, delete on ai_users from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_users FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);</t><stat>revoke select, insert, update, delete on ai_users from user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON AI_users FROM user1;</stat><divider><t>CREATE TABLE IF NOT EXISTS AI_users (
    id UUID PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS AI_datasets (
    id UUID PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL,
    dataset_link VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS AI_models (
    id UUID PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    model_accuracy FLOAT NOT NULL
);</t><stat>revoke select, insert, update, delete on ai_users from user1;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Companies FROM user1;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke insert,update,delete on ai_companies from user1;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE SELECT ON AI_Research FROM user2;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke select on ai_research from user2;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>REVOKE INSERT,UPDATE,DELETE ON AI_Products FROM user3;</stat><divider><t>CREATE TABLE AI_Users (user_id SERIAL PRIMARY KEY, user_name VARCHAR(255) NOT NULL, email VARCHAR(255) UNIQUE, registration_date DATE);

CREATE TABLE AI_Products (product_id SERIAL PRIMARY KEY, product_name VARCHAR(255) NOT NULL, description TEXT, company_id INT REFERENCES AI_Companies(company_id));

CREATE TABLE AI_Research (research_id SERIAL PRIMARY KEY, topic VARCHAR(255) NOT NULL, researcher VARCHAR(255) NOT NULL, publication_date DATE);

CREATE TABLE AI_Companies (company_id SERIAL PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(255) NOT NULL, location VARCHAR(255) NOT NULL);</t><stat>revoke insert,update,delete on ai_products from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE SELECT ON ai_research_papers FROM user1;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke select on ai_research_papers from user1;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE INSERT, UPDATE ON ai_projects FROM user2;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke insert, update on ai_projects from user2;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>REVOKE DELETE ON ai_datasets FROM user3;</stat><divider><t>CREATE TABLE ai_users (
    id INT PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50),
    registered_date DATE
);

CREATE TABLE ai_models (
    id INT PRIMARY KEY,
    model_name VARCHAR(255),
    description TEXT,
    algorithm VARCHAR(255),
    created_date DATE
);

CREATE TABLE ai_datasets (
    id INT PRIMARY KEY,
    dataset_name VARCHAR(255),
    description TEXT,
    size_mb INT,
    created_date DATE
);

CREATE TABLE ai_projects (
    id INT PRIMARY KEY,
    project_name VARCHAR(255),
    description TEXT,
    start_date DATE,
    end_date DATE
);

CREATE TABLE ai_research_papers (
    id INT PRIMARY KEY,
    title VARCHAR(255),
    author VARCHAR(255),
    abstract TEXT,
    publication_date DATE
);</t><stat>revoke delete on ai_datasets from user3;</stat>