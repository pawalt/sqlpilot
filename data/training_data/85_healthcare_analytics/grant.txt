<t>CREATE TABLE PatientMedicalRecords (patient_id INT PRIMARY KEY, patient_name STRING, diagnosis STRING, treatment STRING)</t><stat>GRANT SELECT, INSERT ON PatientMedicalRecords TO Doctors</stat><divider><t>CREATE TABLE PatientMedicalRecords (patient_id INT PRIMARY KEY, patient_name STRING, diagnosis STRING, treatment STRING)</t><stat>grant select, insert on patientmedicalrecords to doctors</stat><divider><t>CREATE TABLE PatientMedicalRecords (patient_id INT PRIMARY KEY, patient_name STRING, diagnosis STRING, treatment STRING)</t><stat>GRANT SELECT ON PatientMedicalRecords TO Nurses</stat><divider><t>CREATE TABLE PatientMedicalRecords (patient_id INT PRIMARY KEY, patient_name STRING, diagnosis STRING, treatment STRING)</t><stat>grant select on patientmedicalrecords to nurses</stat><divider><t>CREATE TABLE PatientMedicalRecords (patient_id INT PRIMARY KEY, patient_name STRING, diagnosis STRING, treatment STRING)</t><stat>GRANT SELECT, UPDATE, DELETE ON PatientMedicalRecords TO Administrators</stat><divider><t>CREATE TABLE PatientMedicalRecords (patient_id INT PRIMARY KEY, patient_name STRING, diagnosis STRING, treatment STRING)</t><stat>grant select, update, delete on patientmedicalrecords to administrators</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name STRING, age INT, gender STRING, diagnosis STRING)</t><stat>GRANT SELECT ON patients TO analyst</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name STRING, age INT, gender STRING, diagnosis STRING)</t><stat>grant select on patients to analyst</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name STRING, age INT, gender STRING, diagnosis STRING)</t><stat>GRANT INSERT, UPDATE, DELETE ON patients TO doctor</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name STRING, age INT, gender STRING, diagnosis STRING)</t><stat>grant insert, update, delete on patients to doctor</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name STRING, age INT, gender STRING, diagnosis STRING)</t><stat>GRANT ALL PRIVILEGES ON patients TO admin</stat><divider><t>CREATE TABLE patients (id INT PRIMARY KEY, name STRING, age INT, gender STRING, diagnosis STRING)</t><stat>grant all privileges on patients to admin</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))</t><stat>GRANT SELECT, INSERT, UPDATE ON patients TO clinic_user1</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))</t><stat>grant select, insert, update on patients to clinic_user1</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE ON patients TO clinic_user1</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))</t><stat>grant select, insert, update on patients to clinic_user1</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))</t><stat>GRANT SELECT, INSERT, UPDATE ON patients TO clinic_user1</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))</t><stat>grant select, insert, update on patients to clinic_user1</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))</t><stat>GRANT SELECT, INSERT, UPDATE ON patients TO clinic_user1</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))</t><stat>grant select, insert, update on patients to clinic_user1</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE ON patients TO clinic_user1</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))</t><stat>grant select, insert, update on patients to clinic_user1</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))</t><stat>GRANT SELECT, INSERT, UPDATE ON patients TO clinic_user1</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))</t><stat>grant select, insert, update on patients to clinic_user1</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))</t><stat>GRANT SELECT, INSERT, UPDATE ON appointments TO clinic_user2</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))</t><stat>grant select, insert, update on appointments to clinic_user2</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE ON appointments TO clinic_user2</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))</t><stat>grant select, insert, update on appointments to clinic_user2</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))</t><stat>GRANT SELECT, INSERT, UPDATE ON appointments TO clinic_user2</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))</t><stat>grant select, insert, update on appointments to clinic_user2</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))</t><stat>GRANT SELECT, INSERT, UPDATE ON appointments TO clinic_user2</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))</t><stat>grant select, insert, update on appointments to clinic_user2</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE ON appointments TO clinic_user2</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))</t><stat>grant select, insert, update on appointments to clinic_user2</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))</t><stat>GRANT SELECT, INSERT, UPDATE ON appointments TO clinic_user2</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))</t><stat>grant select, insert, update on appointments to clinic_user2</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))</t><stat>GRANT SELECT, INSERT, UPDATE ON medical_records TO clinic_user3</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))</t><stat>grant select, insert, update on medical_records to clinic_user3</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE ON medical_records TO clinic_user3</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))</t><stat>grant select, insert, update on medical_records to clinic_user3</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))</t><stat>GRANT SELECT, INSERT, UPDATE ON medical_records TO clinic_user3</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))</t><stat>grant select, insert, update on medical_records to clinic_user3</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))</t><stat>GRANT SELECT, INSERT, UPDATE ON medical_records TO clinic_user3</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))</t><stat>grant select, insert, update on medical_records to clinic_user3</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE ON medical_records TO clinic_user3</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))</t><stat>grant select, insert, update on medical_records to clinic_user3</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))</t><stat>GRANT SELECT, INSERT, UPDATE ON medical_records TO clinic_user3</stat><divider><t>CREATE TABLE medical_records (record_id INT PRIMARY KEY, patient_id INT, doctor_name VARCHAR(50), diagnosis VARCHAR(1000), treatment VARCHAR(1000))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, appointment_date DATE, doctor_name VARCHAR(50), department VARCHAR(50))

CREATE TABLE patients (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), age INT, gender VARCHAR(10))</t><stat>grant select, insert, update on medical_records to clinic_user3</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT SELECT ON patients TO doctor_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant select on patients to doctor_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT INSERT, UPDATE ON doctors TO nurse_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant insert, update on doctors to nurse_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON medications TO pharmacist_role;</stat><divider><t>CREATE TABLE medications (medication_id INT PRIMARY KEY, patient_id INT, medication_name VARCHAR(50), dosage VARCHAR(20), frequency VARCHAR(20), start_date DATE, end_date DATE)

CREATE TABLE appointments (appointment_id INT PRIMARY KEY, patient_id INT, doctor_id INT, appointment_date DATE, time_slot VARCHAR(20), status VARCHAR(20))

CREATE TABLE doctors (doctor_id INT PRIMARY KEY, name VARCHAR(50), specialization VARCHAR(50), hospital_id INT, experience_years INT, contact_number VARCHAR(15))

CREATE TABLE patients (patient_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(100), admission_date DATE, discharge_date DATE)</t><stat>grant select, insert, update, delete on medications to pharmacist_role;</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON healthcare_provider TO staff_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on healthcare_provider to staff_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT ON patient TO nurse_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select on patient to nurse_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON appointment TO doctor_role</stat><divider><t>CREATE TABLE insurance (insurance_id INT PRIMARY KEY, insurance_name VARCHAR(50), insurance_type VARCHAR(20), provider_id INT, start_date DATE, end_date DATE, FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE medical_record (record_id INT PRIMARY KEY, patient_id INT, provider_id INT, record_date DATETIME, diagnosis VARCHAR(100), prescription TEXT, FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE appointment (appointment_id INT PRIMARY KEY, patient_id INT, provider_id INT, appointment_date DATETIME, appointment_type VARCHAR(20), appointment_status VARCHAR(20), FOREIGN KEY (patient_id) REFERENCES patient(patient_id), FOREIGN KEY (provider_id) REFERENCES healthcare_provider(provider_id))

CREATE TABLE patient (patient_id INT PRIMARY KEY, patient_name VARCHAR(50), patient_gender VARCHAR(10), patient_dob DATE, patient_address VARCHAR(100), patient_phone VARCHAR(15))

CREATE TABLE healthcare_provider (provider_id INT PRIMARY KEY, provider_name VARCHAR(50), provider_type VARCHAR(50), address VARCHAR(100), phone_number VARCHAR(15))</t><stat>grant select, insert, update, delete on appointment to doctor_role</stat>