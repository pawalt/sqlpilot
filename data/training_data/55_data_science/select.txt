<t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT * FROM data_science_data;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select * from data_science_data;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT id, name FROM data_science_data;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select id, name from data_science_data;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT * FROM data_science_data WHERE age > 30;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select * from data_science_data where age > 30;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT name, occupation FROM data_science_data WHERE age < 25;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select name, occupation from data_science_data where age < 25;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT id, age FROM data_science_data WHERE occupation = 'Data Scientist';</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select id, age from data_science_data where occupation = 'data scientist';</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT * FROM data_science_data WHERE name LIKE '%John%';</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select * from data_science_data where name like '%john%';</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT id, name, age FROM data_science_data ORDER BY age DESC;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select id, name, age from data_science_data order by age desc;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT DISTINCT occupation FROM data_science_data;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select distinct occupation from data_science_data;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT COUNT(*) FROM data_science_data;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select count(*) from data_science_data;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT id, name, occupation FROM data_science_data WHERE age BETWEEN 25 AND 35;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select id, name, occupation from data_science_data where age between 25 and 35;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT id, age FROM data_science_data WHERE occupation IN ('Data Scientist', 'Data Analyst');</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select id, age from data_science_data where occupation in ('data scientist', 'data analyst');</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT * FROM data_science_data WHERE id = 10;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select * from data_science_data where id = 10;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT name, age FROM data_science_data WHERE name = 'Alice';</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select name, age from data_science_data where name = 'alice';</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT * FROM data_science_data WHERE occupation IS NOT NULL;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select * from data_science_data where occupation is not null;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT id, name, occupation FROM data_science_data WHERE id BETWEEN 5 AND 10;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select id, name, occupation from data_science_data where id between 5 and 10;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT * FROM data_science_data LIMIT 5;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select * from data_science_data limit 5;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT name, occupation FROM data_science_data WHERE age > 25 AND age < 40;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select name, occupation from data_science_data where age > 25 and age < 40;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT id, age, occupation FROM data_science_data WHERE occupation LIKE '%Engineer%';</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select id, age, occupation from data_science_data where occupation like '%engineer%';</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT AVG(age) FROM data_science_data;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select avg(age) from data_science_data;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>SELECT id, name, age, occupation FROM data_science_data WHERE name = 'Bob' AND occupation = 'Data Analyst';</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>select id, name, age, occupation from data_science_data where name = 'bob' and occupation = 'data analyst';</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM users;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from users;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM users;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from users;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM users;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from users;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM users;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from users;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM users;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from users;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM users;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from users;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT user_id, username FROM users;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select user_id, username from users;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT user_id, username FROM users;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select user_id, username from users;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT user_id, username FROM users;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select user_id, username from users;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT user_id, username FROM users;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select user_id, username from users;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT user_id, username FROM users;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select user_id, username from users;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT user_id, username FROM users;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select user_id, username from users;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT username, join_date FROM users;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select username, join_date from users;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT username, join_date FROM users;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select username, join_date from users;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT username, join_date FROM users;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select username, join_date from users;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT username, join_date FROM users;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select username, join_date from users;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT username, join_date FROM users;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select username, join_date from users;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT username, join_date FROM users;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select username, join_date from users;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM data_sources;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from data_sources;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM data_sources;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from data_sources;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM data_sources;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from data_sources;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM data_sources;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from data_sources;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM data_sources;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from data_sources;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM data_sources;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from data_sources;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT data_source_id, data_source_name FROM data_sources;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select data_source_id, data_source_name from data_sources;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT data_source_id, data_source_name FROM data_sources;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select data_source_id, data_source_name from data_sources;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT data_source_id, data_source_name FROM data_sources;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select data_source_id, data_source_name from data_sources;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT data_source_id, data_source_name FROM data_sources;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select data_source_id, data_source_name from data_sources;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT data_source_id, data_source_name FROM data_sources;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select data_source_id, data_source_name from data_sources;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT data_source_id, data_source_name FROM data_sources;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select data_source_id, data_source_name from data_sources;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT data_source_name, data_type FROM data_sources;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select data_source_name, data_type from data_sources;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT data_source_name, data_type FROM data_sources;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select data_source_name, data_type from data_sources;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT data_source_name, data_type FROM data_sources;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select data_source_name, data_type from data_sources;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT data_source_name, data_type FROM data_sources;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select data_source_name, data_type from data_sources;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT data_source_name, data_type FROM data_sources;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select data_source_name, data_type from data_sources;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT data_source_name, data_type FROM data_sources;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select data_source_name, data_type from data_sources;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT analysis_id, analysis_name FROM data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select analysis_id, analysis_name from data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT analysis_id, analysis_name FROM data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select analysis_id, analysis_name from data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT analysis_id, analysis_name FROM data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select analysis_id, analysis_name from data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT analysis_id, analysis_name FROM data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select analysis_id, analysis_name from data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT analysis_id, analysis_name FROM data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select analysis_id, analysis_name from data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT analysis_id, analysis_name FROM data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select analysis_id, analysis_name from data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT user_id, data_source_id FROM data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select user_id, data_source_id from data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT user_id, data_source_id FROM data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select user_id, data_source_id from data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT user_id, data_source_id FROM data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select user_id, data_source_id from data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT user_id, data_source_id FROM data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select user_id, data_source_id from data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT user_id, data_source_id FROM data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select user_id, data_source_id from data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT user_id, data_source_id FROM data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select user_id, data_source_id from data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT analysis_name, analysis_date FROM data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select analysis_name, analysis_date from data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT analysis_name, analysis_date FROM data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select analysis_name, analysis_date from data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT analysis_name, analysis_date FROM data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select analysis_name, analysis_date from data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT analysis_name, analysis_date FROM data_analysis;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select analysis_name, analysis_date from data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT analysis_name, analysis_date FROM data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select analysis_name, analysis_date from data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT analysis_name, analysis_date FROM data_analysis;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select analysis_name, analysis_date from data_analysis;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT u.username, d.data_source_name FROM users u JOIN data_sources d ON u.user_id = d.data_source_id;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select u.username, d.data_source_name from users u join data_sources d on u.user_id = d.data_source_id;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT u.username, d.data_source_name FROM users u JOIN data_sources d ON u.user_id = d.data_source_id;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select u.username, d.data_source_name from users u join data_sources d on u.user_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT u.username, d.data_source_name FROM users u JOIN data_sources d ON u.user_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select u.username, d.data_source_name from users u join data_sources d on u.user_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT u.username, d.data_source_name FROM users u JOIN data_sources d ON u.user_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select u.username, d.data_source_name from users u join data_sources d on u.user_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT u.username, d.data_source_name FROM users u JOIN data_sources d ON u.user_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select u.username, d.data_source_name from users u join data_sources d on u.user_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT u.username, d.data_source_name FROM users u JOIN data_sources d ON u.user_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select u.username, d.data_source_name from users u join data_sources d on u.user_id = d.data_source_id;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT a.analysis_id, a.analysis_name, u.username, d.data_source_name FROM data_analysis a JOIN users u ON a.user_id = u.user_id JOIN data_sources d ON a.data_source_id = d.data_source_id;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select a.analysis_id, a.analysis_name, u.username, d.data_source_name from data_analysis a join users u on a.user_id = u.user_id join data_sources d on a.data_source_id = d.data_source_id;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT a.analysis_id, a.analysis_name, u.username, d.data_source_name FROM data_analysis a JOIN users u ON a.user_id = u.user_id JOIN data_sources d ON a.data_source_id = d.data_source_id;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select a.analysis_id, a.analysis_name, u.username, d.data_source_name from data_analysis a join users u on a.user_id = u.user_id join data_sources d on a.data_source_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT a.analysis_id, a.analysis_name, u.username, d.data_source_name FROM data_analysis a JOIN users u ON a.user_id = u.user_id JOIN data_sources d ON a.data_source_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select a.analysis_id, a.analysis_name, u.username, d.data_source_name from data_analysis a join users u on a.user_id = u.user_id join data_sources d on a.data_source_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT a.analysis_id, a.analysis_name, u.username, d.data_source_name FROM data_analysis a JOIN users u ON a.user_id = u.user_id JOIN data_sources d ON a.data_source_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select a.analysis_id, a.analysis_name, u.username, d.data_source_name from data_analysis a join users u on a.user_id = u.user_id join data_sources d on a.data_source_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT a.analysis_id, a.analysis_name, u.username, d.data_source_name FROM data_analysis a JOIN users u ON a.user_id = u.user_id JOIN data_sources d ON a.data_source_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select a.analysis_id, a.analysis_name, u.username, d.data_source_name from data_analysis a join users u on a.user_id = u.user_id join data_sources d on a.data_source_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT a.analysis_id, a.analysis_name, u.username, d.data_source_name FROM data_analysis a JOIN users u ON a.user_id = u.user_id JOIN data_sources d ON a.data_source_id = d.data_source_id;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select a.analysis_id, a.analysis_name, u.username, d.data_source_name from data_analysis a join users u on a.user_id = u.user_id join data_sources d on a.data_source_id = d.data_source_id;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM users WHERE user_id = 1;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from users where user_id = 1;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM users WHERE user_id = 1;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from users where user_id = 1;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM users WHERE user_id = 1;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from users where user_id = 1;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM users WHERE user_id = 1;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from users where user_id = 1;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM users WHERE user_id = 1;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from users where user_id = 1;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM users WHERE user_id = 1;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from users where user_id = 1;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM data_sources WHERE data_source_id = 1;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from data_sources where data_source_id = 1;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM data_sources WHERE data_source_id = 1;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from data_sources where data_source_id = 1;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM data_sources WHERE data_source_id = 1;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from data_sources where data_source_id = 1;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM data_sources WHERE data_source_id = 1;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from data_sources where data_source_id = 1;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM data_sources WHERE data_source_id = 1;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from data_sources where data_source_id = 1;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM data_sources WHERE data_source_id = 1;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from data_sources where data_source_id = 1;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM data_analysis WHERE analysis_id = 1;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from data_analysis where analysis_id = 1;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM data_analysis WHERE analysis_id = 1;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from data_analysis where analysis_id = 1;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM data_analysis WHERE analysis_id = 1;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from data_analysis where analysis_id = 1;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM data_analysis WHERE analysis_id = 1;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from data_analysis where analysis_id = 1;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM data_analysis WHERE analysis_id = 1;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from data_analysis where analysis_id = 1;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM data_analysis WHERE analysis_id = 1;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from data_analysis where analysis_id = 1;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM users ORDER BY username DESC;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from users order by username desc;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM users ORDER BY username DESC;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from users order by username desc;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM users ORDER BY username DESC;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from users order by username desc;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM users ORDER BY username DESC;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from users order by username desc;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM users ORDER BY username DESC;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from users order by username desc;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM users ORDER BY username DESC;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from users order by username desc;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM data_sources ORDER BY data_source_name ASC;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from data_sources order by data_source_name asc;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM data_sources ORDER BY data_source_name ASC;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from data_sources order by data_source_name asc;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM data_sources ORDER BY data_source_name ASC;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from data_sources order by data_source_name asc;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM data_sources ORDER BY data_source_name ASC;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from data_sources order by data_source_name asc;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM data_sources ORDER BY data_source_name ASC;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from data_sources order by data_source_name asc;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM data_sources ORDER BY data_source_name ASC;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from data_sources order by data_source_name asc;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM data_analysis ORDER BY analysis_date DESC;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from data_analysis order by analysis_date desc;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM data_analysis ORDER BY analysis_date DESC;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from data_analysis order by analysis_date desc;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM data_analysis ORDER BY analysis_date DESC;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from data_analysis order by analysis_date desc;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM data_analysis ORDER BY analysis_date DESC;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from data_analysis order by analysis_date desc;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM data_analysis ORDER BY analysis_date DESC;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from data_analysis order by analysis_date desc;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM data_analysis ORDER BY analysis_date DESC;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from data_analysis order by analysis_date desc;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM users LIMIT 5;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from users limit 5;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM users LIMIT 5;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from users limit 5;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM users LIMIT 5;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from users limit 5;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM users LIMIT 5;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from users limit 5;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM users LIMIT 5;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from users limit 5;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM users LIMIT 5;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from users limit 5;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM data_sources LIMIT 5;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from data_sources limit 5;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM data_sources LIMIT 5;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from data_sources limit 5;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>SELECT * FROM data_sources LIMIT 5;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>select * from data_sources limit 5;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM data_sources LIMIT 5;</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from data_sources limit 5;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>SELECT * FROM data_sources LIMIT 5;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>select * from data_sources limit 5;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>SELECT * FROM data_sources LIMIT 5;</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>select * from data_sources limit 5;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_id, project_name FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_id, project_name from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT dataset_id, dataset_name, size_in_mb FROM datasets;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select dataset_id, dataset_name, size_in_mb from datasets;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT model_id, model_name, accuracy FROM models;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select model_id, model_name, accuracy from models;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT * FROM predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select * from predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT prediction_id, project_id, model_id, prediction_value FROM predictions;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select prediction_id, project_id, model_id, prediction_value from predictions;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT d.dataset_name, m.model_name FROM datasets d JOIN models m ON d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select d.dataset_name, m.model_name from datasets d join models m on d.dataset_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT p.project_name, d.dataset_name, m.model_name, pr.prediction_value FROM projects p JOIN predictions pr ON p.project_id = pr.project_id JOIN datasets d ON pr.dataset_id = d.dataset_id JOIN models m ON pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select p.project_name, d.dataset_name, m.model_name, pr.prediction_value from projects p join predictions pr on p.project_id = pr.project_id join datasets d on pr.dataset_id = d.dataset_id join models m on pr.model_id = m.model_id;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, COUNT(prediction_id) AS prediction_count FROM projects LEFT JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, count(prediction_id) as prediction_count from projects left join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT model_name, AVG(accuracy) AS avg_accuracy FROM models GROUP BY model_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select model_name, avg(accuracy) as avg_accuracy from models group by model_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, MAX(accuracy) AS max_accuracy FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN models ON predictions.model_id = models.model_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, max(accuracy) as max_accuracy from projects join predictions on projects.project_id = predictions.project_id join models on predictions.model_id = models.model_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, COUNT(model_id) AS model_count FROM projects JOIN predictions ON projects.project_id = predictions.project_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, count(model_id) as model_count from projects join predictions on projects.project_id = predictions.project_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, SUM(size_in_mb) AS total_size FROM projects JOIN predictions ON projects.project_id = predictions.project_id JOIN datasets ON predictions.dataset_id = datasets.dataset_id GROUP BY project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, sum(size_in_mb) as total_size from projects join predictions on projects.project_id = predictions.project_id join datasets on predictions.dataset_id = datasets.dataset_id group by project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT DISTINCT project_name FROM projects;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select distinct project_name from projects;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>SELECT project_name, prediction_value FROM projects JOIN predictions ON projects.project_id = predictions.project_id WHERE prediction_value LIKE 'positive%';</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>select project_name, prediction_value from projects join predictions on projects.project_id = predictions.project_id where prediction_value like 'positive%';</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT * FROM data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select * from data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT id, name, description FROM data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select id, name, description from data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT name, created_at FROM data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select name, created_at from data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT * FROM data_science.projects WHERE id = 1;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select * from data_science.projects where id = 1;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT * FROM data_science.projects WHERE name = 'Project A';</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select * from data_science.projects where name = 'project a';</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT id, name FROM data_science.projects WHERE created_at > '2022-01-01';</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select id, name from data_science.projects where created_at > '2022-01-01';</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT id, description FROM data_science.projects WHERE name LIKE '%data%';</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select id, description from data_science.projects where name like '%data%';</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT COUNT(*) FROM data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select count(*) from data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT MAX(created_at) FROM data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select max(created_at) from data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT id, name, description, created_at FROM data_science.projects ORDER BY created_at DESC;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select id, name, description, created_at from data_science.projects order by created_at desc;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT AVG(id) FROM data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select avg(id) from data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT MIN(id) FROM data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select min(id) from data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT DISTINCT name FROM data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select distinct name from data_science.projects;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT * FROM data_science.projects LIMIT 5;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select * from data_science.projects limit 5;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT name, COUNT(*) FROM data_science.projects GROUP BY name;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select name, count(*) from data_science.projects group by name;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT * FROM data_science.projects WHERE id IN (1, 2, 3);</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select * from data_science.projects where id in (1, 2, 3);</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT id, name FROM data_science.projects WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31';</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select id, name from data_science.projects where created_at between '2022-01-01' and '2022-12-31';</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT * FROM data_science.projects WHERE description IS NOT NULL;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select * from data_science.projects where description is not null;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT id, name FROM data_science.projects WHERE name = 'Project B' AND description LIKE '%analysis%';</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select id, name from data_science.projects where name = 'project b' and description like '%analysis%';</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>SELECT * FROM data_science.projects WHERE id = (SELECT MAX(id) FROM data_science.projects);</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>select * from data_science.projects where id = (select max(id) from data_science.projects);</stat>