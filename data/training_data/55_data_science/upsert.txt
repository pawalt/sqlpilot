<t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>UPSERT INTO data_science_data (name, age, occupation) VALUES ('Alice', 30, 'Data Analyst') ON CONFLICT (name) DO UPDATE SET age = excluded.age, occupation = excluded.occupation;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>upsert into data_science_data (name, age, occupation) values ('alice', 30, 'data analyst') on conflict (name) do update set age = excluded.age, occupation = excluded.occupation;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>UPSERT INTO data_science_data (name, age, occupation) VALUES ('Bob', 25, 'Data Scientist') ON CONFLICT (name) DO UPDATE SET age = excluded.age, occupation = excluded.occupation;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>upsert into data_science_data (name, age, occupation) values ('bob', 25, 'data scientist') on conflict (name) do update set age = excluded.age, occupation = excluded.occupation;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>UPSERT INTO data_science_data (name, age, occupation) VALUES ('Charlie', 35, 'Machine Learning Engineer') ON CONFLICT (name) DO UPDATE SET age = excluded.age, occupation = excluded.occupation;</stat><divider><t>CREATE TABLE data_science_data (id SERIAL PRIMARY KEY, name VARCHAR(50), age INT, occupation VARCHAR(50))</t><stat>upsert into data_science_data (name, age, occupation) values ('charlie', 35, 'machine learning engineer') on conflict (name) do update set age = excluded.age, occupation = excluded.occupation;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>INSERT INTO users (user_id, username, join_date) VALUES (1, 'john_doe', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>insert into users (user_id, username, join_date) values (1, 'john_doe', '2022-01-01') on conflict (user_id) do update set username = 'john_doe'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>INSERT INTO users (user_id, username, join_date) VALUES (1, 'john_doe', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>insert into users (user_id, username, join_date) values (1, 'john_doe', '2022-01-01') on conflict (user_id) do update set username = 'john_doe'</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>INSERT INTO users (user_id, username, join_date) VALUES (1, 'john_doe', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe'</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>insert into users (user_id, username, join_date) values (1, 'john_doe', '2022-01-01') on conflict (user_id) do update set username = 'john_doe'</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>INSERT INTO users (user_id, username, join_date) VALUES (1, 'john_doe', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe'</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>insert into users (user_id, username, join_date) values (1, 'john_doe', '2022-01-01') on conflict (user_id) do update set username = 'john_doe'</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>INSERT INTO users (user_id, username, join_date) VALUES (1, 'john_doe', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe'</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>insert into users (user_id, username, join_date) values (1, 'john_doe', '2022-01-01') on conflict (user_id) do update set username = 'john_doe'</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>INSERT INTO users (user_id, username, join_date) VALUES (1, 'john_doe', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe'</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>insert into users (user_id, username, join_date) values (1, 'john_doe', '2022-01-01') on conflict (user_id) do update set username = 'john_doe'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>INSERT INTO data_sources (data_source_id, data_source_name, data_type) VALUES (1, 'source_1', 'type_1') ON CONFLICT (data_source_id) DO UPDATE SET data_source_name = 'source_1', data_type = 'type_1'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>insert into data_sources (data_source_id, data_source_name, data_type) values (1, 'source_1', 'type_1') on conflict (data_source_id) do update set data_source_name = 'source_1', data_type = 'type_1'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>INSERT INTO data_sources (data_source_id, data_source_name, data_type) VALUES (1, 'source_1', 'type_1') ON CONFLICT (data_source_id) DO UPDATE SET data_source_name = 'source_1', data_type = 'type_1'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>insert into data_sources (data_source_id, data_source_name, data_type) values (1, 'source_1', 'type_1') on conflict (data_source_id) do update set data_source_name = 'source_1', data_type = 'type_1'</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>INSERT INTO data_sources (data_source_id, data_source_name, data_type) VALUES (1, 'source_1', 'type_1') ON CONFLICT (data_source_id) DO UPDATE SET data_source_name = 'source_1', data_type = 'type_1'</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>insert into data_sources (data_source_id, data_source_name, data_type) values (1, 'source_1', 'type_1') on conflict (data_source_id) do update set data_source_name = 'source_1', data_type = 'type_1'</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>INSERT INTO data_sources (data_source_id, data_source_name, data_type) VALUES (1, 'source_1', 'type_1') ON CONFLICT (data_source_id) DO UPDATE SET data_source_name = 'source_1', data_type = 'type_1'</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>insert into data_sources (data_source_id, data_source_name, data_type) values (1, 'source_1', 'type_1') on conflict (data_source_id) do update set data_source_name = 'source_1', data_type = 'type_1'</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>INSERT INTO data_sources (data_source_id, data_source_name, data_type) VALUES (1, 'source_1', 'type_1') ON CONFLICT (data_source_id) DO UPDATE SET data_source_name = 'source_1', data_type = 'type_1'</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>insert into data_sources (data_source_id, data_source_name, data_type) values (1, 'source_1', 'type_1') on conflict (data_source_id) do update set data_source_name = 'source_1', data_type = 'type_1'</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>INSERT INTO data_sources (data_source_id, data_source_name, data_type) VALUES (1, 'source_1', 'type_1') ON CONFLICT (data_source_id) DO UPDATE SET data_source_name = 'source_1', data_type = 'type_1'</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>insert into data_sources (data_source_id, data_source_name, data_type) values (1, 'source_1', 'type_1') on conflict (data_source_id) do update set data_source_name = 'source_1', data_type = 'type_1'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>INSERT INTO data_analysis (analysis_id, analysis_name, user_id, data_source_id, analysis_date) VALUES (1, 'analysis_1', 1, 1, '2022-01-01') ON CONFLICT (analysis_id) DO UPDATE SET analysis_name = 'analysis_1', analysis_date = '2022-01-01'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>insert into data_analysis (analysis_id, analysis_name, user_id, data_source_id, analysis_date) values (1, 'analysis_1', 1, 1, '2022-01-01') on conflict (analysis_id) do update set analysis_name = 'analysis_1', analysis_date = '2022-01-01'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>INSERT INTO data_analysis (analysis_id, analysis_name, user_id, data_source_id, analysis_date) VALUES (1, 'analysis_1', 1, 1, '2022-01-01') ON CONFLICT (analysis_id) DO UPDATE SET analysis_name = 'analysis_1', analysis_date = '2022-01-01'</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>insert into data_analysis (analysis_id, analysis_name, user_id, data_source_id, analysis_date) values (1, 'analysis_1', 1, 1, '2022-01-01') on conflict (analysis_id) do update set analysis_name = 'analysis_1', analysis_date = '2022-01-01'</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>INSERT INTO data_analysis (analysis_id, analysis_name, user_id, data_source_id, analysis_date) VALUES (1, 'analysis_1', 1, 1, '2022-01-01') ON CONFLICT (analysis_id) DO UPDATE SET analysis_name = 'analysis_1', analysis_date = '2022-01-01'</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);</t><stat>insert into data_analysis (analysis_id, analysis_name, user_id, data_source_id, analysis_date) values (1, 'analysis_1', 1, 1, '2022-01-01') on conflict (analysis_id) do update set analysis_name = 'analysis_1', analysis_date = '2022-01-01'</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>INSERT INTO data_analysis (analysis_id, analysis_name, user_id, data_source_id, analysis_date) VALUES (1, 'analysis_1', 1, 1, '2022-01-01') ON CONFLICT (analysis_id) DO UPDATE SET analysis_name = 'analysis_1', analysis_date = '2022-01-01'</stat><divider><t>CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>insert into data_analysis (analysis_id, analysis_name, user_id, data_source_id, analysis_date) values (1, 'analysis_1', 1, 1, '2022-01-01') on conflict (analysis_id) do update set analysis_name = 'analysis_1', analysis_date = '2022-01-01'</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>INSERT INTO data_analysis (analysis_id, analysis_name, user_id, data_source_id, analysis_date) VALUES (1, 'analysis_1', 1, 1, '2022-01-01') ON CONFLICT (analysis_id) DO UPDATE SET analysis_name = 'analysis_1', analysis_date = '2022-01-01'</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);</t><stat>insert into data_analysis (analysis_id, analysis_name, user_id, data_source_id, analysis_date) values (1, 'analysis_1', 1, 1, '2022-01-01') on conflict (analysis_id) do update set analysis_name = 'analysis_1', analysis_date = '2022-01-01'</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>INSERT INTO data_analysis (analysis_id, analysis_name, user_id, data_source_id, analysis_date) VALUES (1, 'analysis_1', 1, 1, '2022-01-01') ON CONFLICT (analysis_id) DO UPDATE SET analysis_name = 'analysis_1', analysis_date = '2022-01-01'</stat><divider><t>CREATE TABLE data_analysis (
    analysis_id INT PRIMARY KEY,
    analysis_name VARCHAR(50),
    user_id INT,
    data_source_id INT,
    analysis_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (data_source_id) REFERENCES data_sources(data_source_id)
);

CREATE TABLE data_sources (
    data_source_id INT PRIMARY KEY,
    data_source_name VARCHAR(50),
    data_type VARCHAR(50)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50),
    join_date DATE
);</t><stat>insert into data_analysis (analysis_id, analysis_name, user_id, data_source_id, analysis_date) values (1, 'analysis_1', 1, 1, '2022-01-01') on conflict (analysis_id) do update set analysis_name = 'analysis_1', analysis_date = '2022-01-01'</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO projects (project_id, project_name) VALUES (1, 'Project A') ON CONFLICT (project_id) DO UPDATE SET project_name = excluded.project_name;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into projects (project_id, project_name) values (1, 'project a') on conflict (project_id) do update set project_name = excluded.project_name;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO datasets (dataset_id, dataset_name, size_in_mb) VALUES (1, 'Dataset X', 100) ON CONFLICT (dataset_id) DO UPDATE SET dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into datasets (dataset_id, dataset_name, size_in_mb) values (1, 'dataset x', 100) on conflict (dataset_id) do update set dataset_name = excluded.dataset_name, size_in_mb = excluded.size_in_mb;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>INSERT INTO models (model_id, model_name, accuracy) VALUES (1, 'Model M', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    project_id INT,
    model_id INT,
    prediction_value VARCHAR(255),
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (model_id) REFERENCES models(model_id)
);

CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(255) NOT NULL,
    accuracy DECIMAL(5,2)
);

CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(255) NOT NULL,
    size_in_mb INT
);

CREATE TABLE projects (
    project_id INT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL
);</t><stat>insert into models (model_id, model_name, accuracy) values (1, 'model m', 0.85) on conflict (model_id) do update set model_name = excluded.model_name, accuracy = excluded.accuracy;</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>INSERT INTO data_science.projects (id, name, description, created_at) VALUES (1, 'Project A', 'This is project A', '2022-01-01') ON CONFLICT (id) DO UPDATE SET name = excluded.name, description = excluded.description, created_at = excluded.created_at</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>insert into data_science.projects (id, name, description, created_at) values (1, 'project a', 'this is project a', '2022-01-01') on conflict (id) do update set name = excluded.name, description = excluded.description, created_at = excluded.created_at</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>INSERT INTO data_science.projects (id, name, description, created_at) VALUES (2, 'Project B', 'This is project B', '2022-02-01') ON CONFLICT (id) DO UPDATE SET name = excluded.name, description = excluded.description, created_at = excluded.created_at</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>insert into data_science.projects (id, name, description, created_at) values (2, 'project b', 'this is project b', '2022-02-01') on conflict (id) do update set name = excluded.name, description = excluded.description, created_at = excluded.created_at</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>INSERT INTO data_science.projects (id, name, description, created_at) VALUES (3, 'Project C', 'This is project C', '2022-03-01') ON CONFLICT (id) DO UPDATE SET name = excluded.name, description = excluded.description, created_at = excluded.created_at</stat><divider><t>CREATE TABLE data_science.projects (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP)</t><stat>insert into data_science.projects (id, name, description, created_at) values (3, 'project c', 'this is project c', '2022-03-01') on conflict (id) do update set name = excluded.name, description = excluded.description, created_at = excluded.created_at</stat>