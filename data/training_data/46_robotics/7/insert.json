[
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (1, 'user1', 'password1', 1);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (2, 'user2', 'password2', 2);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (3, 'user3', 'password3', 3);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (4, 'user4', 'password4', 1);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (5, 'user5', 'password5', 2);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (6, 'user6', 'password6', 3);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (7, 'user7', 'password7', 1);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (8, 'user8', 'password8', 2);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (9, 'user9', 'password9', 3);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (10, 'user10', 'password10', 1);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (11, 'user11', 'password11', 2);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (12, 'user12', 'password12', 3);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (13, 'user13', 'password13', 1);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (14, 'user14', 'password14', 2);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (15, 'user15', 'password15', 3);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (16, 'user16', 'password16', 1);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (17, 'user17', 'password17', 2);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (18, 'user18', 'password18', 3);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (19, 'user19', 'password19', 1);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (20, 'user20', 'password20', 2);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (1, 'john_doe', 'password123', 2);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (2, 'jane_smith', 'abcd1234', 1);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (3, 'admin_user', 'adminpass', 3);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (4, 'test_user1', 'test123', 1);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (5, 'example_user', 'examplepass', 2);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (6, 'new_user', 'newpass', 1);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (7, 'temp_user', 'temp123', 2);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (8, 'guest_user', 'guestpass', 1);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (9, 'demo_user', 'demopass', 2);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (10, 'user_10', 'pass10', 3);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (11, 'user_11', 'pass11', 1);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (12, 'user_12', 'pass12', 2);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (13, 'user_13', 'pass13', 3);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (14, 'user_14', 'pass14', 1);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (15, 'user_15', 'pass15', 2);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (16, 'user_16', 'pass16', 3);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (17, 'user_17', 'pass17', 1);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (18, 'user_18', 'pass18', 2);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (19, 'user_19', 'pass19', 3);",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_access (user_id, username, password, access_level) VALUES (20, 'user_20', 'pass20', 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (1, 'john_doe', 'password123', 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (2, 'jane_smith', 'p@ssw0rd567', 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (3, 'bob_jackson', 'securepwd', 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (4, 'alice_green', '123456', 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (5, 'sam_brown', 'welcome123', 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (6, 'emily_white', 'bluesky789', 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (7, 'mike_adams', 'sunshine', 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (8, 'sara_miller', 'p@ssw0rd', 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (9, 'william_taylor', 'password1', 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (10, 'laura_jones', 'letmein', 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (11, 'chris_wilson', '123abc', 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (12, 'olivia_hall', 'secure123', 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (13, 'david_clark', 'passwordpwd', 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (14, 'hannah_smith', 'abc123', 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (15, 'james_taylor', 'letmein321', 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (16, 'lily_brown', 'secretpwd', 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (17, 'matt_jones', 'qwerty', 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (18, 'anna_white', 'password123!@#', 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (19, 'ryan_scott', 'abc1234', 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (20, 'natalie_adams', 'p@ssw0rd!', 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (1, 'Admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (2, 'Editor');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (3, 'Viewer');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (1, 'adminuser', 'adminpassword', 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (2, 'editoruser1', 'editorpassword1', 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (3, 'editoruser2', 'editorpassword2', 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (4, 'vieweruser1', 'viewerpassword1', 3);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (5, 'vieweruser2', 'viewerpassword2', 3);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (4, 'Author');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (6, 'authoruser1', 'authorpassword1', 4);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (7, 'authoruser2', 'authorpassword2', 4);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (5, 'Moderator');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (8, 'moderatoruser1', 'moderatorpassword1', 5);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (9, 'moderatoruser2', 'moderatorpassword2', 5);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (10, 'moderatoruser3', 'moderatorpassword3', 5);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (11, 'moderatoruser4', 'moderatorpassword4', 5);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (12, 'moderatoruser5', 'moderatorpassword5', 5);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (13, 'moderatoruser6', 'moderatorpassword6', 5);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (6, 'Contributor');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (14, 'contributoruser1', 'contributorpassword1', 6);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, role_id) VALUES (15, 'contributoruser2', 'contributorpassword2', 6);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password, role) VALUES (1, 'john_doe', 'password123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password, role) VALUES (2, 'jane_smith', 'pass123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password, role) VALUES (3, 'alex_brown', 'abcdef', 'user');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password, role) VALUES (4, 'megan_white', 'qwerty', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password, role) VALUES (5, 'sam_jones', 'password1', 'user');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'read');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions (permission_id, permission_name) VALUES (2, 'write');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions (permission_id, permission_name) VALUES (3, 'delete');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (1, 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (1, 2);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (2, 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (3, 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (3, 2);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (4, 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermission... [truncated for brevity]} 92 characters]))",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users VALUES (1, 'john_doe', 'password123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users VALUES (2, 'jane_smith', 'pass456', 'user');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users VALUES (3, 'sam_jones', 'secret123', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users VALUES (4, 'alex_brown', 'abc123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions VALUES (1, 'read');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions VALUES (2, 'write');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions VALUES (3, 'delete');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions VALUES (1, 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions VALUES (1, 2);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions VALUES (2, 2);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions VALUES (3, 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions VALUES (4, 3);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions VALUES (4, 2);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions VALUES (2, 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users VALUES (5, 'alice_hall', 'pass123', 'user');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users VALUES (6, 'bob_kane', '123xyz', 'admin');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions VALUES (5, 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions VALUES (6, 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions VALUES (6, 2);",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserAccess (user_id, username, password) VALUES (1, 'john_doe', 'password123')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserAccess (user_id, username, password) VALUES (2, 'jane_smith', 'qwerty456')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserAccess (user_id, username, password) VALUES (3, 'bob_jones', 'securepass789')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotAccess (robot_id, robot_name, user_id) VALUES (1, 'Robot1', 1)",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotAccess (robot_id, robot_name, user_id) VALUES (2, 'Robot2', 2)",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotAccess (robot_id, robot_name, user_id) VALUES (3, 'Robot3', 3)",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'Read')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions (permission_id, permission_name) VALUES (2, 'Write')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions (permission_id, permission_name) VALUES (3, 'Execute')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (1, 1)",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (2, 2)",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (3, 3)",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserAccess VALUES (1, 'JohnDoe', 'password123')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotAccess VALUES (1, 'Robot1', 1)",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions VALUES (1, 'Read')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions VALUES (1, 1)",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserAccess VALUES (2, 'JaneSmith', 'qwerty123')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotAccess VALUES (2, 'Robot2', 2)",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions VALUES (2, 'Write')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions VALUES (2, 2)",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserAccess VALUES (3, 'MikeJohnson', 'abc456')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotAccess VALUES (3, 'Robot3', 3)",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions VALUES (3, 'Execute')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions VALUES (3, 3)",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserAccess VALUES (4, 'AliceBrown', 'p@ssw0rd')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotAccess VALUES (4, 'Robot4', 4)",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions VALUES (4, 'Admin')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions VALUES (4, 4)",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserAccess VALUES (5, 'SamWilson', 'passpass')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotAccess VALUES (5, 'Robot5', 5)",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions VALUES (5, 'Delete')",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions VALUES (5, 5)",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password) VALUES (2, 'jane_smith', 'securepassword');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password) VALUES (3, 'sam_jones', 'userpass');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password) VALUES (4, 'emma_white', 'pass1234');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password) VALUES (5, 'alex_brown', 'letmein');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Robots (robot_id, robot_name, robot_type, user_id) VALUES (1, 'R2D2', 'Astro', 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Robots (robot_id, robot_name, robot_type, user_id) VALUES (2, 'Wall-E', 'Cleaning', 2);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Robots (robot_id, robot_name, robot_type, user_id) VALUES (3, 'Bender', 'Drinking', 3);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Robots (robot_id, robot_name, robot_type, user_id) VALUES (4, 'Optimus Prime', 'Transformer', 4);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Robots (robot_id, robot_name, robot_type, user_id) VALUES (5, 'C-3PO', 'Protocol', 5);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions (permission_id, permission_name, description) VALUES (1, 'read', 'Allows read access');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions (permission_id, permission_name, description) VALUES (2, 'write', 'Allows write access');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions (permission_id, permission_name, description) VALUES (3, 'execute', 'Allows execute access');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions (permission_id, permission_name, description) VALUES (4, 'admin', 'Admin privileges');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions (permission_id, permission_name, description) VALUES (5, 'delete', 'Allows delete access');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (1, 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (2, 2);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (3, 3);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (4, 4);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (5, 5);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotPermissions (robot_id, permission_id) VALUES (1, 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotPermissions (robot_id, permission_id) VALUES (2, 2);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotPermissions (robot_id, permission_id) VALUES (3, 3);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotPermissions (robot_id, permission_id) VALUES (4, 4);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotPermissions (robot_id, permission_id) VALUES (5, 5);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password) VALUES (2, 'jane_smith', 'securepass');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password) VALUES (3, 'alex_jones', 'p@ssw0rd');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password) VALUES (4, 'lisa_brown', 'strongpwd');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Robots (robot_id, robot_name, robot_type, user_id) VALUES (1, 'CleaningBot', 'Cleaning', 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Robots (robot_id, robot_name, robot_type, user_id) VALUES (2, 'SecurityBot', 'Security', 2);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Robots (robot_id, robot_name, robot_type, user_id) VALUES (3, 'DeliveryBot', 'Delivery', 3);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Robots (robot_id, robot_name, robot_type, user_id) VALUES (4, 'MedicalBot', 'Medical', 4);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions (permission_id, permission_name, description) VALUES (1, 'Read', 'Allows read access to data');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions (permission_id, permission_name, description) VALUES (2, 'Write', 'Allows write access to data');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO Permissions (permission_id, permission_name, description) VALUES (3, 'Admin', 'Administrator privileges');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (1, 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (2, 2);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO UserPermissions (user_id, permission_id) VALUES (3, 3);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotPermissions (robot_id, permission_id) VALUES (1, 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotPermissions (robot_id, permission_id) VALUES (2, 2);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotPermissions (robot_id, permission_id) VALUES (3, 3);"
]