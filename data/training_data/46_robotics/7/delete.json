[
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nDELETE FROM user_access WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nDELETE FROM user_access WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nDELETE FROM user_access WHERE access_level < 3;",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nDELETE FROM user_access WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nDELETE FROM user_access WHERE access_level > 5;",
  "### TABLEDATA\n\nCREATE TABLE user_access (\n\tuser_id INT PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword VARCHAR(50) NOT NULL,\n\taccess_level INT\n)\n\n### STATEMENT\n\nDELETE FROM user_access WHERE username = 'admin' AND access_level = 10;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM users WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM roles WHERE role_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM roles WHERE role_name = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role_id INT\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM users WHERE role_id IN (SELECT role_id FROM roles WHERE role_name = 'admin');",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM Users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM Permissions WHERE permission_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM UserPermissions WHERE user_id = 1 AND permission_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM Users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM Permissions WHERE permission_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    role VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT,\n    permission_id INT,\n    PRIMARY KEY (user_id, permission_id),\n    FOREIGN KEY (user_id) REFERENCES Users(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM UserPermissions WHERE user_id = 1 AND permission_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM UserAccess WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM RobotAccess WHERE robot_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM Permissions WHERE permission_id = 201;",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM UserAccess WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM RobotAccess WHERE user_id = (SELECT user_id FROM UserAccess WHERE username = 'JohnDoe');",
  "### TABLEDATA\n\nCREATE TABLE UserAccess (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotAccess (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id)\n);\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE UserPermissions (\n    user_id INT NOT NULL,\n    permission_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES UserAccess(user_id),\n    FOREIGN KEY (permission_id) REFERENCES Permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM Permissions WHERE permission_name = 'Admin';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM Users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM Robots WHERE robot_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM Permissions WHERE permission_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM Robots WHERE robot_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nDELETE Users FROM Users INNER JOIN UserPermissions ON Users.user_id = UserPermissions.user_id WHERE UserPermissions.permission_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_type VARCHAR(50) NOT NULL,\n    user_id INT REFERENCES Users(user_id)\n);\n\n\nCREATE TABLE Permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE UserPermissions (\n    user_id INT REFERENCES Users(user_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (user_id, permission_id)\n);\n\n\nCREATE TABLE RobotPermissions (\n    robot_id INT REFERENCES Robots(robot_id),\n    permission_id INT REFERENCES Permissions(permission_id),\n    PRIMARY KEY (robot_id, permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM Permissions WHERE permission_name = 'admin';"
]