[
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM robots WHERE robot_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT robot_name FROM robots WHERE robot_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT model_3d FROM robots WHERE robot_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT design_specifications FROM robots WHERE robot_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM robots WHERE robot_id > 5;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT robot_name, design_specifications FROM robots WHERE robot_id < 10;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM robots WHERE robot_id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT robot_name, model_3d FROM robots WHERE robot_id = 6;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM robots WHERE robot_name = 'Robot A';",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM robots WHERE design_specifications LIKE '%advanced%';",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM robots WHERE model_3d IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT robot_id, robot_name FROM robots WHERE model_3d IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT robot_name FROM robots;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_robots FROM robots;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(robot_id) AS average_id FROM robots;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(robot_id) AS max_id FROM robots;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT MIN(robot_id) AS min_id FROM robots;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT SUM(robot_id) AS total_id FROM robots;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM robots ORDER BY robot_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM robots ORDER BY robot_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM robots WHERE robot_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT robot_name FROM robots WHERE robot_id > 10;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM robots WHERE robot_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT robot_name, model_3d FROM robots WHERE robot_id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM robots WHERE design_specifications IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT robot_name FROM robots;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(robot_id) FROM robots;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT robot_name FROM robots ORDER BY robot_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT robot_name FROM robots WHERE model_3d = B'101010';",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM robots WHERE design_specifications LIKE '%metal%';",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT robot_name, design_specifications FROM robots WHERE robot_id IN (2, 4, 6);",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM robots WHERE robot_name = 'R2D2';",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT robot_name, model_3d FROM robots WHERE LENGTH(robot_name) > 5;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM robots WHERE robot_name IN ('C3PO', 'R2D2', 'BB8');",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT robot_name, model_3d FROM robots WHERE robot_name LIKE '%robot%';",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT robot_name) FROM robots;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM robots WHERE LENGTH(design_specifications) > 100;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT robot_id, robot_name, model_3d FROM robots ORDER BY robot_id LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT robot_name, LENGTH(design_specifications) AS spec_length FROM robots WHERE robot_id < 5;",
  "### TABLEDATA\n\nCREATE TABLE robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255),\n  model_3d BYTEA,\n  design_specifications TEXT\n)\n\n### STATEMENT\n\nSELECT robot_name FROM robots WHERE design_specifications LIKE '%home%';",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, creation_date FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_id, robot_name, creation_date FROM Robots WHERE robot_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_id, robot_description FROM Robots WHERE creation_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT design_id, robot_id, design_name FROM RobotDesigns;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT design_id, design_name, design_file FROM RobotDesigns WHERE robot_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT R.robot_name, RD.design_name FROM Robots R INNER JOIN RobotDesigns RD ON R.robot_id = RD.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT R.robot_name, RD.design_file FROM Robots R INNER JOIN RobotDesigns RD ON R.robot_id = RD.robot_id WHERE RD.design_name = 'Model X';",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT RD.design_name, R.creation_date FROM Robots R LEFT JOIN RobotDesigns RD ON R.robot_id = RD.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT RD.design_file, R.robot_description FROM RobotDesigns RD RIGHT JOIN Robots R ON R.robot_id = RD.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT MAX(robot_id) FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT AVG(robot_id) FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT MIN(creation_date) FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT SUM(robot_id) FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT robot_name FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name AS name, creation_date AS date FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_id, robot_name FROM Robots ORDER BY robot_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, COUNT(*) FROM Robots GROUP BY robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_id, robot_name FROM Robots LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, creation_date FROM Robots WHERE robot_description LIKE '%AI%';",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, robot_description FROM Robots WHERE creation_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id WHERE r.robot_name LIKE '%R2%';",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id WHERE r.creation_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_robots FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, COUNT(rd.design_id) AS total_designs FROM Robots r LEFT JOIN RobotDesigns rd ON r.robot_id = rd.robot_id GROUP BY r.robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, COUNT(*) AS total_designs FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id GROUP BY r.robot_name, rd.design_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, AVG(rd.design_id) AS avg_design_id FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id GROUP BY r.robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, SUM(rd.design_id) AS total_design_id FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id GROUP BY r.robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, MAX(rd.design_id) AS max_design_id FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id GROUP BY r.robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, MIN(rd.design_id) AS min_design_id FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id GROUP BY r.robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, AVG(DATEDIFF(current_date(), r.creation_date)) AS avg_days_since_creation FROM Robots r;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, creation_date, DATE_FORMAT(creation_date, '%Y-%m-%d') AS formatted_date FROM Robots r;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, YEAR(creation_date) AS creation_year FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, STR_TO_DATE('2022-06-15', '%Y-%m-%d') AS target_date FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, creation_date, DATE_ADD(creation_date, INTERVAL 1 YEAR) AS next_year FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, creation_date, CASE WHEN creation_date < '2021-01-01' THEN 'Before_2021' ELSE '2021_or_later' END AS creation_period FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, creation_date, IF(creation_date < '2021-01-01', 'Before_2021', '2021_or_later') AS creation_period FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, robot_description, LENGTH(robot_description) AS description_length FROM Robots WHERE LENGTH(robot_description) > 100;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, SUBSTRING(robot_description, 1, 50) AS first_50_chars FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, robot_description, UPPER(robot_name) AS uppercase_name FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    creation_date DATE,\n    robot_description TEXT\n);\n\n\nCREATE TABLE RobotDesigns (\n    design_id INT PRIMARY KEY,\n    robot_id INT,\n    design_name VARCHAR(255),\n    design_file BLOB,\n    CONSTRAINT fk_robot_id FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, CONCAT(robot_name, ' - ', robot_description) AS robot_info FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, robot_material FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_id, robot_name, robot_material FROM Robots WHERE robot_material='Metal';",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT * FROM RobotDesigns;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT design_id, design_name FROM RobotDesigns WHERE design_version=1;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT * FROM RobotSpecifications;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, spec_description, spec_weight FROM Robots JOIN RobotSpecifications ON Robots.robot_id = RobotSpecifications.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rs.spec_description FROM Robots r INNER JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT rs.spec_id, r.robot_name, rs.spec_weight FROM Robots r INNER JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id ORDER BY rs.spec_weight DESC;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rd.design_version FROM Robots r INNER JOIN RobotDesigns rd ON r.robot_id = rd.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name FROM Robots r LEFT JOIN RobotDesigns rd ON r.robot_id = rd.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rs.spec_description FROM Robots r RIGHT JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT robot_material FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_robots FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT AVG(spec_weight) AS avg_weight FROM RobotSpecifications;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT MAX(spec_height) AS max_height FROM RobotSpecifications;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Robots WHERE robot_id=1;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rd.design_version, rs.spec_description FROM Robots r INNER JOIN RobotDesigns rd ON r.robot_id = rd.robot_id INNER JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, spec_weight FROM Robots JOIN RobotSpecifications ON Robots.robot_id = RobotSpecifications.robot_id WHERE spec_weight > 20;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r INNER JOIN RobotDesigns rd ON r.robot_id = rd.robot_id LEFT JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT robot_id, robot_name FROM Robots WHERE robot_material = 'Metal';",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r INNER JOIN RobotDesigns rd ON r.robot_id = rd.robot_id INNER JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r LEFT JOIN RobotDesigns rd ON r.robot_id = rd.robot_id LEFT JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r RIGHT JOIN RobotDesigns rd ON r.robot_id = rd.robot_id RIGHT JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, AVG(rs.spec_weight) AS avg_weight FROM Robots r JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id GROUP BY r.robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, COUNT(rd.design_id) AS design_count FROM Robots r LEFT JOIN RobotDesigns rd ON r.robot_id = rd.robot_id GROUP BY r.robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, MAX(rs.spec_height) AS max_height FROM Robots r JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id GROUP BY r.robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT r.robot_material FROM Robots r;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id WHERE rs.spec_height > 100;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id ORDER BY r.robot_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id ORDER BY rs.spec_weight DESC;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id LIMIT 5 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id WHERE r.robot_name LIKE '%Model%';",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id WHERE rd.design_version = 2;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id WHERE r.robot_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(255) NOT NULL,\n  robot_material VARCHAR(100) NOT NULL,\n  robot_model3d BLOB NOT NULL\n);\n\n\nCREATE TABLE RobotDesigns (\n  design_id INT PRIMARY KEY,\n  robot_id INT,\n  design_name VARCHAR(255) NOT NULL,\n  design_version INT NOT NULL,\n  design_file BLOB NOT NULL,\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n\nCREATE TABLE RobotSpecifications (\n  spec_id INT PRIMARY KEY,\n  robot_id INT,\n  spec_description TEXT NOT NULL,\n  spec_weight DECIMAL(10,2),\n  spec_height DECIMAL(10,2),\n  FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\n### STATEMENT\n\nSELECT r.robot_name, rd.design_name, rs.spec_description FROM Robots r JOIN RobotDesigns rd ON r.robot_id = rd.robot_id JOIN RobotSpecifications rs ON r.robot_id = rs.robot_id WHERE r.robot_name = 'X-101';",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_id, robot_name, created_at FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, robot_description FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT * FROM RobotParts;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT part_id, part_name, part_type FROM RobotParts;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT part_name, part_weight FROM RobotParts;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT * FROM RobotModels;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT model_id, robot_id, model_name FROM RobotModels;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT model_name, model_description FROM RobotModels;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT * FROM DesignSpecifications;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT spec_id, model_id, spec_type FROM DesignSpecifications;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT spec_type, spec_details FROM DesignSpecifications;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name FROM Robots JOIN RobotParts ON Robots.robot_id = RobotParts.part_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotModels.model_name, DesignSpecifications.spec_type FROM Robots JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id JOIN DesignSpecifications ON RobotModels.model_id = DesignSpecifications.model_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name, DesignSpecifications.spec_type FROM Robots JOIN RobotParts ON Robots.robot_id = RobotParts.part_id JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id JOIN DesignSpecifications ON RobotModels.model_id = DesignSpecifications.model_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name, RobotModels.model_name, DesignSpecifications.spec_type FROM Robots JOIN RobotParts ON Robots.robot_id = RobotParts.part_id JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id JOIN DesignSpecifications ON RobotModels.model_id = DesignSpecifications.model_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, COUNT(*) AS total_parts FROM Robots JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id JOIN RobotParts ON RobotModels.model_id = RobotParts.part_id GROUP BY robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT model_name, COUNT(*) AS total_specifications FROM RobotModels JOIN DesignSpecifications ON RobotModels.model_id = DesignSpecifications.model_id GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, MAX(part_weight) AS heaviest_part FROM Robots JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id JOIN RobotParts ON RobotModels.model_id = RobotParts.part_id GROUP BY robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, MIN(part_weight) AS lightest_part FROM Robots JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id JOIN RobotParts ON RobotModels.model_id = RobotParts.part_id GROUP BY robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, robot_description FROM Robots WHERE robot_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT model_name, model_description FROM RobotModels WHERE robot_id IN (1, 2);",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT part_type FROM RobotParts;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, model_name FROM Robots JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, part_name FROM Robots JOIN RobotParts ON Robots.robot_id = RobotParts.part_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Robots ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT model_name, spec_type FROM RobotModels JOIN DesignSpecifications ON RobotModels.model_id = DesignSpecifications.model_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, model_name FROM Robots INNER JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, part_name FROM Robots LEFT JOIN RobotParts ON Robots.robot_id = RobotParts.part_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, part_name FROM Robots RIGHT JOIN RobotParts ON Robots.robot_id = RobotParts.part_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT MIN(part_weight), MAX(part_weight) FROM RobotParts;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT AVG(part_weight) AS average_weight FROM RobotParts;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, COUNT(DesignSpecifications.spec_id) AS spec_count FROM Robots LEFT JOIN RobotModels ON Robots.robot_id = RobotModels.robot_id LEFT JOIN DesignSpecifications ON RobotModels.model_id = DesignSpecifications.model_id GROUP BY Robots.robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT model_name, SUM(part_weight) AS total_weight FROM RobotModels JOIN RobotParts ON RobotModels.robot_id = RobotParts.part_id GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, model_name FROM Robots WHERE robot_id = 1 UNION SELECT robot_name, model_name FROM Robots WHERE created_at < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, model_name FROM Robots WHERE EXISTS (SELECT * FROM RobotModels WHERE RobotModels.robot_id = Robots.robot_id);",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, model_name FROM Robots WHERE NOT EXISTS (SELECT * FROM RobotModels WHERE RobotModels.robot_id = Robots.robot_id);",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(50) NOT NULL,\n    robot_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE RobotParts (\n    part_id INT PRIMARY KEY,\n    part_name VARCHAR(50) NOT NULL,\n    part_type VARCHAR(50),\n    part_weight DECIMAL(10, 2)\n);\n\nCREATE TABLE RobotModels (\n    model_id INT PRIMARY KEY,\n    robot_id INT,\n    model_name VARCHAR(50) NOT NULL,\n    model_description TEXT,\n    FOREIGN KEY (robot_id) REFERENCES Robots(robot_id)\n);\n\nCREATE TABLE DesignSpecifications (\n    spec_id INT PRIMARY KEY,\n    model_id INT,\n    spec_type VARCHAR(50) NOT NULL,\n    spec_details TEXT,\n    FOREIGN KEY (model_id) REFERENCES RobotModels(model_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, model_name FROM Robots WHERE robot_id BETWEEN 1 AND 5;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT robot_name, robot_type FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT * FROM RobotParts;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT part_name, part_category FROM RobotParts;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT * FROM RobotModels;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT model_name, model_description FROM RobotModels;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT * FROM RobotParameters;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT param_name, param_value FROM RobotParameters;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT * FROM ModelParts;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT model_id, part_id, quantity FROM ModelParts;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id WHERE ModelParts.quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots LEFT JOIN ModelParts ON Robots.robot_id = ModelParts.model_id LEFT JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots RIGHT JOIN ModelParts ON Robots.robot_id = ModelParts.model_id RIGHT JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots INNER JOIN ModelParts ON Robots.robot_id = ModelParts.model_id INNER JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, COUNT(*) AS total_parts FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id GROUP BY Robots.robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, SUM(ModelParts.quantity) AS total_quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id GROUP BY Robots.robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, AVG(ModelParts.quantity) AS avg_quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id GROUP BY Robots.robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, MAX(ModelParts.quantity) AS max_quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON RobotParts.part_id = ModelParts.part_id GROUP BY Robots.robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT robot_id, robot_name, robot_type FROM Robots WHERE robot_type = 'Humanoid';",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT robot_name AS Name, robot_type AS Type FROM Robots WHERE robot_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS TotalRobots FROM Robots;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT RobotParts.part_name, RobotModels.model_name, ModelParts.quantity FROM RobotParts JOIN ModelParts ON RobotParts.part_id = ModelParts.part_id JOIN RobotModels ON ModelParts.model_id = RobotModels.model_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotModels.model_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotModels ON ModelParts.model_id = RobotModels.model_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT RobotModels.model_name, COUNT(Robots.robot_id) AS TotalRobots FROM RobotModels JOIN ModelParts ON RobotModels.model_id = ModelParts.model_id JOIN Robots ON ModelParts.model_id = Robots.robot_id GROUP BY RobotModels.model_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT RobotModels.model_name, AVG(ModelParts.quantity) AS AvgQuantity FROM RobotModels JOIN ModelParts ON RobotModels.model_id = ModelParts.model_id GROUP BY RobotModels.model_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, COUNT(ModelParts.part_id) AS TotalParts FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id GROUP BY Robots.robot_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT RobotModels.model_name, SUM(ModelParts.quantity) AS TotalQuantity FROM RobotModels JOIN ModelParts ON RobotModels.model_id = ModelParts.model_id GROUP BY RobotModels.model_name;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id WHERE ModelParts.quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_category FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id WHERE ModelParts.quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name, RobotParts.part_category, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id WHERE ModelParts.quantity BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT RobotModels.model_name, RobotParameters.param_name, RobotParameters.param_value FROM RobotModels JOIN RobotParameters ON RobotModels.model_id = RobotParameters.param_id;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name, RobotParts.part_color FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id WHERE RobotParts.part_color IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id ORDER BY ModelParts.quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id ORDER BY RobotParts.part_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT Robots.robot_name FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id WHERE ModelParts.quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n  robot_id INT PRIMARY KEY,\n  robot_name VARCHAR(50) NOT NULL,\n  robot_type VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE RobotParts (\n  part_id INT PRIMARY KEY,\n  part_name VARCHAR(50) NOT NULL,\n  part_category VARCHAR(50) NOT NULL,\n  part_color VARCHAR(20)\n);\n\nCREATE TABLE RobotModels (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50) NOT NULL,\n  model_description TEXT\n);\n\nCREATE TABLE RobotParameters (\n  param_id INT PRIMARY KEY,\n  param_name VARCHAR(50) NOT NULL,\n  param_value VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE ModelParts (\n  model_id INT,\n  part_id INT,\n  quantity INT NOT NULL,\n  FOREIGN KEY (model_id) REFERENCES RobotModels(model_id),\n  FOREIGN KEY (part_id) REFERENCES RobotParts(part_id),\n  PRIMARY KEY (model_id, part_id)\n);\n\n### STATEMENT\n\nSELECT Robots.robot_name, RobotParts.part_name, ModelParts.quantity FROM Robots JOIN ModelParts ON Robots.robot_id = ModelParts.model_id JOIN RobotParts ON ModelParts.part_id = RobotParts.part_id GROUP BY Robots.robot_name HAVING SUM(ModelParts.quantity) > 20;"
]