[
  "### TABLEDATA\n\nCREATE TABLE maintenance_schedules (\n    schedule_id INT PRIMARY KEY,\n    robot_id INT,\n    maintenance_type VARCHAR(255),\n    scheduled_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM maintenance_schedules WHERE schedule_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE maintenance_schedules (\n    schedule_id INT PRIMARY KEY,\n    robot_id INT,\n    maintenance_type VARCHAR(255),\n    scheduled_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM maintenance_schedules WHERE robot_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE maintenance_schedules (\n    schedule_id INT PRIMARY KEY,\n    robot_id INT,\n    maintenance_type VARCHAR(255),\n    scheduled_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM maintenance_schedules WHERE scheduled_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE maintenance_schedules (\n    schedule_id INT PRIMARY KEY,\n    robot_id INT,\n    maintenance_type VARCHAR(255),\n    scheduled_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM maintenance_schedules WHERE schedule_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE maintenance_schedules (\n    schedule_id INT PRIMARY KEY,\n    robot_id INT,\n    maintenance_type VARCHAR(255),\n    scheduled_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM maintenance_schedules WHERE robot_id = 3 AND maintenance_type = 'Preventive';",
  "### TABLEDATA\n\nCREATE TABLE maintenance_schedules (\n    schedule_id INT PRIMARY KEY,\n    robot_id INT,\n    maintenance_type VARCHAR(255),\n    scheduled_date DATE,\n    completion_status BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM maintenance_schedules WHERE scheduled_date < '2022-01-01' AND completion_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE RobotMaintenanceSchedule (\n  robot_id SERIAL PRIMARY KEY,\n  maintenance_date DATE,\n  maintenance_type VARCHAR(50),\n  maintenance_notes TEXT\n);\n\n\nCREATE TABLE RobotStatus (\n  robot_id SERIAL PRIMARY KEY,\n  status VARCHAR(20),\n  last_update TIMESTAMP,\n  battery_level INT\n);\n\n### STATEMENT\n\nDELETE FROM RobotMaintenanceSchedule WHERE robot_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE RobotMaintenanceSchedule (\n  robot_id SERIAL PRIMARY KEY,\n  maintenance_date DATE,\n  maintenance_type VARCHAR(50),\n  maintenance_notes TEXT\n);\n\n\nCREATE TABLE RobotStatus (\n  robot_id SERIAL PRIMARY KEY,\n  status VARCHAR(20),\n  last_update TIMESTAMP,\n  battery_level INT\n);\n\n### STATEMENT\n\nDELETE FROM RobotStatus WHERE robot_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE RobotMaintenanceSchedule (\n  robot_id SERIAL PRIMARY KEY,\n  maintenance_date DATE,\n  maintenance_type VARCHAR(50),\n  maintenance_notes TEXT\n);\n\n\nCREATE TABLE RobotStatus (\n  robot_id SERIAL PRIMARY KEY,\n  status VARCHAR(20),\n  last_update TIMESTAMP,\n  battery_level INT\n);\n\n### STATEMENT\n\nDELETE FROM RobotMaintenanceSchedule WHERE maintenance_type = 'routine';",
  "### TABLEDATA\n\nCREATE TABLE RobotMaintenanceSchedule (\n  robot_id SERIAL PRIMARY KEY,\n  maintenance_date DATE,\n  maintenance_type VARCHAR(50),\n  maintenance_notes TEXT\n);\n\n\nCREATE TABLE RobotStatus (\n  robot_id SERIAL PRIMARY KEY,\n  status VARCHAR(20),\n  last_update TIMESTAMP,\n  battery_level INT\n);\n\n### STATEMENT\n\nDELETE FROM RobotMaintenanceSchedule WHERE robot_id = 5 AND maintenance_date < '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE RobotMaintenanceSchedule (\n  robot_id SERIAL PRIMARY KEY,\n  maintenance_date DATE,\n  maintenance_type VARCHAR(50),\n  maintenance_notes TEXT\n);\n\n\nCREATE TABLE RobotStatus (\n  robot_id SERIAL PRIMARY KEY,\n  status VARCHAR(20),\n  last_update TIMESTAMP,\n  battery_level INT\n);\n\n### STATEMENT\n\nDELETE FROM RobotStatus WHERE status = 'offline' AND battery_level < 20;",
  "### TABLEDATA\n\nCREATE TABLE RobotMaintenanceSchedule (\n  robot_id SERIAL PRIMARY KEY,\n  maintenance_date DATE,\n  maintenance_type VARCHAR(50),\n  maintenance_notes TEXT\n);\n\n\nCREATE TABLE RobotStatus (\n  robot_id SERIAL PRIMARY KEY,\n  status VARCHAR(20),\n  last_update TIMESTAMP,\n  battery_level INT\n);\n\n### STATEMENT\n\nDELETE FROM RobotMaintenanceSchedule WHERE maintenance_type = 'major' AND robot_id IN (SELECT robot_id FROM RobotStatus WHERE status = 'idle');",
  "### TABLEDATA\n\nCREATE TABLE robots (id INT PRIMARY KEY,\n robot_name VARCHAR(50),\n maintenance_schedule VARCHAR(100))\n\nCREATE TABLE maintenance_tasks (task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description VARCHAR(255))\n\nCREATE TABLE robot_maintenance (rm_id INT PRIMARY KEY,\n robot_id INT,\n task_id INT,\n due_date TIMESTAMP,\n completed_date TIMESTAMP)\n\n### STATEMENT\n\nDELETE FROM robots WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE robots (id INT PRIMARY KEY,\n robot_name VARCHAR(50),\n maintenance_schedule VARCHAR(100))\n\nCREATE TABLE maintenance_tasks (task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description VARCHAR(255))\n\nCREATE TABLE robot_maintenance (rm_id INT PRIMARY KEY,\n robot_id INT,\n task_id INT,\n due_date TIMESTAMP,\n completed_date TIMESTAMP)\n\n### STATEMENT\n\nDELETE FROM maintenance_tasks WHERE task_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE robots (id INT PRIMARY KEY,\n robot_name VARCHAR(50),\n maintenance_schedule VARCHAR(100))\n\nCREATE TABLE maintenance_tasks (task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description VARCHAR(255))\n\nCREATE TABLE robot_maintenance (rm_id INT PRIMARY KEY,\n robot_id INT,\n task_id INT,\n due_date TIMESTAMP,\n completed_date TIMESTAMP)\n\n### STATEMENT\n\nDELETE FROM robot_maintenance WHERE rm_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE robots (id INT PRIMARY KEY,\n robot_name VARCHAR(50),\n maintenance_schedule VARCHAR(100))\n\nCREATE TABLE maintenance_tasks (task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description VARCHAR(255))\n\nCREATE TABLE robot_maintenance (rm_id INT PRIMARY KEY,\n robot_id INT,\n task_id INT,\n due_date TIMESTAMP,\n completed_date TIMESTAMP)\n\n### STATEMENT\n\nDELETE FROM robots WHERE id = 1 AND robot_name = 'Robo1';",
  "### TABLEDATA\n\nCREATE TABLE robots (id INT PRIMARY KEY,\n robot_name VARCHAR(50),\n maintenance_schedule VARCHAR(100))\n\nCREATE TABLE maintenance_tasks (task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description VARCHAR(255))\n\nCREATE TABLE robot_maintenance (rm_id INT PRIMARY KEY,\n robot_id INT,\n task_id INT,\n due_date TIMESTAMP,\n completed_date TIMESTAMP)\n\n### STATEMENT\n\nDELETE FROM maintenance_tasks WHERE task_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE robots (id INT PRIMARY KEY,\n robot_name VARCHAR(50),\n maintenance_schedule VARCHAR(100))\n\nCREATE TABLE maintenance_tasks (task_id INT PRIMARY KEY,\n task_name VARCHAR(50),\n task_description VARCHAR(255))\n\nCREATE TABLE robot_maintenance (rm_id INT PRIMARY KEY,\n robot_id INT,\n task_id INT,\n due_date TIMESTAMP,\n completed_date TIMESTAMP)\n\n### STATEMENT\n\nDELETE FROM robot_maintenance WHERE completed_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255) NOT NULL,\n    maintenance_schedule VARCHAR(255) NOT NULL,\n    last_maintenance_date DATE\n)\n\nCREATE TABLE Maintenance_Log (\n    log_id INT PRIMARY KEY,\n    robot_id INT,\n    maintenance_type VARCHAR(255) NOT NULL,\n    maintenance_date DATE,\n    technician_name VARCHAR(255)\n)\n\nCREATE TABLE Technicians (\n    technician_id INT PRIMARY KEY,\n    technician_name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255)\n)\n\nCREATE TABLE Maintenance_Types (\n    type_id INT PRIMARY KEY,\n    maintenance_type VARCHAR(255) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nDELETE FROM Robots WHERE robot_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255) NOT NULL,\n    maintenance_schedule VARCHAR(255) NOT NULL,\n    last_maintenance_date DATE\n)\n\nCREATE TABLE Maintenance_Log (\n    log_id INT PRIMARY KEY,\n    robot_id INT,\n    maintenance_type VARCHAR(255) NOT NULL,\n    maintenance_date DATE,\n    technician_name VARCHAR(255)\n)\n\nCREATE TABLE Technicians (\n    technician_id INT PRIMARY KEY,\n    technician_name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255)\n)\n\nCREATE TABLE Maintenance_Types (\n    type_id INT PRIMARY KEY,\n    maintenance_type VARCHAR(255) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nDELETE FROM Maintenance_Log WHERE log_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255) NOT NULL,\n    maintenance_schedule VARCHAR(255) NOT NULL,\n    last_maintenance_date DATE\n)\n\nCREATE TABLE Maintenance_Log (\n    log_id INT PRIMARY KEY,\n    robot_id INT,\n    maintenance_type VARCHAR(255) NOT NULL,\n    maintenance_date DATE,\n    technician_name VARCHAR(255)\n)\n\nCREATE TABLE Technicians (\n    technician_id INT PRIMARY KEY,\n    technician_name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255)\n)\n\nCREATE TABLE Maintenance_Types (\n    type_id INT PRIMARY KEY,\n    maintenance_type VARCHAR(255) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nDELETE FROM Technicians WHERE technician_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255) NOT NULL,\n    maintenance_schedule VARCHAR(255) NOT NULL,\n    last_maintenance_date DATE\n)\n\nCREATE TABLE Maintenance_Log (\n    log_id INT PRIMARY KEY,\n    robot_id INT,\n    maintenance_type VARCHAR(255) NOT NULL,\n    maintenance_date DATE,\n    technician_name VARCHAR(255)\n)\n\nCREATE TABLE Technicians (\n    technician_id INT PRIMARY KEY,\n    technician_name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255)\n)\n\nCREATE TABLE Maintenance_Types (\n    type_id INT PRIMARY KEY,\n    maintenance_type VARCHAR(255) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nDELETE FROM Maintenance_Log WHERE maintenance_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255) NOT NULL,\n    maintenance_schedule VARCHAR(255) NOT NULL,\n    last_maintenance_date DATE\n)\n\nCREATE TABLE Maintenance_Log (\n    log_id INT PRIMARY KEY,\n    robot_id INT,\n    maintenance_type VARCHAR(255) NOT NULL,\n    maintenance_date DATE,\n    technician_name VARCHAR(255)\n)\n\nCREATE TABLE Technicians (\n    technician_id INT PRIMARY KEY,\n    technician_name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255)\n)\n\nCREATE TABLE Maintenance_Types (\n    type_id INT PRIMARY KEY,\n    maintenance_type VARCHAR(255) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nDELETE FROM Robots WHERE last_maintenance_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Robots (\n    robot_id INT PRIMARY KEY,\n    robot_name VARCHAR(255) NOT NULL,\n    maintenance_schedule VARCHAR(255) NOT NULL,\n    last_maintenance_date DATE\n)\n\nCREATE TABLE Maintenance_Log (\n    log_id INT PRIMARY KEY,\n    robot_id INT,\n    maintenance_type VARCHAR(255) NOT NULL,\n    maintenance_date DATE,\n    technician_name VARCHAR(255)\n)\n\nCREATE TABLE Technicians (\n    technician_id INT PRIMARY KEY,\n    technician_name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255)\n)\n\nCREATE TABLE Maintenance_Types (\n    type_id INT PRIMARY KEY,\n    maintenance_type VARCHAR(255) NOT NULL,\n    description TEXT\n)\n\n### STATEMENT\n\nDELETE FROM Technicians WHERE specialization = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE robots ( \n   robot_id INT PRIMARY KEY, \n   robot_name VARCHAR(50) NOT NULL, \n   manufacturer VARCHAR(50) NOT NULL, \n   purchase_date DATE, \n   last_maintenance_date DATE \n );\n\nCREATE TABLE maintenance_schedule ( \n   schedule_id INT PRIMARY KEY, \n   robot_id INT, \n   schedule_date DATE, \n   status VARCHAR(20) NOT NULL, \n   FOREIGN KEY(robot_id) REFERENCES robots(robot_id) \n );\n\nCREATE TABLE maintenance_tasks ( \n   task_id INT PRIMARY KEY, \n   task_name VARCHAR(50) NOT NULL, \n   task_description TEXT, \n   frequency INT, \n   estimated_duration INT \n );\n\nCREATE TABLE robot_maintenance ( \n   maintenance_id INT PRIMARY KEY, \n   schedule_id INT, \n   task_id INT, \n   performed_date DATE, \n   duration_in_minutes INT, \n   FOREIGN KEY(schedule_id) REFERENCES maintenance_schedule(schedule_id), \n   FOREIGN KEY(task_id) REFERENCES maintenance_tasks(task_id) \n );\n\nCREATE TABLE maintenance_logs ( \n   log_id INT PRIMARY KEY, \n   maintenance_id INT, \n   log_date DATE, \n   log_description TEXT, \n   FOREIGN KEY(maintenance_id) REFERENCES robot_maintenance(maintenance_id) \n );\n\n### STATEMENT\n\nDELETE FROM maintenance_logs WHERE log_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE robots ( \n   robot_id INT PRIMARY KEY, \n   robot_name VARCHAR(50) NOT NULL, \n   manufacturer VARCHAR(50) NOT NULL, \n   purchase_date DATE, \n   last_maintenance_date DATE \n );\n\nCREATE TABLE maintenance_schedule ( \n   schedule_id INT PRIMARY KEY, \n   robot_id INT, \n   schedule_date DATE, \n   status VARCHAR(20) NOT NULL, \n   FOREIGN KEY(robot_id) REFERENCES robots(robot_id) \n );\n\nCREATE TABLE maintenance_tasks ( \n   task_id INT PRIMARY KEY, \n   task_name VARCHAR(50) NOT NULL, \n   task_description TEXT, \n   frequency INT, \n   estimated_duration INT \n );\n\nCREATE TABLE robot_maintenance ( \n   maintenance_id INT PRIMARY KEY, \n   schedule_id INT, \n   task_id INT, \n   performed_date DATE, \n   duration_in_minutes INT, \n   FOREIGN KEY(schedule_id) REFERENCES maintenance_schedule(schedule_id), \n   FOREIGN KEY(task_id) REFERENCES maintenance_tasks(task_id) \n );\n\nCREATE TABLE maintenance_logs ( \n   log_id INT PRIMARY KEY, \n   maintenance_id INT, \n   log_date DATE, \n   log_description TEXT, \n   FOREIGN KEY(maintenance_id) REFERENCES robot_maintenance(maintenance_id) \n );\n\n### STATEMENT\n\nDELETE FROM maintenance_schedule WHERE schedule_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE robots ( \n   robot_id INT PRIMARY KEY, \n   robot_name VARCHAR(50) NOT NULL, \n   manufacturer VARCHAR(50) NOT NULL, \n   purchase_date DATE, \n   last_maintenance_date DATE \n );\n\nCREATE TABLE maintenance_schedule ( \n   schedule_id INT PRIMARY KEY, \n   robot_id INT, \n   schedule_date DATE, \n   status VARCHAR(20) NOT NULL, \n   FOREIGN KEY(robot_id) REFERENCES robots(robot_id) \n );\n\nCREATE TABLE maintenance_tasks ( \n   task_id INT PRIMARY KEY, \n   task_name VARCHAR(50) NOT NULL, \n   task_description TEXT, \n   frequency INT, \n   estimated_duration INT \n );\n\nCREATE TABLE robot_maintenance ( \n   maintenance_id INT PRIMARY KEY, \n   schedule_id INT, \n   task_id INT, \n   performed_date DATE, \n   duration_in_minutes INT, \n   FOREIGN KEY(schedule_id) REFERENCES maintenance_schedule(schedule_id), \n   FOREIGN KEY(task_id) REFERENCES maintenance_tasks(task_id) \n );\n\nCREATE TABLE maintenance_logs ( \n   log_id INT PRIMARY KEY, \n   maintenance_id INT, \n   log_date DATE, \n   log_description TEXT, \n   FOREIGN KEY(maintenance_id) REFERENCES robot_maintenance(maintenance_id) \n );\n\n### STATEMENT\n\nDELETE FROM maintenance_tasks WHERE task_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE robots ( \n   robot_id INT PRIMARY KEY, \n   robot_name VARCHAR(50) NOT NULL, \n   manufacturer VARCHAR(50) NOT NULL, \n   purchase_date DATE, \n   last_maintenance_date DATE \n );\n\nCREATE TABLE maintenance_schedule ( \n   schedule_id INT PRIMARY KEY, \n   robot_id INT, \n   schedule_date DATE, \n   status VARCHAR(20) NOT NULL, \n   FOREIGN KEY(robot_id) REFERENCES robots(robot_id) \n );\n\nCREATE TABLE maintenance_tasks ( \n   task_id INT PRIMARY KEY, \n   task_name VARCHAR(50) NOT NULL, \n   task_description TEXT, \n   frequency INT, \n   estimated_duration INT \n );\n\nCREATE TABLE robot_maintenance ( \n   maintenance_id INT PRIMARY KEY, \n   schedule_id INT, \n   task_id INT, \n   performed_date DATE, \n   duration_in_minutes INT, \n   FOREIGN KEY(schedule_id) REFERENCES maintenance_schedule(schedule_id), \n   FOREIGN KEY(task_id) REFERENCES maintenance_tasks(task_id) \n );\n\nCREATE TABLE maintenance_logs ( \n   log_id INT PRIMARY KEY, \n   maintenance_id INT, \n   log_date DATE, \n   log_description TEXT, \n   FOREIGN KEY(maintenance_id) REFERENCES robot_maintenance(maintenance_id) \n );\n\n### STATEMENT\n\nDELETE FROM maintenance_logs WHERE log_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE robots ( \n   robot_id INT PRIMARY KEY, \n   robot_name VARCHAR(50) NOT NULL, \n   manufacturer VARCHAR(50) NOT NULL, \n   purchase_date DATE, \n   last_maintenance_date DATE \n );\n\nCREATE TABLE maintenance_schedule ( \n   schedule_id INT PRIMARY KEY, \n   robot_id INT, \n   schedule_date DATE, \n   status VARCHAR(20) NOT NULL, \n   FOREIGN KEY(robot_id) REFERENCES robots(robot_id) \n );\n\nCREATE TABLE maintenance_tasks ( \n   task_id INT PRIMARY KEY, \n   task_name VARCHAR(50) NOT NULL, \n   task_description TEXT, \n   frequency INT, \n   estimated_duration INT \n );\n\nCREATE TABLE robot_maintenance ( \n   maintenance_id INT PRIMARY KEY, \n   schedule_id INT, \n   task_id INT, \n   performed_date DATE, \n   duration_in_minutes INT, \n   FOREIGN KEY(schedule_id) REFERENCES maintenance_schedule(schedule_id), \n   FOREIGN KEY(task_id) REFERENCES maintenance_tasks(task_id) \n );\n\nCREATE TABLE maintenance_logs ( \n   log_id INT PRIMARY KEY, \n   maintenance_id INT, \n   log_date DATE, \n   log_description TEXT, \n   FOREIGN KEY(maintenance_id) REFERENCES robot_maintenance(maintenance_id) \n );\n\n### STATEMENT\n\nDELETE FROM robot_maintenance WHERE performed_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE robots ( \n   robot_id INT PRIMARY KEY, \n   robot_name VARCHAR(50) NOT NULL, \n   manufacturer VARCHAR(50) NOT NULL, \n   purchase_date DATE, \n   last_maintenance_date DATE \n );\n\nCREATE TABLE maintenance_schedule ( \n   schedule_id INT PRIMARY KEY, \n   robot_id INT, \n   schedule_date DATE, \n   status VARCHAR(20) NOT NULL, \n   FOREIGN KEY(robot_id) REFERENCES robots(robot_id) \n );\n\nCREATE TABLE maintenance_tasks ( \n   task_id INT PRIMARY KEY, \n   task_name VARCHAR(50) NOT NULL, \n   task_description TEXT, \n   frequency INT, \n   estimated_duration INT \n );\n\nCREATE TABLE robot_maintenance ( \n   maintenance_id INT PRIMARY KEY, \n   schedule_id INT, \n   task_id INT, \n   performed_date DATE, \n   duration_in_minutes INT, \n   FOREIGN KEY(schedule_id) REFERENCES maintenance_schedule(schedule_id), \n   FOREIGN KEY(task_id) REFERENCES maintenance_tasks(task_id) \n );\n\nCREATE TABLE maintenance_logs ( \n   log_id INT PRIMARY KEY, \n   maintenance_id INT, \n   log_date DATE, \n   log_description TEXT, \n   FOREIGN KEY(maintenance_id) REFERENCES robot_maintenance(maintenance_id) \n );\n\n### STATEMENT\n\nDELETE FROM maintenance_schedule WHERE status = 'completed';"
]