[
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (1, 'Keyboard', 10, 25.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (2, 'Mouse', 20, 15.50)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (3, 'Monitor', 5, 199.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (4, 'CPU', 8, 299.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (5, 'RAM', 12, 79.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (6, 'GPU', 6, 499.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (7, 'SSD', 15, 129.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (8, 'HDD', 10, 99.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (9, 'Printer', 3, 149.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (10, 'Scanner', 4, 79.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (11, 'Speaker', 7, 49.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (12, 'Webcam', 2, 39.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (13, 'Microphone', 3, 29.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (14, 'Headphones', 10, 59.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (15, 'Tablet', 5, 199.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (16, 'Laptop', 8, 899.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (17, 'Smartphone', 15, 699.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (18, 'Charger', 6, 19.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (19, 'Cable', 12, 9.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (20, 'Battery', 4, 49.99)",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (1, 'Component A', 100, 50.00) ON DUPLICATE KEY UPDATE quantity = quantity + 10, price = 55.00;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (2, 'Component B', 50, 30.00) ON DUPLICATE KEY UPDATE quantity = quantity + 5, price = 32.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (3, 'Component C', 75, 35.00) ON DUPLICATE KEY UPDATE quantity = quantity + 8, price = 38.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (4, 'Component D', 200, 70.00) ON DUPLICATE KEY UPDATE quantity = quantity + 20, price = 75.00;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (5, 'Component E', 120, 45.00) ON DUPLICATE KEY UPDATE quantity = quantity + 15, price = 47.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (6, 'Component F', 90, 55.00) ON DUPLICATE KEY UPDATE quantity = quantity + 10, price = 57.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (7, 'Component G', 150, 65.00) ON DUPLICATE KEY UPDATE quantity = quantity + 12, price = 67.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (8, 'Component H', 180, 75.00) ON DUPLICATE KEY UPDATE quantity = quantity + 18, price = 77.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (9, 'Component I', 220, 80.00) ON DUPLICATE KEY UPDATE quantity = quantity + 22, price = 82.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (10, 'Component J', 50, 25.00) ON DUPLICATE KEY UPDATE quantity = quantity + 5, price = 27.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (11, 'Component K', 120, 45.00) ON DUPLICATE KEY UPDATE quantity = quantity + 15, price = 47.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (12, 'Component L', 85, 40.00) ON DUPLICATE KEY UPDATE quantity = quantity + 10, price = 42.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (13, 'Component M', 180, 70.00) ON DUPLICATE KEY UPDATE quantity = quantity + 18, price = 72.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (14, 'Component N', 200, 80.00) ON DUPLICATE KEY UPDATE quantity = quantity + 20, price = 82.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (15, 'Component O', 100, 50.00) ON DUPLICATE KEY UPDATE quantity = quantity + 10, price = 52.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (16, 'Component P', 140, 65.00) ON DUPLICATE KEY UPDATE quantity = quantity + 14, price = 67.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (17, 'Component Q', 300, 90.00) ON DUPLICATE KEY UPDATE quantity = quantity + 30, price = 92.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (18, 'Component R', 80, 40.00) ON DUPLICATE KEY UPDATE quantity = quantity + 8, price = 42.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (19, 'Component S', 150, 70.00) ON DUPLICATE KEY UPDATE quantity = quantity + 15, price = 72.50;",
  "### TABLEDATA\n\nCREATE TABLE components (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT DEFAULT 0,\n  price DECIMAL(10, 2) NOT NULL\n)\n\n### STATEMENT\n\nUPSERT INTO components (component_id, component_name, quantity, price) VALUES (20, 'Component T', 190, 85.00) ON DUPLICATE KEY UPDATE quantity = quantity + 19, price = 87.50;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (1, 'Arm', 10) ON CONFLICT (component_id) DO UPDATE SET quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (2, 'Leg', 20) ON CONFLICT (component_id) DO UPDATE SET quantity = 20;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (3, 'Head', 15) ON CONFLICT (component_id) DO UPDATE SET quantity = 15;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (4, 'Body', 5) ON CONFLICT (component_id) DO UPDATE SET quantity = 5;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (5, 'Sensor', 25) ON CONFLICT (component_id) DO UPDATE SET quantity = 25;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (6, 'CPU', 10) ON CONFLICT (component_id) DO UPDATE SET quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (7, 'Battery', 15) ON CONFLICT (component_id) DO UPDATE SET quantity = 15;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (8, 'Wheel', 30) ON CONFLICT (component_id) DO UPDATE SET quantity = 30;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (9, 'Antenna', 8) ON CONFLICT (component_id) DO UPDATE SET quantity = 8;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (10, 'Gripper', 12) ON CONFLICT (component_id) DO UPDATE SET quantity = 12;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (11, 'Camera', 18) ON CONFLICT (component_id) DO UPDATE SET quantity = 18;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (12, 'Motor', 25) ON CONFLICT (component_id) DO UPDATE SET quantity = 25;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (13, 'Speaker', 10) ON CONFLICT (component_id) DO UPDATE SET quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (14, 'Microphone', 10) ON CONFLICT (component_id) DO UPDATE SET quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (15, 'Display', 15) ON CONFLICT (component_id) DO UPDATE SET quantity = 15;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (16, 'Chassis', 5) ON CONFLICT (component_id) DO UPDATE SET quantity = 5;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (17, 'Communication Module', 20) ON CONFLICT (component_id) DO UPDATE SET quantity = 20;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (18, 'Navigation Module', 10) ON CONFLICT (component_id) DO UPDATE SET quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (19, 'Controller', 8) ON CONFLICT (component_id) DO UPDATE SET quantity = 8;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity) VALUES (20, 'Screwdriver', 30) ON CONFLICT (component_id) DO UPDATE SET quantity = 30;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_name, quantity) VALUES ('CPU', 100) ON CONFLICT (component_name) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_name, quantity) VALUES ('RAM', 200) ON CONFLICT (component_name) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_name, quantity) VALUES ('Hard Drive', 150) ON CONFLICT (component_name) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_name, quantity) VALUES ('GPU', 120) ON CONFLICT (component_name) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_name, quantity) VALUES ('Motherboard', 80) ON CONFLICT (component_name) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO component_suppliers (supplier_name, component_id, supplier_address) VALUES ('Tech Supplies Inc.', 1, '123 Main St.') ON CONFLICT (supplier_name, component_id) DO UPDATE SET supplier_address = EXCLUDED.supplier_address;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO component_suppliers (supplier_name, component_id, supplier_address) VALUES ('Components Direct', 2, '456 Elm St.') ON CONFLICT (supplier_name, component_id) DO UPDATE SET supplier_address = EXCLUDED.supplier_address;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO component_suppliers (supplier_name, component_id, supplier_address) VALUES ('Electronics Ltd.', 3, '789 Oak St.') ON CONFLICT (supplier_name, component_id) DO UPDATE SET supplier_address = EXCLUDED.supplier_address;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO component_suppliers (supplier_name, component_id, supplier_address) VALUES ('Tech Solutions', 4, '555 Pine St.') ON CONFLICT (supplier_name, component_id) DO UPDATE SET supplier_address = EXCLUDED.supplier_address;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO component_suppliers (supplier_name, component_id, supplier_address) VALUES ('Gadgets R Us', 5, '777 Maple St.') ON CONFLICT (supplier_name, component_id) DO UPDATE SET supplier_address = EXCLUDED.supplier_address;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_name, quantity) VALUES ('Keyboard', 50) ON CONFLICT (component_name) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_name, quantity) VALUES ('Mouse', 60) ON CONFLICT (component_name) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_name, quantity) VALUES ('Monitor', 40) ON CONFLICT (component_name) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_name, quantity) VALUES ('Speakers', 30) ON CONFLICT (component_name) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_name, quantity) VALUES ('Microphone', 25) ON CONFLICT (component_name) DO UPDATE SET quantity = EXCLUDED.quantity;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO component_suppliers (supplier_name, component_id, supplier_address) VALUES ('Parts Universe', 6, '999 Beach Blvd.') ON CONFLICT (supplier_name, component_id) DO UPDATE SET supplier_address = EXCLUDED.supplier_address;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO component_suppliers (supplier_name, component_id, supplier_address) VALUES ('Supply Center', 7, '333 River Rd.') ON CONFLICT (supplier_name, component_id) DO UPDATE SET supplier_address = EXCLUDED.supplier_address;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO component_suppliers (supplier_name, component_id, supplier_address) VALUES ('Circuit Mart', 8, '222 Lake Ave.') ON CONFLICT (supplier_name, component_id) DO UPDATE SET supplier_address = EXCLUDED.supplier_address;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO component_suppliers (supplier_name, component_id, supplier_address) VALUES ('Tech Depot', 9, '111 Park Lane.') ON CONFLICT (supplier_name, component_id) DO UPDATE SET supplier_address = EXCLUDED.supplier_address;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id SERIAL PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL\n);\n\nCREATE TABLE component_suppliers (\n    supplier_id SERIAL PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    component_id INT NOT NULL,\n    supplier_address VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO component_suppliers (supplier_name, component_id, supplier_address) VALUES ('Electro World', 10, '444 Forest Ave.') ON CONFLICT (supplier_name, component_id) DO UPDATE SET supplier_address = EXCLUDED.supplier_address;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (1, 'Arm', 10, 1);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (2, 'Leg', 15, 2);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (3, 'Head', 5, 1);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (4, 'Body', 20, 2);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (5, 'Battery', 8, 1);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (6, 'Sensor', 12, 2);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (7, 'Motor', 14, 1);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (8, 'Wheel', 18, 2);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (9, 'Antenna', 3, 1);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (10, 'Circuit', 7, 2);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (11, 'Power Supply', 9, 1);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (12, 'Processor', 6, 2);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (13, 'Display', 11, 1);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (14, 'Wireless Module', 16, 2);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (15, 'Chassis', 22, 1);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (16, 'Memory Card', 13, 2);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (17, 'Camera', 7, 1);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (18, 'Speaker', 5, 2);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (19, 'Switch', 10, 1);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (20, 'Joystick', 8, 2);",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (1, 'CPU', 100, 1) ON DUPLICATE KEY UPDATE quantity = quantity + 10;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (2, 'GPU', 50, 1) ON DUPLICATE KEY UPDATE quantity = quantity + 5;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (1, 'Main Warehouse', 'New York') ON DUPLICATE KEY UPDATE location = 'New York, USA';",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (2, 'Secondary Warehouse', 'Los Angeles') ON DUPLICATE KEY UPDATE location = 'CA, USA';",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO shipments (shipment_id, component_id, quantity, shipped_date, received_date, warehouse_id) VALUES (1, 1, 10, '2022-10-01', '2022-10-05', 1) ON DUPLICATE KEY UPDATE quantity = quantity + 1;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO shipments (shipment_id, component_id, quantity, shipped_date, received_date, warehouse_id) VALUES (2, 2, 20, '2022-10-02', '2022-10-06', 2) ON DUPLICATE KEY UPDATE quantity = quantity + 2;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (3, 'RAM', 200, 1) ON DUPLICATE KEY UPDATE quantity = quantity + 20;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (4, 'SSD', 150, 2) ON DUPLICATE KEY UPDATE quantity = quantity + 15;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (3, 'Backup Warehouse', 'Chicago') ON DUPLICATE KEY UPDATE location = 'IL, USA';",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (4, 'Distribution Center', 'Dallas') ON DUPLICATE KEY UPDATE location = 'TX, USA';",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO shipments (shipment_id, component_id, quantity, shipped_date, received_date, warehouse_id) VALUES (3, 3, 30, '2022-10-03', '2022-10-07', 3) ON DUPLICATE KEY UPDATE quantity = quantity + 3;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO shipments (shipment_id, component_id, quantity, shipped_date, received_date, warehouse_id) VALUES (4, 4, 40, '2022-10-04', '2022-10-08', 4) ON DUPLICATE KEY UPDATE quantity = quantity + 4;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (5, 'Motherboard', 120, 1) ON DUPLICATE KEY UPDATE quantity = quantity + 12;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (6, 'Power Supply', 90, 2) ON DUPLICATE KEY UPDATE quantity = quantity + 9;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (5, 'Warehouse A', 'Seattle') ON DUPLICATE KEY UPDATE location = 'WA, USA';",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (warehouse_id, warehouse_name, location) VALUES (6, 'Warehouse B', 'San Francisco') ON DUPLICATE KEY UPDATE location = 'CA, USA';",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO shipments (shipment_id, component_id, quantity, shipped_date, received_date, warehouse_id) VALUES (5, 5, 50, '2022-10-05', '2022-10-09', 5) ON DUPLICATE KEY UPDATE quantity = quantity + 5;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO shipments (shipment_id, component_id, quantity, shipped_date, received_date, warehouse_id) VALUES (6, 6, 60, '2022-10-06', '2022-10-10', 6) ON DUPLICATE KEY UPDATE quantity = quantity + 6;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (7, 'Cooling Fan', 80, 1) ON DUPLICATE KEY UPDATE quantity = quantity + 8;",
  "### TABLEDATA\n\nCREATE TABLE robot_components (\n    component_id INT PRIMARY KEY,\n    component_name VARCHAR(50) NOT NULL,\n    quantity INT NOT NULL,\n    warehouse_id INT\n);\n\nCREATE TABLE warehouses (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name VARCHAR(50) NOT NULL,\n    location VARCHAR(100)\n);\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    component_id INT NOT NULL,\n    quantity INT NOT NULL,\n    shipped_date DATE,\n    received_date DATE,\n    warehouse_id INT\n);\n\n### STATEMENT\n\nINSERT INTO robot_components (component_id, component_name, quantity, warehouse_id) VALUES (8, 'Cable Set', 70, 2) ON DUPLICATE KEY UPDATE quantity = quantity + 7;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO RobotComponents (component_id, component_name, quantity, price) VALUES (1, 'Robot Arm', 10, 100.00) ON DUPLICATE KEY UPDATE component_name='Robot Arm', quantity=10, price=100.00;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO RobotComponents (component_id, component_name, quantity, price) VALUES (2, 'Robot Head', 5, 50.00) ON DUPLICATE KEY UPDATE component_name='Robot Head', quantity=5, price=50.00;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO RobotComponents (component_id, component_name, quantity, price) VALUES (3, 'Robot Leg', 15, 75.00) ON DUPLICATE KEY UPDATE component_name='Robot Leg', quantity=15, price=75.00;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO RobotComponents (component_id, component_name, quantity, price) VALUES (4, 'Robot Body', 20, 200.00) ON DUPLICATE KEY UPDATE component_name='Robot Body', quantity=20, price=200.00;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO RobotComponents (component_id, component_name, quantity, price) VALUES (5, 'Robot Sensor', 8, 80.00) ON DUPLICATE KEY UPDATE component_name='Robot Sensor', quantity=8, price=80.00;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (1, 'Supplier A', 'Location A', 'suppliera@email.com') ON DUPLICATE KEY UPDATE supplier_name='Supplier A', supplier_location='Location A', contact_email='suppliera@email.com';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (2, 'Supplier B', 'Location B', 'supplierb@email.com') ON DUPLICATE KEY UPDATE supplier_name='Supplier B', supplier_location='Location B', contact_email='supplierb@email.com';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (3, 'Supplier C', 'Location C', 'supplierc@email.com') ON DUPLICATE KEY UPDATE supplier_name='Supplier C', supplier_location='Location C', contact_email='supplierc@email.com';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (4, 'Supplier D', 'Location D', 'supplierd@email.com') ON DUPLICATE KEY UPDATE supplier_name='Supplier D', supplier_location='Location D', contact_email='supplierd@email.com';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (5, 'Supplier E', 'Location E', 'suppliere@email.com') ON DUPLICATE KEY UPDATE supplier_name='Supplier E', supplier_location='Location E', contact_email='suppliere@email.com';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock, last_stock_update) VALUES (1, 1, 5, '2022-01-10') ON DUPLICATE KEY UPDATE component_id=1, quantity_in_stock=5, last_stock_update='2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock, last_stock_update) VALUES (2, 2, 3, '2022-01-15') ON DUPLICATE KEY UPDATE component_id=2, quantity_in_stock=3, last_stock_update='2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock, last_stock_update) VALUES (3, 3, 8, '2022-01-20') ON DUPLICATE KEY UPDATE component_id=3, quantity_in_stock=8, last_stock_update='2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock, last_stock_update) VALUES (4, 4, 12, '2022-01-25') ON DUPLICATE KEY UPDATE component_id=4, quantity_in_stock=12, last_stock_update='2022-01-25';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock, last_stock_update) VALUES (5, 5, 6, '2022-01-30') ON DUPLICATE KEY UPDATE component_id=5, quantity_in_stock=6, last_stock_update='2022-01-30';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ComponentOrders (order_id, component_id, order_date, quantity_ordered, delivery_status) VALUES (1, 1, '2022-02-01', 3, 'Pending') ON DUPLICATE KEY UPDATE component_id=1, order_date='2022-02-01', quantity_ordered=3, delivery_status='Pending';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ComponentOrders (order_id, component_id, order_date, quantity_ordered, delivery_status) VALUES (2, 2, '2022-02-05', 1, 'Delivered') ON DUPLICATE KEY UPDATE component_id=2, order_date='2022-02-05', quantity_ordered=1, delivery_status='Delivered';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ComponentOrders (order_id, component_id, order_date, quantity_ordered, delivery_status) VALUES (3, 3, '2022-02-10', 5, 'Processing') ON DUPLICATE KEY UPDATE component_id=3, order_date='2022-02-10', quantity_ordered=5, delivery_status='Processing';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ComponentOrders (order_id, component_id, order_date, quantity_ordered, delivery_status) VALUES (4, 4, '2022-02-15', 2, 'Shipped') ON DUPLICATE KEY UPDATE component_id=4, order_date='2022-02-15', quantity_ordered=2, delivery_status='Shipped';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ComponentOrders (order_id, component_id, order_date, quantity_ordered, delivery_status) VALUES (5, 5, '2022-02-20', 4, 'Pending') ON DUPLICATE KEY UPDATE component_id=5, order_date='2022-02-20', quantity_ordered=4, delivery_status='Pending';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotComponents (component_id, component_name, quantity, price) VALUES (1, 'Sensor', 100, 25.00) ON DUPLICATE KEY UPDATE component_name='Sensor', quantity=100, price=25.00;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotComponents (component_id, component_name, quantity, price) VALUES (2, 'Actuator', 50, 50.00) ON DUPLICATE KEY UPDATE component_name='Actuator', quantity=50, price=50.00;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotComponents (component_id, component_name, quantity, price) VALUES (3, 'Processor', 75, 100.00) ON DUPLICATE KEY UPDATE component_name='Processor', quantity=75, price=100.00;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotComponents (component_id, component_name, quantity, price) VALUES (4, 'Battery', 200, 20.00) ON DUPLICATE KEY UPDATE component_name='Battery', quantity=200, price=20.00;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotComponents (component_id, component_name, quantity, price) VALUES (5, 'Motor', 80, 75.00) ON DUPLICATE KEY UPDATE component_name='Motor', quantity=80, price=75.00;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (1, 'Tech Supplies', 'California', 'info@techsupplies.com') ON DUPLICATE KEY UPDATE supplier_name='Tech Supplies', supplier_location='California', contact_email='info@techsupplies.com';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (2, 'Robo Parts', 'New York', 'info@roboparts.com') ON DUPLICATE KEY UPDATE supplier_name='Robo Parts', supplier_location='New York', contact_email='info@roboparts.com';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (3, 'Gizmo Tech', 'Nevada', 'info@gizmotech.com') ON DUPLICATE KEY UPDATE supplier_name='Gizmo Tech', supplier_location='Nevada', contact_email='info@gizmotech.com';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (4, 'Mega Components', 'Texas', 'info@megacomponents.com') ON DUPLICATE KEY UPDATE supplier_name='Mega Components', supplier_location='Texas', contact_email='info@megacomponents.com';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (5, 'Parts R Us', 'Florida', 'info@partsrus.com') ON DUPLICATE KEY UPDATE supplier_name='Parts R Us', supplier_location='Florida', contact_email='info@partsrus.com';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock, last_stock_update) VALUES (1, 1, 50, '2022-10-01') ON DUPLICATE KEY UPDATE component_id=1, quantity_in_stock=50, last_stock_update='2022-10-01';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock, last_stock_update) VALUES (2, 2, 30, '2022-09-15') ON DUPLICATE KEY UPDATE component_id=2, quantity_in_stock=30, last_stock_update='2022-09-15';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock, last_stock_update) VALUES (3, 3, 40, '2022-09-30') ON DUPLICATE KEY UPDATE component_id=3, quantity_in_stock=40, last_stock_update='2022-09-30';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock, last_stock_update) VALUES (4, 4, 100, '2022-10-05') ON DUPLICATE KEY UPDATE component_id=4, quantity_in_stock=100, last_stock_update='2022-10-05';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock, last_stock_update) VALUES (5, 5, 60, '2022-10-09') ON DUPLICATE KEY UPDATE component_id=5, quantity_in_stock=60, last_stock_update='2022-10-09';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentOrders (order_id, component_id, order_date, quantity_ordered, delivery_status) VALUES (1, 1, '2022-10-15', 20, 'Pending') ON DUPLICATE KEY UPDATE component_id=1, order_date='2022-10-15', quantity_ordered=20, delivery_status='Pending';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentOrders (order_id, component_id, order_date, quantity_ordered, delivery_status) VALUES (2, 2, '2022-10-20', 10, 'Shipped') ON DUPLICATE KEY UPDATE component_id=2, order_date='2022-10-20', quantity_ordered=10, delivery_status='Shipped';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentOrders (order_id, component_id, order_date, quantity_ordered, delivery_status) VALUES (3, 3, '2022-10-25', 15, 'In Progress') ON DUPLICATE KEY UPDATE component_id=3, order_date='2022-10-25', quantity_ordered=15, delivery_status='In Progress';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentOrders (order_id, component_id, order_date, quantity_ordered, delivery_status) VALUES (4, 4, '2022-11-01', 30, 'Delivered') ON DUPLICATE KEY UPDATE component_id=4, order_date='2022-11-01', quantity_ordered=30, delivery_status='Delivered';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n  component_id INT PRIMARY KEY,\n  component_name VARCHAR(255) NOT NULL,\n  quantity INT NOT NULL,\n  price DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE ComponentSuppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  supplier_location VARCHAR(255) NOT NULL,\n  contact_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE ComponentInventory (\n  inventory_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  quantity_in_stock INT NOT NULL,\n  last_stock_update DATE NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n\nCREATE TABLE ComponentOrders (\n  order_id INT PRIMARY KEY,\n  component_id INT NOT NULL,\n  order_date DATE NOT NULL,\n  quantity_ordered INT NOT NULL,\n  delivery_status VARCHAR(50) NOT NULL,\n  FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentOrders (order_id, component_id, order_date, quantity_ordered, delivery_status) VALUES (5, 5, '2022-11-05', 25, 'Cancelled') ON DUPLICATE KEY UPDATE component_id=5, order_date='2022-11-05', quantity_ordered=25, delivery_status='Cancelled';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotComponents (component_id, component_name, component_type, quantity) VALUES (1, 'Robot Arm', 'Mechanical', 100) ON DUPLICATE KEY UPDATE quantity = quantity + 100;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (1, 'Supplier 1', 'Location A', 'supplier1@example.com') ON DUPLICATE KEY UPDATE supplier_location = 'Location A';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock) VALUES (1, 1, 50) ON DUPLICATE KEY UPDATE quantity_in_stock = quantity_in_stock + 50;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotAssemblies (assembly_id, assembly_name, assembly_date, total_components_used) VALUES (1, 'Assembly 1', '2022-01-01', 10) ON DUPLICATE KEY UPDATE total_components_used = total_components_used + 10;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO AssemblyWorkers (worker_id, worker_name, assembly_id) VALUES (1, 'Worker 1', 1) ON DUPLICATE KEY UPDATE worker_name = 'Worker 1';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotComponents (component_id, component_name, component_type, quantity) VALUES (2, 'Robot Leg', 'Mechanical', 80) ON DUPLICATE KEY UPDATE quantity = quantity + 80;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (2, 'Supplier 2', 'Location B', 'supplier2@example.com') ON DUPLICATE KEY UPDATE supplier_location = 'Location B';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock) VALUES (2, 2, 40) ON DUPLICATE KEY UPDATE quantity_in_stock = quantity_in_stock + 40;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotAssemblies (assembly_id, assembly_name, assembly_date, total_components_used) VALUES (2, 'Assembly 2', '2022-02-01', 15) ON DUPLICATE KEY UPDATE total_components_used = total_components_used + 15;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO AssemblyWorkers (worker_id, worker_name, assembly_id) VALUES (2, 'Worker 2', 2) ON DUPLICATE KEY UPDATE worker_name = 'Worker 2';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotComponents (component_id, component_name, component_type, quantity) VALUES (3, 'Screwdriver', 'Tool', 150) ON DUPLICATE KEY UPDATE quantity = quantity + 150;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (3, 'Supplier 3', 'Location C', 'supplier3@example.com') ON DUPLICATE KEY UPDATE supplier_location = 'Location C';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock) VALUES (3, 3, 70) ON DUPLICATE KEY UPDATE quantity_in_stock = quantity_in_stock + 70;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotAssemblies (assembly_id, assembly_name, assembly_date, total_components_used) VALUES (3, 'Assembly 3', '2022-03-01', 20) ON DUPLICATE KEY UPDATE total_components_used = total_components_used + 20;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO AssemblyWorkers (worker_id, worker_name, assembly_id) VALUES (3, 'Worker 3', 3) ON DUPLICATE KEY UPDATE worker_name = 'Worker 3';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotComponents (component_id, component_name, component_type, quantity) VALUES (4, 'Battery', 'Power', 200) ON DUPLICATE KEY UPDATE quantity = quantity + 200;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (4, 'Supplier 4', 'Location D', 'supplier4@example.com') ON DUPLICATE KEY UPDATE supplier_location = 'Location D';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock) VALUES (4, 4, 90) ON DUPLICATE KEY UPDATE quantity_in_stock = quantity_in_stock + 90;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotAssemblies (assembly_id, assembly_name, assembly_date, total_components_used) VALUES (4, 'Assembly 4', '2022-04-01', 25) ON DUPLICATE KEY UPDATE total_components_used = total_components_used + 25;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO AssemblyWorkers (worker_id, worker_name, assembly_id) VALUES (4, 'Worker 4', 4) ON DUPLICATE KEY UPDATE worker_name = 'Worker 4';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotComponents (component_id, component_name, component_type, quantity) VALUES (1, 'Arm', 'Mechanical', 100) ON DUPLICATE KEY UPDATE quantity = quantity + 50;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (1, 'TechParts Inc.', 'California', 'info@techparts.com') ON DUPLICATE KEY UPDATE supplier_location = 'San Francisco';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock) VALUES (1, 1, 500) ON DUPLICATE KEY UPDATE quantity_in_stock = quantity_in_stock + 100;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotAssemblies (assembly_id, assembly_name, assembly_date, total_components_used) VALUES (1, 'RoboTrek', '2023-01-15', 50) ON DUPLICATE KEY UPDATE total_components_used = total_components_used + 10;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO AssemblyWorkers (worker_id, worker_name, assembly_id) VALUES (1, 'John Doe', 1) ON DUPLICATE KEY UPDATE worker_name = 'Jane Smith';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotComponents (component_id, component_name, component_type, quantity) VALUES (2, 'Leg', 'Mechanical', 200) ON DUPLICATE KEY UPDATE quantity = quantity + 75;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (2, 'TechGears Ltd.', 'New York', 'info@techgears.com') ON DUPLICATE KEY UPDATE supplier_location = 'Brooklyn';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock) VALUES (2, 2, 800) ON DUPLICATE KEY UPDATE quantity_in_stock = quantity_in_stock + 150;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotAssemblies (assembly_id, assembly_name, assembly_date, total_components_used) VALUES (2, 'RoboBuild', '2023-02-20', 100) ON DUPLICATE KEY UPDATE total_components_used = total_components_used + 20;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO AssemblyWorkers (worker_id, worker_name, assembly_id) VALUES (2, 'Alice Brown', 2) ON DUPLICATE KEY UPDATE worker_name = 'Bob Miller';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotComponents (component_id, component_name, component_type, quantity) VALUES (3, 'Sensor', 'Electronic', 150) ON DUPLICATE KEY UPDATE quantity = quantity + 25;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentSuppliers (supplier_id, supplier_name, supplier_location, contact_email) VALUES (3, 'ElectroTech Solutions', 'Texas', 'info@electrotech.com') ON DUPLICATE KEY UPDATE supplier_location = 'Austin';",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComponentInventory (inventory_id, component_id, quantity_in_stock) VALUES (3, 3, 600) ON DUPLICATE KEY UPDATE quantity_in_stock = quantity_in_stock + 75;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO RobotAssemblies (assembly_id, assembly_name, assembly_date, total_components_used) VALUES (3, 'RoboSmart', '2023-03-25', 75) ON DUPLICATE KEY UPDATE total_components_used = total_components_used + 15;",
  "### TABLEDATA\n\nCREATE TABLE RobotComponents (\n   component_id INT PRIMARY KEY,\n   component_name VARCHAR(50),\n   component_type VARCHAR(50),\n   quantity INT\n);\n\nCREATE TABLE ComponentSuppliers (\n   supplier_id INT PRIMARY KEY,\n   supplier_name VARCHAR(50),\n   supplier_location VARCHAR(100),\n   contact_email VARCHAR(50)\n);\n\nCREATE TABLE ComponentInventory (\n   inventory_id INT PRIMARY KEY,\n   component_id INT,\n   quantity_in_stock INT,\n   FOREIGN KEY (component_id) REFERENCES RobotComponents(component_id)\n);\n\nCREATE TABLE RobotAssemblies (\n   assembly_id INT PRIMARY KEY,\n   assembly_name VARCHAR(50),\n   assembly_date DATE,\n   total_components_used INT\n);\n\nCREATE TABLE AssemblyWorkers (\n   worker_id INT PRIMARY KEY,\n   worker_name VARCHAR(50),\n   assembly_id INT,\n   FOREIGN KEY (assembly_id) REFERENCES RobotAssemblies(assembly_id)\n);\n\n### STATEMENT\n\nINSERT INTO AssemblyWorkers (worker_id, worker_name, assembly_id) VALUES (3, 'Eve Johnson', 3) ON DUPLICATE KEY UPDATE worker_name = 'Alex Green';"
]