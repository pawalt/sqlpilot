[
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data;",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT robot_id, calibration_date, calibration_values FROM robot_calibration_data;",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT robot_id FROM robot_calibration_data;",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT calibration_date FROM robot_calibration_data;",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT calibration_values FROM robot_calibration_data;",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data WHERE robot_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data WHERE calibration_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data ORDER BY calibration_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data WHERE calibration_values ->> 'type' = 'calibrated';",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data WHERE calibration_values -> 'calibrated' ->> 'value' = 'true';",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data WHERE calibration_values @> '{\"calibrated\": {\"value\": true}}';",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data WHERE calibration_values -> 'latest_calibration' ->> 'date' IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data WHERE calibration_values -> 'latest_calibration_values' -> 'result' ->> 'status' = 'pass';",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data WHERE calibration_values @> '{\"latest_calibration_values\": {\"result\": {\"status\": \"pass\"}}}';",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data WHERE calibration_values -> 'latest_calibration_values' ->> 'passed_tests' = 'all';",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data WHERE calibration_values @> '{\"latest_calibration_values\": {\"passed_tests\": \"all\"}}';",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data WHERE calibration_values -> 'latest_calibration_values' -> 'result' ->> 'status' = 'fail';",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data WHERE calibration_values @> '{\"latest_calibration_values\": {\"result\": {\"status\": \"fail\"}}}'",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data WHERE robot_id = 1 AND calibration_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT robot_id, jsonb_array_elements(calibration_values) AS calibration_value FROM robot_calibration_data WHERE calibration_date >= '2022-01-01' AND calibration_values -> 'sensor' = 'temperature';",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT robot_id, COUNT(*) AS calibration_count FROM robot_calibration_data WHERE robot_id IN (1, 2, 3) GROUP BY robot_id;",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT DISTINCT robot_id FROM robot_calibration_data WHERE calibration_values -> 'sensor' = 'pressure' ORDER BY calibration_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT robot_id, MAX(calibration_date) AS latest_calibration_date FROM robot_calibration_data WHERE robot_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT robot_id, jsonb_agg(calibration_values) AS all_calibration_values FROM robot_calibration_data GROUP BY robot_id;",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT,\n  calibration_date TIMESTAMP,\n  calibration_values JSONB\n);\n\n### STATEMENT\n\nSELECT robot_id, AVG((calibration_values -> 'pressure')::float) AS avg_pressure FROM robot_cali...",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT * FROM calibration_data;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, calibration_date FROM calibration_data;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT x_axis_calibration, y_axis_calibration, z_axis_calibration FROM calibration_data;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, calibration_date, x_axis_calibration FROM calibration_data WHERE robot_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT * FROM calibration_logs;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, log_date FROM calibration_logs;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT log_description FROM calibration_logs WHERE robot_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT log_id, log_date, log_description FROM calibration_logs WHERE log_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT * FROM calibration_data JOIN calibration_logs ON calibration_data.robot_id = calibration_logs.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT calibration_data.robot_id, calibration_data.calibration_date, calibration_logs.log_date, calibration_logs.log_description FROM calibration_data JOIN calibration_logs ON calibration_data.robot_id = calibration_logs.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT calibration_data.robot_id, calibration_data.calibration_date, calibration_data.x_axis_calibration, calibration_logs.log_date, calibration_logs.log_description FROM calibration_data JOIN calibration_logs ON calibration_data.robot_id = calibration_logs.robot_id WHERE calibration_data.robot_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT * FROM calibration_data WHERE calibration_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT AVG(x_axis_calibration), MAX(y_axis_calibration), MIN(z_axis_calibration) FROM calibration_data;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, COUNT(log_id) FROM calibration_logs GROUP BY robot_id;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT log_id, log_description FROM calibration_logs WHERE log_description LIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT DISTINCT robot_id FROM calibration_data;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT * FROM calibration_data ORDER BY calibration_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT * FROM calibration_logs ORDER BY log_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM calibration_data;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT SUM(x_axis_calibration) FROM calibration_data;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT * FROM calibration_data WHERE robot_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, calibration_date FROM calibration_data WHERE x_axis_calibration > 0.5 AND y_axis_calibration < 0.2;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT * FROM calibration_logs WHERE robot_id = 2 AND log_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, MAX(calibration_date) AS latest_calibration FROM calibration_data GROUP BY robot_id;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, AVG(x_axis_calibration) AS avg_x_calibration FROM calibration_data GROUP BY robot_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT calibration_data.robot_id, calibration_date, log_date FROM calibration_data LEFT JOIN calibration_logs ON calibration_data.robot_id = calibration_logs.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT a.robot_id, a.calibration_date, l.log_date FROM calibration_data a LEFT JOIN calibration_logs l ON a.robot_id = l.robot_id AND l.log_date >= a.calibration_date;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT DISTINCT c.robot_id, c.calibration_date, c.x_axis_calibration FROM calibration_data c JOIN calibration_logs l ON c.robot_id = l.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, COUNT(log_id) AS total_logs FROM calibration_data LEFT JOIN calibration_logs ON calibration_data.robot_id = calibration_logs.robot_id GROUP BY robot_id;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, MAX(calibration_date) - MIN(calibration_date) AS calibration_period FROM calibration_data GROUP BY robot_id;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, log_description FROM calibration_logs WHERE log_description LIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, COUNT(log_id) AS error_logs_count FROM calibration_logs WHERE log_description LIKE '%error%' GROUP BY robot_id;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, AVG(x_axis_calibration) AS avg_x_calibration FROM calibration_data WHERE calibration_date BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY robot_id;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, calibration_date FROM calibration_data WHERE x_axis_calibration > y_axis_calibration AND x_axis_calibration > z_axis_calibration;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, AVG(x_axis_calibration) AS avg_x_calibration, AVG(y_axis_calibration) AS avg_y_calibration FROM calibration_data WHERE calibration_date < '2022-08-01' GROUP BY robot_id HAVING COUNT(*) >= 2;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, calibration_date FROM calibration_data WHERE x_axis_calibration > 0.5 AND y_axis_calibration < 0.2 OR z_axis_calibration > 0.3;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, calibration_date FROM calibration_data WHERE DAYOFWEEK(calibration_date) = 1;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, calibration_date FROM calibration_data WHERE MONTH(calibration_date) = 6 AND YEAR(calibration_date) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, calibration_date FROM calibration_data WHERE DATE_FORMAT(calibration_date, '%Y-%m') = '2022-07';",
  "### TABLEDATA\n\nCREATE TABLE calibration_data ( \n    robot_id INT PRIMARY KEY, \n    calibration_date DATE, \n    x_axis_calibration FLOAT, \n    y_axis_calibration FLOAT, \n    z_axis_calibration FLOAT \n); \n\nCREATE TABLE calibration_logs ( \n    log_id INT PRIMARY KEY, \n    robot_id INT, \n    log_date TIMESTAMP, \n    log_description TEXT \n);\n\n### STATEMENT\n\nSELECT robot_id, AVG(x_axis_calibration) AS avg_x_calibration FROM calibration_data GROUP BY robot_id ORDER BY avg_x_calibration DESC;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotCalibrationData;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_name, calibration_date FROM RobotCalibrationData;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT id, calibration_date, calibration_result FROM RobotCalibrationData WHERE robot_name = 'Robot1';",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotCalibrationHistory;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT previous_calibration_date, new_calibration_date, action_taken FROM RobotCalibrationHistory WHERE calibration_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotCalibrationLogs;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT calibration_id, log_timestamp, log_message FROM RobotCalibrationLogs;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotCalibrationData WHERE calibration_result > 0.9;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotCalibrationHistory WHERE action_taken LIKE '%adjusted%';",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_name, calibration_date FROM RobotCalibrationData WHERE calibration_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT id, calibration_result FROM RobotCalibrationData WHERE calibration_result < 0.5;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotCalibrationLogs WHERE log_timestamp > '2022-08-01';",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT log_id, log_timestamp, log_message FROM RobotCalibrationLogs WHERE log_message LIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(calibration_result) AS max_calibration_result FROM RobotCalibrationData;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(calibration_result) AS avg_calibration_result FROM RobotCalibrationData;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_logs FROM RobotCalibrationLogs;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT calibration_id) AS unique_calibrations FROM RobotCalibrationLogs;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_name, COUNT(*) AS total_calibrations FROM RobotCalibrationData GROUP BY robot_name;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_name, AVG(calibration_result) AS avg_calibration_result FROM RobotCalibrationData GROUP BY robot_name;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_name, MAX(calibration_result) AS max_calibration_result FROM RobotCalibrationData GROUP BY robot_name;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotCalibrationData WHERE calibration_result > 0.9;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_name, calibration_date FROM RobotCalibrationData WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_name, calibration_date, calibration_result FROM RobotCalibrationData WHERE robot_name = 'Robot A';",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM RobotCalibrationHistory WHERE action_taken LIKE '%calibration%';",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(calibration_result) FROM RobotCalibrationData;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotCalibrationData ORDER BY calibration_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_name, COUNT(*) FROM RobotCalibrationData GROUP BY robot_name;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT rc.robot_name, rcl.log_timestamp, rcl.log_message FROM RobotCalibrationData rc JOIN RobotCalibrationLogs rcl ON rc.id = rcl.calibration_id;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT SUM(calibration_result) FROM RobotCalibrationData;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT rc.robot_name, rch.previous_calibration_date, rch.new_calibration_date FROM RobotCalibrationData rc JOIN RobotCalibrationHistory rch ON rc.id = rch.calibration_id;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(calibration_date), MIN(calibration_date) FROM RobotCalibrationData;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotCalibrationHistory WHERE previous_calibration_date IS NOT NULL AND new_calibration_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(calibration_result) FROM RobotCalibrationData WHERE robot_name = 'Robot B';",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT rc.robot_name, rch.action_taken FROM RobotCalibrationData rc LEFT JOIN RobotCalibrationHistory rch ON rc.id = rch.calibration_id;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_name, COUNT(*) FROM RobotCalibrationHistory GROUP BY robot_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_name, calibration_date, calibration_result FROM RobotCalibrationData WHERE calibration_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT rc.robot_name FROM RobotCalibrationData rc INNER JOIN RobotCalibrationHistory rch ON rc.id = rch.calibration_id INNER JOIN RobotCalibrationLogs rcl ON rc.id = rcl.calibration_id;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_name, AVG(calibration_result) FROM RobotCalibrationData GROUP BY robot_name;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT robot_name) FROM RobotCalibrationData;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibrationData (\n    id INT PRIMARY KEY,\n    robot_name VARCHAR(255),\n    calibration_date DATE,\n    calibration_result FLOAT\n);\n\nCREATE TABLE RobotCalibrationHistory (\n    history_id INT PRIMARY KEY,\n    calibration_id INT,\n    previous_calibration_date DATE,\n    new_calibration_date DATE,\n    action_taken VARCHAR(255)\n);\n\nCREATE TABLE RobotCalibrationLogs (\n    log_id INT PRIMARY KEY,\n    calibration_id INT,\n    log_timestamp TIMESTAMP,\n    log_message TEXT\n);\n\n### STATEMENT\n\nSELECT rc.robot_name, rcl.log_timestamp FROM RobotCalibrationData rc JOIN RobotCalibrationLogs rcl ON rc.id = rcl.calibration_id ORDER BY rcl.log_timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data WHERE robot_id = 1",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT calibration_date, calibration_value FROM robot_calibration_data",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM robot_model WHERE manufacturer = 'ABC Company'",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT model_name FROM robot_model WHERE production_date > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM calibration_engineer WHERE engineer_name LIKE '%John%'",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT engineer_email FROM calibration_engineer WHERE engineer_phone = '1234567890'",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT robot_id, calibration_date FROM calibration_history WHERE result_status = 'Passed'",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM robot_status WHERE status = 'Active'",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT robot_id, status, last_update FROM robot_status WHERE last_update BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT rcd.calibration_value, cm.model_name FROM robot_calibration_data rcd JOIN robot_model cm ON rcd.robot_id = cm.model_id",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT rcd.calibration_value, ce.engineer_name FROM robot_calibration_data rcd JOIN calibration_engineer ce ON rcd.calibration_date = ce.engineer_id",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT ch.history_id, rs.status FROM calibration_history ch JOIN robot_status rs ON ch.robot_id = rs.robot_id",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM robot_status rs LEFT JOIN calibration_history ch ON rs.robot_id = ch.robot_id",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM robot_calibration_data",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT robot_id, calibration_date, calibration_value FROM robot_calibration_data",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM robot_model",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT model_id, model_name, manufacturer FROM robot_model",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM calibration_engineer",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT engineer_id, engineer_name, engineer_email FROM calibration_engineer",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM calibration_history",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT history_id, robot_id, calibration_date, calibration_engineer_id, result_status FROM calibration_history",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM robot_status",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT robot_id, status, last_update FROM robot_status",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT robot_id, calibration_date, calibration_value, model_name, manufacturer, engineer_name, engineer_email, result_status, status FROM robot_calibration_data, robot_model, calibration_engineer, calibration_history, robot_status WHERE robot_calibration_data.robot_id = calibration_history.robot_id AND robot_calibration_data.robot_id = robot_status.robot_id AND calibration_history.calibration_engineer_id = calibration_engineer.engineer_id",
  "### TABLEDATA\n\nCREATE TABLE robot_calibration_data (\n  robot_id INT PRIMARY KEY,\n  calibration_date DATE,\n  calibration_type VARCHAR(50),\n  calibration_value FLOAT\n)\n\nCREATE TABLE robot_model (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(50),\n  manufacturer VARCHAR(50),\n  production_date DATE\n)\n\nCREATE TABLE calibration_engineer (\n  engineer_id INT PRIMARY KEY,\n  engineer_name VARCHAR(50),\n  engineer_email VARCHAR(50),\n  engineer_phone VARCHAR(15)\n)\n\nCREATE TABLE calibration_history (\n  history_id INT PRIMARY KEY,\n  robot_id INT,\n  calibration_date DATE,\n  calibration_engineer_id INT,\n  result_status VARCHAR(50)\n)\n\nCREATE TABLE robot_status (\n  robot_id INT PRIMARY KEY,\n  status VARCHAR(50),\n  last_update TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT robot_id, status FROM robot_status UNION SELECT robot_id, calibration_date FROM robot_calibration_data ORDER BY status ASC, calibration_date DESC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotCalibration;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT calibration_date, calibration_result FROM RobotCalibration;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotParts;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, part_type FROM RobotParts;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotMaintenance;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT maintenance_date, maintenance_description FROM RobotMaintenance;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotLogs;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT log_date, log_message FROM RobotLogs;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotErrors;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT error_date, error_message FROM RobotErrors;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_id FROM RobotCalibration;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_id, calibration_date FROM RobotCalibration;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_id FROM RobotParts;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT part_name FROM RobotParts;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_id FROM RobotMaintenance;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT maintenance_id, maintenance_date FROM RobotMaintenance;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_id FROM RobotLogs;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT log_id, log_date, log_message FROM RobotLogs;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_id FROM RobotErrors;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT error_id, error_date FROM RobotErrors;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotCalibration WHERE calibration_result = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, part_type FROM RobotParts WHERE part_type = 'Arm';",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_id, maintenance_date, maintenance_description FROM RobotMaintenance WHERE maintenance_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_id, log_date, log_message FROM RobotLogs WHERE robot_id = 123 ORDER BY log_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT error_id, robot_id, error_date, error_message FROM RobotErrors WHERE error_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotCalibration JOIN RobotParts ON RobotCalibration.robot_id = RobotParts.part_id;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotCalibration LEFT JOIN RobotMaintenance ON RobotCalibration.robot_id = RobotMaintenance.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT RobotLogs.robot_id, log_date, log_message, maintenance_description FROM RobotLogs JOIN RobotMaintenance ON RobotLogs.robot_id = RobotMaintenance.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, part_type, calibration_date, calibration_result FROM RobotParts JOIN RobotCalibration ON RobotParts.part_id = RobotCalibration.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT RobotErrors.robot_id, error_date, error_message, part_name, part_type FROM RobotErrors LEFT JOIN RobotParts ON RobotErrors.robot_id = RobotParts.part_id;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT RobotMaintenance.robot_id, maintenance_date, maintenance_description, log_message FROM RobotMaintenance JOIN RobotLogs ON RobotMaintenance.robot_id = RobotLogs.robot_id;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotCalibration WHERE calibration_result = TRUE ORDER BY calibration_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, part_type FROM RobotParts WHERE part_type = 'Leg' ORDER BY part_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_id, maintenance_date, maintenance_description FROM RobotMaintenance WHERE maintenance_date >= '2022-01-01' AND maintenance_date <= '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_id, log_date, log_message FROM RobotLogs WHERE robot_id = 456 AND log_date >= '2022-03-01' AND log_date <= '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT error_id, robot_id, error_date, error_message FROM RobotErrors WHERE error_date > '2022-01-01' AND error_date < '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, part_type, calibration_date, calibration_result FROM RobotParts JOIN RobotCalibration ON RobotParts.part_id = RobotCalibration.robot_id WHERE calibration_result = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT RobotMaintenance.robot_id, maintenance_date, maintenance_description, log_message FROM RobotMaintenance JOIN RobotLogs ON RobotMaintenance.robot_id = RobotLogs.robot_id WHERE maintenance_date >= '2022-01-01' ORDER BY maintenance_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM RobotCalibration WHERE calibration_result = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT part_name, part_type FROM RobotParts WHERE part_type = 'Body' ORDER BY part_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE RobotCalibration (\n   robot_id INT PRIMARY KEY,\n   calibration_date DATE,\n   calibration_result BOOLEAN\n);\n\nCREATE TABLE RobotParts (\n   part_id INT PRIMARY KEY,\n   part_name TEXT,\n   part_type TEXT\n);\n\nCREATE TABLE RobotMaintenance (\n   maintenance_id INT PRIMARY KEY,\n   robot_id INT,\n   maintenance_date DATE,\n   maintenance_description TEXT\n);\n\nCREATE TABLE RobotLogs (\n   log_id INT PRIMARY KEY,\n   robot_id INT,\n   log_date TIMESTAMP,\n   log_message TEXT\n);\n\nCREATE TABLE RobotErrors (\n   error_id INT PRIMARY KEY,\n   robot_id INT,\n   error_date TIMESTAMP,\n   error_message TEXT\n);\n\n### STATEMENT\n\nSELECT robot_id, maintenance_date, maintenance_description FROM RobotMaintenance WHERE maintenance_date >= '2022-07-01';"
]