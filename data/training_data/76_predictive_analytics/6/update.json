[
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE Loan_Default_Risk SET credit_score = 700 WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE Loan_Default_Risk SET employment_status = 'Employed' WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE Loan_Default_Risk SET default_risk = TRUE WHERE id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE Loan_Default_Risk SET loan_amount = loan_amount * 1.05 WHERE income > 50000 AND employment_status = 'Employed';",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE Loan_Default_Risk SET loan_term = CASE WHEN credit_score < 600 THEN 12 WHEN credit_score >= 600 AND credit_score < 700 THEN 24 ELSE 36 END;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE Loan_Default_Risk SET default_risk = TRUE WHERE credit_score < 550 OR (income < 30000 AND loan_amount > 5000);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPDATE loan_data SET loan_status = 'Approved' WHERE customer_id = 12345;",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPDATE financial_data SET income = 60000.00 WHERE customer_id = 12345;",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPDATE loan_data SET loan_amount = 15000.00 WHERE customer_id = 54321;",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPDATE loan_data SET loan_amount = loan_amount * 1.1 WHERE customer_id = 123",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPDATE financial_data SET expenses = expenses + 500 WHERE customer_id = 456",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPDATE loan_data ld JOIN financial_data fd ON ld.customer_id = fd.customer_id SET ld.loan_amount = ld.loan_amount + (fd.income - fd.expenses) WHERE ld.customer_id = 789",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPDATE customers SET credit_score = 750 WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPDATE loans SET loan_status = 'Approved' WHERE loan_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPDATE transactions SET transaction_amount = 500.00 WHERE transaction_id = 201;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPDATE customers SET credit_score = 750 WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPDATE loans SET loan_status = 'approved' WHERE loan_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPDATE transactions SET transaction_amount = 500.00 WHERE transaction_id = 201;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nUPDATE Customers SET credit_score = 700 WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nUPDATE Loans SET interest_rate = 4.5 WHERE loan_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nUPDATE PaymentHistory SET payment_amount = 500.00 WHERE payment_id = 201;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nUPDATE Customers SET credit_score = 750 WHERE customer_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nUPDATE Loans SET interest_rate = 5.5, loan_term = 36 WHERE loan_id = 201;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nUPDATE PaymentHistory SET payment_amount = 1500 WHERE payment_id = 301;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Applicants SET credit_score = 750 WHERE applicant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Loans SET loan_amount = 15000.00 WHERE loan_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE CreditHistory SET credit_utilization = 30.50 WHERE applicant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Applicants SET credit_score = 750, income = 60000 WHERE applicant_id = 12345;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Loans SET loan_amount = 25000, interest_rate = 4.5 WHERE loan_id = 54321;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE CreditHistory SET payment_history = 'No late payments in the last 12 months' WHERE applicant_id = 12345;"
]