[
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (1, 'John Doe', 700, 10000.00, 'Employed', 50000.00, 12, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (2, 'Jane Smith', 650, 15000.00, 'Self-Employed', 60000.00, 24, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (3, 'Sarah Johnson', 720, 12000.00, 'Unemployed', 30000.00, 18, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (4, 'Mike Brown', 680, 20000.00, 'Retired', 40000.00, 36, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (5, 'Emily Davis', 700, 8000.00, 'Employed', 55000.00, 12, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (6, 'Robert Wilson', 630, 10000.00, 'Self-Employed', 70000.00, 24, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (7, 'Maria Lopez', 710, 15000.00, 'Employed', 45000.00, 18, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (8, 'Chris Evans', 690, 18000.00, 'Self-Employed', 60000.00, 36, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (9, 'Jessica Lee', 730, 9000.00, 'Employed', 65000.00, 12, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (10, 'Andrew Thompson', 640, 18000.00, 'Unemployed', 35000.00, 24, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (11, 'Karen Taylor', 700, 10000.00, 'Employed', 50000.00, 12, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (12, 'Matthew Clark', 620, 15000.00, 'Self-Employed', 60000.00, 24, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (13, 'Laura Martinez', 720, 12000.00, 'Employed', 55000.00, 18, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (14, 'James Rodriguez', 670, 20000.00, 'Retired', 40000.00, 36, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (15, 'Olivia White', 690, 8000.00, 'Employed', 45000.00, 12, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (16, 'Samuel Wong', 650, 10000.00, 'Self-Employed', 70000.00, 24, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (17, 'Sophia Young', 710, 15000.00, 'Employed', 60000.00, 18, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (18, 'Ryan Adams', 680, 18000.00, 'Self-Employed', 65000.00, 36, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (19, 'Sophie Baker', 740, 9000.00, 'Employed', 35000.00, 12, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nUPSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (20, 'Justin Cook', 630, 18000.00, 'Unemployed', 55000.00, 24, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (1, 'John Doe', 750, 50000.00, 'Employed', 60000.00, 36, FALSE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'John Doe', credit_score = 750, loan_amount = 50000.00, employment_status = 'Employed', income = 60000.00, loan_term = 36, default_risk = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (2, 'Jane Smith', 700, 40000.00, 'Unemployed', 30000.00, 24, TRUE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Jane Smith', credit_score = 700, loan_amount = 40000.00, employment_status = 'Unemployed', income = 30000.00, loan_term = 24, default_risk = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (3, 'Alice Johnson', 720, 60000.00, 'Employed', 80000.00, 48, TRUE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Alice Johnson', credit_score = 720, loan_amount = 60000.00, employment_status = 'Employed', income = 80000.00, loan_term = 48, default_risk = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (4, 'Bob Brown', 680, 45000.00, 'Self-Employed', 70000.00, 36, FALSE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Bob Brown', credit_score = 680, loan_amount = 45000.00, employment_status = 'Self-Employed', income = 70000.00, loan_term = 36, default_risk = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (5, 'Eve White', 710, 55000.00, 'Unemployed', 35000.00, 24, TRUE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Eve White', credit_score = 710, loan_amount = 55000.00, employment_status = 'Unemployed', income = 35000.00, loan_term = 24, default_risk = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (6, 'Tom Grey', 730, 48000.00, 'Employed', 65000.00, 36, FALSE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Tom Grey', credit_score = 730, loan_amount = 48000.00, employment_status = 'Employed', income = 65000.00, loan_term = 36, default_risk = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (7, 'Emily Black', 680, 60000.00, 'Self-Employed', 75000.00, 48, TRUE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Emily Black', credit_score = 680, loan_amount = 60000.00, employment_status = 'Self-Employed', income = 75000.00, loan_term = 48, default_risk = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (8, 'Chris Brown', 720, 53000.00, 'Employed', 70000.00, 24, TRUE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Chris Brown', credit_score = 720, loan_amount = 53000.00, employment_status = 'Employed', income = 70000.00, loan_term = 24, default_risk = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (9, 'Sarah White', 690, 47000.00, 'Unemployed', 40000.00, 36, FALSE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Sarah White', credit_score = 690, loan_amount = 47000.00, employment_status = 'Unemployed', income = 40000.00, loan_term = 36, default_risk = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (10, 'Mark Johnson', 740, 58000.00, 'Employed', 85000.00, 48, TRUE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Mark Johnson', credit_score = 740, loan_amount = 58000.00, employment_status = 'Employed', income = 85000.00, loan_term = 48, default_risk = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (11, 'Laura Green', 700, 51000.00, 'Unemployed', 38000.00, 24, FALSE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Laura Green', credit_score = 700, loan_amount = 51000.00, employment_status = 'Unemployed', income = 38000.00, loan_term = 24, default_risk = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (12, 'Jake Brown', 710, 60000.00, 'Self-Employed', 72000.00, 36, TRUE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Jake Brown', credit_score = 710, loan_amount = 60000.00, employment_status = 'Self-Employed', income = 72000.00, loan_term = 36, default_risk = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (13, 'Megan White', 730, 49000.00, 'Employed', 67000.00, 24, FALSE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Megan White', credit_score = 730, loan_amount = 49000.00, employment_status = 'Employed', income = 67000.00, loan_term = 24, default_risk = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (14, 'Ryan Grey', 690, 56000.00, 'Unemployed', 42000.00, 48, TRUE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Ryan Grey', credit_score = 690, loan_amount = 56000.00, employment_status = 'Unemployed', income = 42000.00, loan_term = 48, default_risk = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (15, 'Lily Black', 720, 52000.00, 'Employed', 69000.00, 36, TRUE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Lily Black', credit_score = 720, loan_amount = 52000.00, employment_status = 'Employed', income = 69000.00, loan_term = 36, default_risk = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (16, 'Alex Brown', 740, 61000.00, 'Self-Employed', 77000.00, 24, FALSE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Alex Brown', credit_score = 740, loan_amount = 61000.00, employment_status = 'Self-Employed', income = 77000.00, loan_term = 24, default_risk = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (17, 'Olivia White', 750, 53000.00, 'Employed', 72000.00, 48, TRUE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Olivia White', credit_score = 750, loan_amount = 53000.00, employment_status = 'Employed', income = 72000.00, loan_term = 48, default_risk = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (18, 'Max Johnson', 710, 55000.00, 'Unemployed', 45000.00, 36, FALSE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Max Johnson', credit_score = 710, loan_amount = 55000.00, employment_status = 'Unemployed', income = 45000.00, loan_term = 36, default_risk = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (19, 'Sophie Green', 730, 59000.00, 'Employed', 78000.00, 24, TRUE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Sophie Green', credit_score = 730, loan_amount = 59000.00, employment_status = 'Employed', income = 78000.00, loan_term = 24, default_risk = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Loan_Default_Risk (\n  id INT PRIMARY KEY,\n  applicant_name VARCHAR(255),\n  credit_score INT,\n  loan_amount DECIMAL,\n  employment_status VARCHAR(50),\n  income DECIMAL,\n  loan_term INT,\n  default_risk BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO Loan_Default_Risk (id, applicant_name, credit_score, loan_amount, employment_status, income, loan_term, default_risk) VALUES (20, 'Tyler Brown', 700, 47000.00, 'Self-Employed', 70000.00, 48, FALSE) ON CONFLICT (id) DO UPDATE SET applicant_name = 'Tyler Brown', credit_score = 700, loan_amount = 47000.00, employment_status = 'Self-Employed', income = 70000.00, loan_term = 48, default_risk = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (1,750,10000.00,'approved') ON DUPLICATE KEY UPDATE credit_score=VALUES(credit_score), loan_amount=VALUES(loan_amount), loan_status=VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (2,680,15000.00,'pending') ON DUPLICATE KEY UPDATE credit_score=VALUES(credit_score), loan_amount=VALUES(loan_amount), loan_status=VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (3,800,20000.00,'denied') ON DUPLICATE KEY UPDATE credit_score=VALUES(credit_score), loan_amount=VALUES(loan_amount), loan_status=VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (4,720,12000.00,'approved') ON DUPLICATE KEY UPDATE credit_score=VALUES(credit_score), loan_amount=VALUES(loan_amount), loan_status=VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (5,700,18000.00,'pending') ON DUPLICATE KEY UPDATE credit_score=VALUES(credit_score), loan_amount=VALUES(loan_amount), loan_status=VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (6,760,14000.00,'approved') ON DUPLICATE KEY UPDATE credit_score=VALUES(credit_score), loan_amount=VALUES(loan_amount), loan_status=VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (7,690,16000.00,'pending') ON DUPLICATE KEY UPDATE credit_score=VALUES(credit_score), loan_amount=VALUES(loan_amount), loan_status=VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (8,780,25000.00,'approved') ON DUPLICATE KEY UPDATE credit_score=VALUES(credit_score), loan_amount=VALUES(loan_amount), loan_status=VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (9,730,11000.00,'denied') ON DUPLICATE KEY UPDATE credit_score=VALUES(credit_score), loan_amount=VALUES(loan_amount), loan_status=VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (10,770,22000.00,'pending') ON DUPLICATE KEY UPDATE credit_score=VALUES(credit_score), loan_amount=VALUES(loan_amount), loan_status=VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO financial_data (customer_id, income, expenses, savings) VALUES (1,50000.00,30000.00,20000.00) ON DUPLICATE KEY UPDATE income=VALUES(income), expenses=VALUES(expenses), savings=VALUES(savings);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO financial_data (customer_id, income, expenses, savings) VALUES (2,60000.00,35000.00,25000.00) ON DUPLICATE KEY UPDATE income=VALUES(income), expenses=VALUES(expenses), savings=VALUES(savings);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO financial_data (customer_id, income, expenses, savings) VALUES (3,70000.00,40000.00,30000.00) ON DUPLICATE KEY UPDATE income=VALUES(income), expenses=VALUES(expenses), savings=VALUES(savings);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO financial_data (customer_id, income, expenses, savings) VALUES (4,55000.00,32000.00,23000.00) ON DUPLICATE KEY UPDATE income=VALUES(income), expenses=VALUES(expenses), savings=VALUES(savings);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO financial_data (customer_id, income, expenses, savings) VALUES (5,65000.00,38000.00,27000.00) ON DUPLICATE KEY UPDATE income=VALUES(income), expenses=VALUES(expenses), savings=VALUES(savings);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO financial_data (customer_id, income, expenses, savings) VALUES (6,48000.00,29000.00,19000.00) ON DUPLICATE KEY UPDATE income=VALUES(income), expenses=VALUES(expenses), savings=VALUES(savings);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO financial_data (customer_id, income, expenses, savings) VALUES (7,75000.00,45000.00,30000.00) ON DUPLICATE KEY UPDATE income=VALUES(income), expenses=VALUES(expenses), savings=VALUES(savings);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO financial_data (customer_id, income, expenses, savings) VALUES (8,60000.00,35000.00,25000.00) ON DUPLICATE KEY UPDATE income=VALUES(income), expenses=VALUES(expenses), savings=VALUES(savings);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO financial_data (customer_id, income, expenses, savings) VALUES (9,56000.00,33000.00,23000.00) ON DUPLICATE KEY UPDATE income=VALUES(income), expenses=VALUES(expenses), savings=VALUES(savings);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO financial_data (customer_id, income, expenses, savings) VALUES (10,62000.00,36000.00,26000.00) ON DUPLICATE KEY UPDATE income=VALUES(income), expenses=VALUES(expenses), savings=VALUES(savings);",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (1, 700, 10000.00, 'approved') ON CONFLICT (customer_id) DO UPDATE SET credit_score = 720, loan_amount = 12000.00, loan_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (2, 650, 15000.00, 'pending') ON CONFLICT (customer_id) DO UPDATE SET credit_score = 670, loan_amount = 16000.00, loan_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (3, 720, 20000.00, 'rejected') ON CONFLICT (customer_id) DO UPDATE SET credit_score = 700, loan_amount = 18000.00, loan_status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (4, 680, 12000.00, 'approved') ON CONFLICT (customer_id) DO UPDATE SET credit_score = 700, loan_amount = 14000.00, loan_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (5, 750, 25000.00, 'pending') ON CONFLICT (customer_id) DO UPDATE SET credit_score = 770, loan_amount = 27000.00, loan_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (6, 690, 18000.00, 'rejected') ON CONFLICT (customer_id) DO UPDATE SET credit_score = 700, loan_amount = 20000.00, loan_status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (7, 720, 21000.00, 'approved') ON CONFLICT (customer_id) DO UPDATE SET credit_score = 740, loan_amount = 23000.00, loan_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (8, 680, 13000.00, 'pending') ON CONFLICT (customer_id) DO UPDATE SET credit_score = 700, loan_amount = 15000.00, loan_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (9, 750, 26000.00, 'rejected') ON CONFLICT (customer_id) DO UPDATE SET credit_score = 770, loan_amount = 28000.00, loan_status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE loan_data (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  loan_amount DECIMAL(10,2),\n  loan_status VARCHAR(20)\n) \n\n\nCREATE TABLE financial_data (\n  customer_id INT PRIMARY KEY,\n  income DECIMAL(10,2),\n  expenses DECIMAL(10,2),\n  savings DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO loan_data (customer_id, credit_score, loan_amount, loan_status) VALUES (10, 700, 11000.00, 'approved') ON CONFLICT (customer_id) DO UPDATE SET credit_score = 720, loan_amount = 13000.00, loan_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, credit_score, income) VALUES (1, 'John Doe', 700, 50000) ON DUPLICATE KEY UPDATE customer_name = 'John Doe', credit_score = 700, income = 50000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, credit_score, income) VALUES (2, 'Jane Smith', 750, 60000) ON DUPLICATE KEY UPDATE customer_name = 'Jane Smith', credit_score = 750, income = 60000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate, loan_status) VALUES (1, 1, 10000, 5.5, 'Approved') ON DUPLICATE KEY UPDATE customer_id = 1, loan_amount = 10000, interest_rate = 5.5, loan_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate, loan_status) VALUES (2, 2, 15000, 6.2, 'Pending') ON DUPLICATE KEY UPDATE customer_id = 2, loan_amount = 15000, interest_rate = 6.2, loan_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount, transaction_type) VALUES (1, 1, '2022-01-10', 500, 'Credit') ON DUPLICATE KEY UPDATE customer_id = 1, transaction_date = '2022-01-10', transaction_amount = 500, transaction_type = 'Credit';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount, transaction_type) VALUES (2, 2, '2022-01-15', 700, 'Debit') ON DUPLICATE KEY UPDATE customer_id = 2, transaction_date = '2022-01-15', transaction_amount = 700, transaction_type = 'Debit';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, credit_score, income) VALUES (3, 'Alice Johnson', 720, 55000) ON DUPLICATE KEY UPDATE customer_name = 'Alice Johnson', credit_score = 720, income = 55000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate, loan_status) VALUES (3, 3, 20000, 7.5, 'Approved') ON DUPLICATE KEY UPDATE customer_id = 3, loan_amount = 20000, interest_rate = 7.5, loan_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount, transaction_type) VALUES (3, 3, '2022-01-20', 1000, 'Credit') ON DUPLICATE KEY UPDATE customer_id = 3, transaction_date = '2022-01-20', transaction_amount = 1000, transaction_type = 'Credit';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, credit_score, income) VALUES (4, 'Mike Brown', 680, 48000) ON DUPLICATE KEY UPDATE customer_name = 'Mike Brown', credit_score = 680, income = 48000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate, loan_status) VALUES (4, 4, 12000, 6.8, 'Pending') ON DUPLICATE KEY UPDATE customer_id = 4, loan_amount = 12000, interest_rate = 6.8, loan_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount, transaction_type) VALUES (4, 4, '2022-02-05', 800, 'Debit') ON DUPLICATE KEY UPDATE customer_id = 4, transaction_date = '2022-02-05', transaction_amount = 800, transaction_type = 'Debit';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, credit_score, income) VALUES (5, 'Sarah Wilson', 730, 62000) ON DUPLICATE KEY UPDATE customer_name = 'Sarah Wilson', credit_score = 730, income = 62000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate, loan_status) VALUES (5, 5, 18000, 6.4, 'Approved') ON DUPLICATE KEY UPDATE customer_id = 5, loan_amount = 18000, interest_rate = 6.4, loan_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount, transaction_type) VALUES (5, 5, '2022-02-10', 1200, 'Credit') ON DUPLICATE KEY UPDATE customer_id = 5, transaction_date = '2022-02-10', transaction_amount = 1200, transaction_type = 'Credit';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, credit_score, income) VALUES (6, 'Tom Wilson', 710, 55000) ON DUPLICATE KEY UPDATE customer_name = 'Tom Wilson', credit_score = 710, income = 55000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate, loan_status) VALUES (6, 6, 15000, 6.2, 'Pending') ON DUPLICATE KEY UPDATE customer_id = 6, loan_amount = 15000, interest_rate = 6.2, loan_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount, transaction_type) VALUES (6, 6, '2022-02-15', 700, 'Debit') ON DUPLICATE KEY UPDATE customer_id = 6, transaction_date = '2022-02-15', transaction_amount = 700, transaction_type = 'Debit';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, credit_score, income) VALUES (7, 'Emily Green', 740, 67000) ON DUPLICATE KEY UPDATE customer_name = 'Emily Green', credit_score = 740, income = 67000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate, loan_status) VALUES (7, 7, 20000, 7.5, 'Approved') ON DUPLICATE KEY UPDATE customer_id = 7, loan_amount = 20000, interest_rate = 7.5, loan_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount, transaction_type) VALUES (7, 7, '2022-02-20', 1500, 'Credit') ON DUPLICATE KEY UPDATE customer_id = 7, transaction_date = '2022-02-20', transaction_amount = 1500, transaction_type = 'Credit';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, credit_score, income) VALUES (1, 'Alice', 700, 50000) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice', credit_score = 700, income = 50000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, credit_score, income) VALUES (2, 'Bob', 650, 60000) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob', credit_score = 650, income = 60000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate, loan_status) VALUES (101, 1, 10000, 5.5, 'approved') ON CONFLICT (loan_id) DO UPDATE SET customer_id = 1, loan_amount = 10000, interest_rate = 5.5, loan_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate, loan_status) VALUES (102, 2, 15000, 6.0, 'pending') ON CONFLICT (loan_id) DO UPDATE SET customer_id = 2, loan_amount = 15000, interest_rate = 6.0, loan_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount, transaction_type) VALUES (1001, 1, '2022-02-01', 500, 'debit') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 1, transaction_date = '2022-02-01', transaction_amount = 500, transaction_type = 'debit';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  credit_score INT,\n  income DECIMAL\n);\n\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  interest_rate DECIMAL,\n  loan_status VARCHAR\n);\n\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT,\n  transaction_date DATE,\n  transaction_amount DECIMAL,\n  transaction_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount, transaction_type) VALUES (1002, 2, '2022-02-02', 700, 'credit') ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 2, transaction_date = '2022-02-02', transaction_amount = 700, transaction_type = 'credit';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, credit_score, annual_income) VALUES (1, 'Alice', 750, 60000) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice', credit_score = 750, annual_income = 60000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, credit_score, annual_income) VALUES (2, 'Bob', 700, 70000) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob', credit_score = 700, annual_income = 70000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, credit_score, annual_income) VALUES (3, 'Charlie', 800, 80000) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Charlie', credit_score = 800, annual_income = 80000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, credit_score, annual_income) VALUES (4, 'David', 680, 55000) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'David', credit_score = 680, annual_income = 55000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, credit_score, annual_income) VALUES (5, 'Emily', 720, 65000) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Emily', credit_score = 720, annual_income = 65000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, interest_rate, loan_term) VALUES (101, 1, 5000, 5.5, 24) ON CONFLICT (loan_id) DO UPDATE SET customer_id = 1, loan_amount = 5000, interest_rate = 5.5, loan_term = 24;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, interest_rate, loan_term) VALUES (102, 2, 8000, 6.5, 36) ON CONFLICT (loan_id) DO UPDATE SET customer_id = 2, loan_amount = 8000, interest_rate = 6.5, loan_term = 36;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, interest_rate, loan_term) VALUES (103, 3, 10000, 4.5, 48) ON CONFLICT (loan_id) DO UPDATE SET customer_id = 3, loan_amount = 10000, interest_rate = 4.5, loan_term = 48;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, interest_rate, loan_term) VALUES (104, 4, 7000, 5.0, 24) ON CONFLICT (loan_id) DO UPDATE SET customer_id = 4, loan_amount = 7000, interest_rate = 5.0, loan_term = 24;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, interest_rate, loan_term) VALUES (105, 5, 9000, 6.0, 36) ON CONFLICT (loan_id) DO UPDATE SET customer_id = 5, loan_amount = 9000, interest_rate = 6.0, loan_term = 36;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO PaymentHistory (payment_id, loan_id, payment_date, payment_amount) VALUES (201, 101, '2022-01-15', 500) ON CONFLICT (payment_id) DO UPDATE SET loan_id = 101, payment_date = '2022-01-15', payment_amount = 500;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO PaymentHistory (payment_id, loan_id, payment_date, payment_amount) VALUES (202, 102, '2022-02-15', 600) ON CONFLICT (payment_id) DO UPDATE SET loan_id = 102, payment_date = '2022-02-15', payment_amount = 600;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO PaymentHistory (payment_id, loan_id, payment_date, payment_amount) VALUES (203, 103, '2022-03-15', 700) ON CONFLICT (payment_id) DO UPDATE SET loan_id = 103, payment_date = '2022-03-15', payment_amount = 700;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO PaymentHistory (payment_id, loan_id, payment_date, payment_amount) VALUES (204, 104, '2022-04-15', 550) ON CONFLICT (payment_id) DO UPDATE SET loan_id = 104, payment_date = '2022-04-15', payment_amount = 550;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO PaymentHistory (payment_id, loan_id, payment_date, payment_amount) VALUES (205, 105, '2022-05-15', 750) ON CONFLICT (payment_id) DO UPDATE SET loan_id = 105, payment_date = '2022-05-15', payment_amount = 750;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO DefaultRisk (customer_id, risk_score, risk_category) VALUES (1, 0.75, 'Low Risk') ON CONFLICT (customer_id) DO UPDATE SET risk_score = 0.75, risk_category = 'Low Risk';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO DefaultRisk (customer_id, risk_score, risk_category) VALUES (2, 0.85, 'Medium Risk') ON CONFLICT (customer_id) DO UPDATE SET risk_score = 0.85, risk_category = 'Medium Risk';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO DefaultRisk (customer_id, risk_score, risk_category) VALUES (3, 0.70, 'Low Risk') ON CONFLICT (customer_id) DO UPDATE SET risk_score = 0.70, risk_category = 'Low Risk';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO DefaultRisk (customer_id, risk_score, risk_category) VALUES (4, 0.80, 'Medium Risk') ON CONFLICT (customer_id) DO UPDATE SET risk_score = 0.80, risk_category = 'Medium Risk';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO DefaultRisk (customer_id, risk_score, risk_category) VALUES (5, 0.65, 'Low Risk') ON CONFLICT (customer_id) DO UPDATE SET risk_score = 0.65, risk_category = 'Low Risk';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, credit_score, annual_income) VALUES (1, 'John Doe', 750, 60000) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', credit_score = 750, annual_income = 60000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, interest_rate, loan_term) VALUES (1, 1, 10000, 5.5, 12) ON CONFLICT (loan_id) DO UPDATE SET customer_id = 1, loan_amount = 10000, interest_rate = 5.5, loan_term = 12;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO PaymentHistory (payment_id, loan_id, payment_date, payment_amount) VALUES (1, 1, '2022-01-15', 1000) ON CONFLICT (payment_id) DO UPDATE SET loan_id = 1, payment_date = '2022-01-15', payment_amount = 1000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO DefaultRisk (customer_id, risk_score, risk_category) VALUES (1, 0.85, 'low') ON CONFLICT (customer_id) DO UPDATE SET risk_score = 0.85, risk_category = 'low';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, credit_score, annual_income) VALUES (2, 'Jane Smith', 800, 75000) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jane Smith', credit_score = 800, annual_income = 75000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, interest_rate, loan_term) VALUES (2, 2, 15000, 6.0, 18) ON CONFLICT (loan_id) DO UPDATE SET customer_id = 2, loan_amount = 15000, interest_rate = 6.0, loan_term = 18;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO PaymentHistory (payment_id, loan_id, payment_date, payment_amount) VALUES (2, 2, '2022-02-24', 1800) ON CONFLICT (payment_id) DO UPDATE SET loan_id = 2, payment_date = '2022-02-24', payment_amount = 1800;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO DefaultRisk (customer_id, risk_score, risk_category) VALUES (2, 0.75, 'medium') ON CONFLICT (customer_id) DO UPDATE SET risk_score = 0.75, risk_category = 'medium';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, credit_score, annual_income) VALUES (3, 'Mike Johnson', 700, 50000) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mike Johnson', credit_score = 700, annual_income = 50000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, interest_rate, loan_term) VALUES (3, 3, 12000, 5.75, 15) ON CONFLICT (loan_id) DO UPDATE SET customer_id = 3, loan_amount = 12000, interest_rate = 5.75, loan_term = 15;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO PaymentHistory (payment_id, loan_id, payment_date, payment_amount) VALUES (3, 3, '2022-03-12', 1500) ON CONFLICT (payment_id) DO UPDATE SET loan_id = 3, payment_date = '2022-03-12', payment_amount = 1500;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO DefaultRisk (customer_id, risk_score, risk_category) VALUES (3, 0.90, 'high') ON CONFLICT (customer_id) DO UPDATE SET risk_score = 0.90, risk_category = 'high';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, credit_score, annual_income) VALUES (4, 'Emily Davis', 780, 80000) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Emily Davis', credit_score = 780, annual_income = 80000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, interest_rate, loan_term) VALUES (4, 4, 20000, 4.5, 24) ON CONFLICT (loan_id) DO UPDATE SET customer_id = 4, loan_amount = 20000, interest_rate = 4.5, loan_term = 24;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO PaymentHistory (payment_id, loan_id, payment_date, payment_amount) VALUES (4, 4, '2022-04-30', 2000) ON CONFLICT (payment_id) DO UPDATE SET loan_id = 4, payment_date = '2022-04-30', payment_amount = 2000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    annual_income DECIMAL\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    interest_rate DECIMAL,\n    loan_term INT\n);\n\nCREATE TABLE PaymentHistory (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_date DATE,\n    payment_amount DECIMAL\n);\n\nCREATE TABLE DefaultRisk (\n    customer_id INT,\n    risk_score DECIMAL,\n    risk_category VARCHAR(50),\n    CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO DefaultRisk (customer_id, risk_score, risk_category) VALUES (4, 0.70, 'low') ON CONFLICT (customer_id) DO UPDATE SET risk_score = 0.70, risk_category = 'low';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Applicants (applicant_id, applicant_name, credit_score, income) VALUES (1, 'John Doe', 700, 50000);",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Applicants (applicant_id, applicant_name, credit_score, income) VALUES (2, 'Jane Smith', 650, 60000);",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Applicants (applicant_id, applicant_name, credit_score, income) VALUES (3, 'Bob Johnson', 720, 75000);",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Applicants (applicant_id, applicant_name, credit_score, income) VALUES (4, 'Alice Brown', 680, 45000);",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Applicants (applicant_id, applicant_name, credit_score, income) VALUES (5, 'David Lee', 730, 80000);",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, applicant_id, loan_amount, loan_duration, interest_rate) VALUES (1, 1, 10000.00, 12, 5.0);",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, applicant_id, loan_amount, loan_duration, interest_rate) VALUES (2, 2, 15000.00, 24, 6.5);",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, applicant_id, loan_amount, loan_duration, interest_rate) VALUES (3, 3, 20000.00, 36, 7.0);",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, applicant_id, loan_amount, loan_duration, interest_rate) VALUES (4, 4, 12000.00, 18, 6.0);",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, applicant_id, loan_amount, loan_duration, interest_rate) VALUES (5, 5, 18000.00, 30, 6.5);",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO CreditHistory (applicant_id, credit_utilization, payment_history) VALUES (1, 0.3, 'On-time payments');",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO CreditHistory (applicant_id, credit_utilization, payment_history) VALUES (2, 0.5, 'Late payments');",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO CreditHistory (applicant_id, credit_utilization, payment_history) VALUES (3, 0.2, 'No history of payments');",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO CreditHistory (applicant_id, credit_utilization, payment_history) VALUES (4, 0.4, 'Mixed payment history');",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO CreditHistory (applicant_id, credit_utilization, payment_history) VALUES (5, 0.1, 'On-time payments');",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO FinancialData (applicant_id, savings, investments) VALUES (2, 20000.00, 30000.00);",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO FinancialData (applicant_id, savings, investments) VALUES (3, 30000.00, 25000.00);",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO FinancialData (applicant_id, savings, investments) VALUES (4, 15000.00, 20000.00);",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO FinancialData (applicant_id, savings, investments) VALUES (1, 25000.00, 35000.00);",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO FinancialData (applicant_id, savings, investments) VALUES (5, 35000.00, 40000.00);",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO DefaultRisk (applicant_id, risk_score, risk_category) VALUES (1, 0.25, 'Low Risk');",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO DefaultRisk (applicant_id, risk_score, risk_category) VALUES (2, 0.50, 'Medium Risk');",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO DefaultRisk (applicant_id, risk_score, risk_category) VALUES (3, 0.20, 'Low Risk');",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO DefaultRisk (applicant_id, risk_score, risk_category) VALUES (4, 0.45, 'Medium Risk');",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO DefaultRisk (applicant_id, risk_score, risk_category) VALUES (5, 0.15, 'Low Risk');",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Applicants (applicant_id, applicant_name, credit_score, income) VALUES (1, 'Alice', 720, 50000.00)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, applicant_id, loan_amount, loan_duration, interest_rate) VALUES (101, 1, 10000.00, 24, 6.5)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO CreditHistory (applicant_id, credit_utilization, payment_history) VALUES (1, 0.3, 'On-time payments')",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO FinancialData (applicant_id, savings, investments) VALUES (1, 20000.00, 30000.00)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO DefaultRisk (applicant_id, risk_score, risk_category) VALUES (1, 0.2, 'Low risk')",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Applicants (applicant_id, applicant_name, credit_score, income) VALUES (2, 'Bob', 680, 60000.00)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, applicant_id, loan_amount, loan_duration, interest_rate) VALUES (102, 2, 15000.00, 36, 7.2)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO CreditHistory (applicant_id, credit_utilization, payment_history) VALUES (2, 0.5, 'Late payments')",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO FinancialData (applicant_id, savings, investments) VALUES (2, 25000.00, 20000.00)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO DefaultRisk (applicant_id, risk_score, risk_category) VALUES (2, 0.5, 'Medium risk')",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Applicants (applicant_id, applicant_name, credit_score, income) VALUES (3, 'Charlie', 740, 75000.00)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, applicant_id, loan_amount, loan_duration, interest_rate) VALUES (103, 3, 20000.00, 48, 8.0)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO CreditHistory (applicant_id, credit_utilization, payment_history) VALUES (3, 0.2, 'No credit history')",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO FinancialData (applicant_id, savings, investments) VALUES (3, 30000.00, 40000.00)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO DefaultRisk (applicant_id, risk_score, risk_category) VALUES (3, 0.8, 'High risk')",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Applicants (applicant_id, applicant_name, credit_score, income) VALUES (4, 'David', 700, 80000.00)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, applicant_id, loan_amount, loan_duration, interest_rate) VALUES (104, 4, 25000.00, 60, 9.0)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO CreditHistory (applicant_id, credit_utilization, payment_history) VALUES (4, 0.4, 'Some late payments')",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO FinancialData (applicant_id, savings, investments) VALUES (4, 35000.00, 45000.00)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO DefaultRisk (applicant_id, risk_score, risk_category) VALUES (4, 0.6, 'Medium risk')",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Applicants (applicant_id, applicant_name, credit_score, income) VALUES (5, 'Eve', 690, 55000.00)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, applicant_id, loan_amount, loan_duration, interest_rate) VALUES (105, 5, 18000.00, 42, 7.8)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO CreditHistory (applicant_id, credit_utilization, payment_history) VALUES (5, 0.6, 'Missed payments')",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO FinancialData (applicant_id, savings, investments) VALUES (5, 28000.00, 22000.00)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    applicant_name VARCHAR(255) NOT NULL,\n    credit_score INT NOT NULL,\n    income DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_duration INT NOT NULL,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE CreditHistory (\n    applicant_id INT PRIMARY KEY,\n    credit_utilization DECIMAL(5, 2) NOT NULL,\n    payment_history VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE FinancialData (\n    applicant_id INT PRIMARY KEY,\n    savings DECIMAL(10, 2) NOT NULL,\n    investments DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE DefaultRisk (\n    applicant_id INT PRIMARY KEY,\n    risk_score DECIMAL(5, 2) NOT NULL,\n    risk_category VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO DefaultRisk (applicant_id, risk_score, risk_category) VALUES (5, 0.7, 'High risk')"
]