[
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM ForecastingInventoryLevels",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ForecastingInventoryLevels",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity FROM ForecastingInventoryLevels",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM ForecastingInventoryLevels WHERE product_id = 1",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM ForecastingInventoryLevels WHERE quantity > 100",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM ForecastingInventoryLevels ORDER BY last_updated DESC",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM ForecastingInventoryLevels",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(quantity) FROM ForecastingInventoryLevels",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity, last_updated FROM ForecastingInventoryLevels WHERE quantity < 50",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM ForecastingInventoryLevels LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_id, product_name FROM ForecastingInventoryLevels WHERE last_updated >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ForecastingInventoryLevels WHERE product_name LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(quantity) FROM ForecastingInventoryLevels",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MIN(quantity) FROM ForecastingInventoryLevels",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM ForecastingInventoryLevels",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM ForecastingInventoryLevels WHERE product_name IS NULL",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ForecastingInventoryLevels WHERE last_updated BETWEEN '2022-01-01' AND '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_id, product_name FROM ForecastingInventoryLevels WHERE product_name = 'Sample Product'",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM ForecastingInventoryLevels WHERE last_updated > current_timestamp - INTERVAL '1 day'",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity FROM ForecastingInventoryLevels WHERE quantity BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM ForecastingInventoryLevels WHERE quantity > 100 ORDER BY last_updated DESC;",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity FROM ForecastingInventoryLevels WHERE last_updated BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS total_count FROM ForecastingInventoryLevels GROUP BY product_name HAVING quantity < 50;",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, SUM(quantity) AS total_quantity FROM ForecastingInventoryLevels WHERE last_updated >= '2022-06-01' GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_name, MIN(quantity) AS min_quantity FROM ForecastingInventoryLevels GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(quantity) AS avg_quantity FROM ForecastingInventoryLevels WHERE product_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity, last_updated FROM ForecastingInventoryLevels WHERE quantity > (SELECT AVG(quantity) FROM ForecastingInventoryLevels);",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity, last_updated FROM ForecastingInventoryLevels WHERE last_updated IN (SELECT MAX(last_updated) FROM ForecastingInventoryLevels);",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity FROM ForecastingInventoryLevels WHERE product_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_name, quantity, DATEDIFF(NOW(), last_updated) AS days_since_updated FROM ForecastingInventoryLevels;",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ForecastingInventoryLevels WHERE DATE(last_updated) = CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ForecastingInventoryLevels WHERE MONTH(last_updated) = 6;",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity FROM ForecastingInventoryLevels WHERE YEAR(last_updated) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ForecastingInventoryLevels WHERE last_updated BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity FROM ForecastingInventoryLevels WHERE quantity > 0 AND YEAR(last_updated) = YEAR(CURDATE());",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT product_id) AS total_products FROM ForecastingInventoryLevels;",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ForecastingInventoryLevels WHERE product_id IN (SELECT product_id FROM OtherTable WHERE condition = 'value');",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ForecastingInventoryLevels WHERE product_id NOT IN (SELECT product_id FROM ExcludedProductsTable);",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ForecastingInventoryLevels WHERE quantity BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE ForecastingInventoryLevels (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  quantity INT,\n  last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_id, COUNT(*) AS total_rows FROM ForecastingInventoryLevels GROUP BY product_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory_levels;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT product_id, quantity FROM inventory_levels;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory_levels WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT product_id, forecast_date FROM inventory_levels WHERE forecast_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) AS total_quantity FROM inventory_levels;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT * FROM supply_chain;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, product_id, quantity_delivered FROM supply_chain WHERE delivery_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, delivery_date FROM supply_chain WHERE product_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT MAX(quantity_delivered) AS max_delivery FROM supply_chain;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, COUNT(*) AS total_orders FROM supply_chain GROUP BY supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, SUM(quantity_delivered) AS total_quantity_delivered FROM supply_chain GROUP BY supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT inventory_levels.product_id, SUM(quantity_delivered) AS total_quantity_delivered FROM supply_chain INNER JOIN inventory_levels ON supply_chain.product_id = inventory_levels.product_id GROUP BY inventory_levels.product_id;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, product_id, quantity_delivered FROM supply_chain ORDER BY quantity_delivered DESC;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT supplier_id FROM supply_chain;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, product_id, quantity_delivered FROM supply_chain WHERE supplier_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, product_id, quantity_delivered FROM supply_chain WHERE supplier_id NOT IN (4, 5);",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, AVG(quantity_delivered) AS avg_quantity FROM supply_chain GROUP BY supplier_id HAVING AVG(quantity_delivered) > 50;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, product_id, SUM(quantity_delivered) AS total_delivered FROM supply_chain GROUP BY supplier_id, product_id;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, product_id, delivery_date, quantity_delivered FROM supply_chain LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory_levels WHERE quantity > 100",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity) FROM inventory_levels GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT * FROM supply_chain WHERE delivery_date BETWEEN '2022-01-01' AND '2022-02-01'",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, COUNT(DISTINCT product_id) FROM supply_chain GROUP BY supplier_id",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM inventory_levels JOIN supply_chain ON inventory_levels.product_id = supply_chain.product_id",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT supplier_id FROM supply_chain WHERE quantity_delivered > 50",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT product_id, AVG(quantity) FROM inventory_levels WHERE forecast_date < '2022-03-01' GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, MAX(delivery_date) FROM supply_chain GROUP BY supplier_id",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT product_id, MAX(quantity) FROM inventory_levels GROUP BY product_id HAVING MAX(quantity) > 200",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, AVG(quantity_delivered) FROM supply_chain GROUP BY supplier_id HAVING AVG(quantity_delivered) > 30",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity_delivered) FROM supply_chain GROUP BY product_id HAVING SUM(quantity_delivered) > 100",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, delivery_date, quantity_delivered FROM supply_chain ORDER BY supplier_id, delivery_date DESC",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT product_id, quantity FROM inventory_levels UNION SELECT product_id, quantity_delivered FROM supply_chain",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory_levels WHERE product_id IN (SELECT product_id FROM supply_chain)",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, product_id, delivery_date FROM supply_chain WHERE product_id NOT IN (SELECT product_id FROM inventory_levels)",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, SUM(quantity_delivered) AS total_quantity FROM supply_chain GROUP BY supplier_id ORDER BY total_quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, COUNT(*) AS total_orders FROM supply_chain GROUP BY supplier_id ORDER BY total_orders DESC",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory_levels WHERE forecast_date > (SELECT MIN(delivery_date) FROM supply_chain)",
  "### TABLEDATA\n\nCREATE TABLE inventory_levels (\n    product_id INT,\n    quantity INT,\n    forecast_date DATE\n);\n\nCREATE TABLE supply_chain (\n    supplier_id INT,\n    product_id INT,\n    delivery_date DATE,\n    quantity_delivered INT\n);\n\n### STATEMENT\n\nSELECT supplier_id, AVG(quantity_delivered) FROM supply_chain WHERE delivery_date > '2022-03-01' GROUP BY supplier_id HAVING AVG(quantity_delivered) > 20",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT * FROM InventoryForecast;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT ProductID, ProductName FROM InventoryForecast;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT ForecastDate, ForecastQuantity FROM InventoryForecast;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT * FROM InventoryLevels;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT ProductID, ProductName FROM InventoryLevels;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT CurrentQuantity, ReorderLevel FROM InventoryLevels;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT * FROM SupplyChainManagement;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT SupplierID, SupplierName FROM SupplyChainManagement;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT ProductID, DeliveryDate FROM SupplyChainManagement;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT InventoryForecast.ProductID, InventoryLevels.CurrentQuantity FROM InventoryForecast JOIN InventoryLevels ON InventoryForecast.ProductID = InventoryLevels.ProductID;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT InventoryForecast.ForecastDate, SupplyChainManagement.DeliveryDate FROM InventoryForecast JOIN SupplyChainManagement ON InventoryForecast.ProductID = SupplyChainManagement.ProductID;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT InventoryLevels.ProductName, SupplyChainManagement.SupplierName FROM InventoryLevels JOIN SupplyChainManagement ON InventoryLevels.ProductID = SupplyChainManagement.ProductID;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT * FROM InventoryForecast WHERE ProductID = 1;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT * FROM InventoryLevels WHERE CurrentQuantity < ReorderLevel;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT * FROM SupplyChainManagement WHERE DeliveryDate > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT InventoryForecast.ProductID, InventoryLevels.CurrentQuantity FROM InventoryForecast JOIN InventoryLevels ON InventoryForecast.ProductID = InventoryLevels.ProductID WHERE InventoryLevels.CurrentQuantity < 50;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT InventoryLevels.ProductName, SupplyChainManagement.SupplierName FROM InventoryLevels JOIN SupplyChainManagement ON InventoryLevels.ProductID = SupplyChainManagement.ProductID WHERE SupplyChainManagement.SupplierID = 1;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT SUM(ForecastQuantity) FROM InventoryForecast;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT AVG(CurrentQuantity) FROM InventoryLevels;",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM SupplyChainManagement WHERE DeliveryDate < '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT * FROM InventoryForecast WHERE ForecastDate BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT ProductName, ForecastQuantity FROM InventoryForecast WHERE ForecastQuantity > 1000",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT ProductName, CurrentQuantity FROM InventoryLevels WHERE CurrentQuantity < ReorderLevel",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT i.ProductName, s.SupplierName FROM InventoryLevels i JOIN SupplyChainManagement s ON i.ProductID = s.ProductID",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT ProductName, CurrentQuantity, DeliveryDate FROM InventoryLevels l JOIN SupplyChainManagement s ON l.ProductID = s.ProductID",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT ProductName, ForecastQuantity, DeliveryDate FROM InventoryForecast f JOIN SupplyChainManagement s ON f.ProductID = s.ProductID",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT i.ProductName, l.CurrentQuantity, s.SupplierName FROM InventoryLevels l JOIN SupplyChainManagement s ON l.ProductID = s.ProductID JOIN InventoryForecast f ON s.ProductID = f.ProductID",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS TotalForecasts FROM InventoryForecast",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT AVG(CurrentQuantity) AS AvgQuantity FROM InventoryLevels",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT MAX(ForecastQuantity) AS MaxForecast FROM InventoryForecast",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT MIN(ReorderLevel) AS MinReorderLevel FROM InventoryLevels",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT ProductName, SUM(ForecastQuantity) AS TotalForecast FROM InventoryForecast GROUP BY ProductName",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT ProductName, COUNT(*) AS TotalDeliveries FROM SupplyChainManagement GROUP BY ProductName",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT SupplierName, COUNT(DISTINCT ProductID) AS UniqueProducts FROM SupplyChainManagement GROUP BY SupplierName",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT ProductName, COUNT(*) AS TotalForecasts FROM InventoryForecast WHERE ForecastQuantity > 1000 GROUP BY ProductName",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT SupplierName, AVG(CurrentQuantity) AS AvgQuantity FROM InventoryLevels l JOIN SupplyChainManagement s ON l.ProductID = s.ProductID GROUP BY SupplierName",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT ForecastDate, SUM(ForecastQuantity) AS TotalForecast FROM InventoryForecast GROUP BY ForecastDate",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT ProductName, DeliveryDate, SUM(ForecastQuantity) AS TotalForecast FROM InventoryForecast f JOIN SupplyChainManagement s ON f.ProductID = s.ProductID GROUP BY ProductName, DeliveryDate",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT SupplierName, DeliveryDate, SUM(ForecastQuantity) AS TotalForecast FROM InventoryForecast f JOIN SupplyChainManagement s ON f.ProductID = s.ProductID GROUP BY SupplierName, DeliveryDate",
  "### TABLEDATA\n\nCREATE TABLE InventoryForecast (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    ForecastDate DATE,\n    ForecastQuantity INT\n);\n\nCREATE TABLE InventoryLevels (\n    ProductID INT PRIMARY KEY,\n    ProductName VARCHAR(255),\n    CurrentQuantity INT,\n    ReorderLevel INT\n);\n\nCREATE TABLE SupplyChainManagement (\n    SupplierID INT PRIMARY KEY,\n    SupplierName VARCHAR(255),\n    ProductID INT,\n    DeliveryDate DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT ProductName FROM InventoryForecast ORDER BY ProductName ASC",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM forecasted_demand;",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, forecasted_quantity, forecasted_date FROM forecasted_demand;",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT forecasted_date, forecasted_quantity FROM forecasted_demand WHERE forecasted_quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, forecasted_quantity FROM forecasted_demand WHERE forecasted_date = '2023-06-30';",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM current_inventory;",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, in_stock_quantity, last_updated FROM current_inventory;",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, in_stock_quantity FROM current_inventory WHERE in_stock_quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, last_updated FROM current_inventory WHERE last_updated >= '2023-07-15';",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_id, supplier_name, supplier_email FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_id, supplier_phone FROM suppliers WHERE supplier_name = 'Supplier A';",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT order_id, product_id, order_quantity, order_date FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT order_id, order_date FROM orders WHERE order_quantity > 50;",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, order_quantity FROM orders WHERE order_date = '2023-08-15';",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM forecasted_demand WHERE forecasted_quantity > 100",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, forecasted_quantity, forecasted_date FROM forecasted_demand WHERE forecasted_quantity < 50",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_email FROM suppliers",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, in_stock_quantity FROM current_inventory WHERE in_stock_quantity = 0",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM orders WHERE order_date BETWEEN '2023-01-01' AND '2023-12-31'",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT forecasted_date, SUM(forecasted_quantity) AS total_forecast FROM forecasted_demand GROUP BY forecasted_date",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, SUM(order_quantity) AS total_orders FROM suppliers INNER JOIN orders ON suppliers.supplier_id = orders.product_id GROUP BY supplier_name",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT forecasted_demand.product_id, forecasted_quantity, in_stock_quantity FROM forecasted_demand LEFT JOIN current_inventory ON forecasted_demand.product_id = current_inventory.product_id",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT suppliers.supplier_name, SUM(order_quantity) AS total_orders FROM suppliers LEFT JOIN orders ON suppliers.supplier_id = orders.product_id GROUP BY suppliers.supplier_name",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, in_stock_quantity FROM current_inventory WHERE product_id IN (SELECT product_id FROM forecasted_demand WHERE forecasted_quantity < 50)",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name AS Supplier, forecasted_quantity FROM suppliers INNER JOIN forecasted_demand ON suppliers.supplier_id = forecasted_demand.product_id",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_email FROM suppliers WHERE supplier_name LIKE '%Co%'",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_id FROM current_inventory",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(*) AS total_orders FROM suppliers INNER JOIN orders ON suppliers.supplier_id = orders.product_id GROUP BY supplier_name HAVING total_orders > 10",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, MAX(in_stock_quantity) AS max_quantity FROM current_inventory GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, MAX(order_quantity) AS max_order FROM suppliers INNER JOIN orders ON suppliers.supplier_id = orders.product_id GROUP BY supplier_name",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, AVG(order_quantity) AS avg_order FROM suppliers INNER JOIN orders ON suppliers.supplier_id = orders.product_id GROUP BY supplier_name",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(order_quantity) AS avg_order FROM orders WHERE order_date BETWEEN '2023-01-01' AND '2023-12-31'",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, SUM(order_quantity) AS total_orders FROM suppliers INNER JOIN orders ON suppliers.supplier_id = orders.product_id WHERE order_quantity > 100 GROUP BY supplier_name",
  "### TABLEDATA\n\nCREATE TABLE forecasted_demand (\n    product_id INT PRIMARY KEY,\n    forecasted_quantity INT,\n    forecasted_date DATE\n);\n\n\nCREATE TABLE current_inventory (\n    product_id INT PRIMARY KEY,\n    in_stock_quantity INT,\n    last_updated TIMESTAMP\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    supplier_email VARCHAR(255),\n    supplier_phone VARCHAR(20)\n);\n\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_quantity INT,\n    order_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(DISTINCT product_id) AS unique_products FROM suppliers INNER JOIN orders ON suppliers.supplier_id = orders.product_id GROUP BY supplier_name",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT * FROM Forecast;",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT id, product_name, forecasted_quantity FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT warehouse_name, location FROM Warehouse;",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT * FROM Supplier WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT id, product_id, shipment_date FROM Shipment WHERE warehouse_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM Inventory WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT id, supplier_name, contact_info FROM Supplier;",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT * FROM Warehouse WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT * FROM Forecast WHERE date = '2022-08-15';",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE product_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT id, warehouse_id, shipment_date FROM Shipment WHERE supplier_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT warehouse_name, location FROM Warehouse WHERE location = 'Los Angeles';",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT * FROM Supplier WHERE contact_info LIKE '%email%';",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT product_name, forecasted_quantity FROM Forecast WHERE forecasted_quantity < 50;",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT supplier_name, contact_info FROM Supplier WHERE supplier_name = 'Supplier A';",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT id, warehouse_id, shipment_date FROM Shipment WHERE product_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT * FROM Warehouse WHERE location IN ('London', 'Paris');",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT * FROM Forecast WHERE date BETWEEN '2022-09-01' AND '2022-09-15';",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT id, product_name, quantity FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT f.product_name, f.forecasted_quantity, f.date, i.quantity, w.warehouse_name, w.location, s.supplier_name, s.contact_info, sh.shipment_date FROM Forecast f JOIN Inventory i ON f.product_name = i.product_name JOIN Warehouse w ON i.quantity > 10 AND w.warehouse_name = 'Warehouse A' JOIN Supplier s ON s.supplier_name = 'Supplier X' JOIN Shipment sh ON f.id = sh.product_id AND w.id = sh.warehouse_id AND s.id = sh.supplier_id WHERE f.forecasted_quantity > 100",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT f.product_name, SUM(f.forecasted_quantity) AS total_forecasted_quantity FROM Forecast f GROUP BY f.product_name HAVING total_forecasted_quantity > 500",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT f.product_name, COUNT(DISTINCT s.supplier_name) AS total_suppliers FROM Forecast f JOIN Shipment sh ON f.id = sh.product_id JOIN Supplier s ON sh.supplier_id = s.id GROUP BY f.product_name HAVING total_suppliers > 3",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT f.product_name, AVG(f.forecasted_quantity) AS avg_forecasted_quantity FROM Forecast f GROUP BY f.product_name ORDER BY avg_forecasted_quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_shipments FROM Shipment WHERE shipment_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT f.product_name, SUM(i.quantity) AS total_inventory FROM Forecast f JOIN Inventory i ON f.product_name = i.product_name GROUP BY f.product_name HAVING total_inventory < 50",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT w.warehouse_name, COUNT(*) AS total_shipments FROM Warehouse w JOIN Shipment sh ON w.id = sh.warehouse_id GROUP BY w.warehouse_name ORDER BY total_shipments DESC",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT s.supplier_name, COUNT(*) AS total_shipments FROM Supplier s JOIN Shipment sh ON s.id = sh.supplier_id GROUP BY s.supplier_name ORDER BY total_shipments DESC",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT f.product_name, s.supplier_name, COUNT(*) AS total_shipments FROM Forecast f JOIN Shipment sh ON f.id = sh.product_id JOIN Supplier s ON sh.supplier_id = s.id GROUP BY f.product_name, s.supplier_name ORDER BY total_shipments DESC",
  "### TABLEDATA\n\nCREATE TABLE Forecast (id INT PRIMARY KEY,\n product_name STRING,\n forecasted_quantity INT,\n date DATE);\n\n\nCREATE TABLE Inventory (id INT PRIMARY KEY,\n product_name STRING,\n quantity INT);\n\n\nCREATE TABLE Warehouse (id INT PRIMARY KEY,\n warehouse_name STRING,\n location STRING);\n\n\nCREATE TABLE Supplier (id INT PRIMARY KEY,\n supplier_name STRING,\n contact_info STRING);\n\n\nCREATE TABLE Shipment (id INT PRIMARY KEY,\n product_id INT,\n warehouse_id INT,\n supplier_id INT,\n shipment_date DATE);\n\n### STATEMENT\n\nSELECT f.product_name, f.forecasted_quantity, i.quantity, w.warehouse_name, s.supplier_name, sh.shipment_date FROM Forecast f JOIN Inventory i ON f.product_name = i.product_name JOIN Warehouse w ON f.id = w.id JOIN Supplier s ON f.id = s.id JOIN Shipment sh ON f.id = sh.product_id AND w.id = sh.warehouse_id AND s.id = sh.supplier_id WHERE f.forecasted_quantity > i.quantity"
]