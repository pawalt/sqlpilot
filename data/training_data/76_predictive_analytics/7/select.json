[
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT * FROM social_media_data;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT id, username FROM social_media_data;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT post, likes FROM social_media_data;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT comments, sentiment_score FROM social_media_data;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT * FROM social_media_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT username, post FROM social_media_data WHERE likes > 100;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT id, likes FROM social_media_data WHERE sentiment_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT * FROM social_media_data WHERE comments < 10;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT id, username, likes FROM social_media_data WHERE sentiment_score < 0.2;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT * FROM social_media_data WHERE username = 'user123';",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT id, post FROM social_media_data WHERE likes < 50;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT username, likes FROM social_media_data WHERE sentiment_score < -0.5;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT * FROM social_media_data WHERE comments = 0;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT id, likes FROM social_media_data WHERE sentiment_score = 0;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT username, comments FROM social_media_data WHERE likes > 500;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT * FROM social_media_data WHERE sentiment_score BETWEEN 0.2 AND 0.5;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT id, post FROM social_media_data WHERE likes BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT username, sentiment_score FROM social_media_data WHERE comments > 20;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT * FROM social_media_data WHERE username LIKE '%user%';",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT id, username, likes FROM social_media_data WHERE sentiment_score <= -0.2;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT * FROM social_media_data WHERE likes > 100;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT username, post FROM social_media_data WHERE comments > 50;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT username, post, likes, comments FROM social_media_data WHERE sentiment_score > 0.7;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT id, username, likes FROM social_media_data WHERE post LIKE '%great%';",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT MAX(likes) AS max_likes FROM social_media_data;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT MIN(likes) AS min_likes FROM social_media_data;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT AVG(likes) AS avg_likes FROM social_media_data WHERE sentiment_score < 0.5;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT username, COUNT(*) AS total_posts FROM social_media_data GROUP BY username;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT DISTINCT username FROM social_media_data;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM social_media_data WHERE likes > 50 AND comments > 20;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT username, AVG(sentiment_score) AS avg_sentiment FROM social_media_data GROUP BY username;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT id, username, comments FROM social_media_data ORDER BY comments DESC;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT id, username, sentiment_score FROM social_media_data WHERE sentiment_score BETWEEN 0.4 AND 0.6;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT username, SUM(likes) AS total_likes FROM social_media_data GROUP BY username HAVING total_likes > 500;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT DISTINCT username, COUNT(DISTINCT post) AS unique_posts FROM social_media_data GROUP BY username;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT username, AVG(likes) AS avg_likes, AVG(comments) AS avg_comments FROM social_media_data GROUP BY username HAVING avg_likes > 50;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT id, username, post FROM social_media_data WHERE LENGTH(post) > 100;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT id, username, post, comments FROM social_media_data WHERE post IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT id, username, post, likes, comments, sentiment_score FROM social_media_data WHERE sentiment_score >= 0.5 AND likes < 100;",
  "### TABLEDATA\n\nCREATE TABLE social_media_data ( \n  id INT PRIMARY KEY, \n  username VARCHAR(255), \n  post TEXT, \n  likes INT, \n  comments INT, \n  sentiment_score FLOAT \n);\n\n### STATEMENT\n\nSELECT username, SUM(likes) AS total_likes, SUM(comments) AS total_comments FROM social_media_data GROUP BY username HAVING total_likes > 200 AND total_comments > 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_sentiments;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, sentiment_score FROM customer_sentiments;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM social_media_posts;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT post_id, post_content FROM social_media_posts;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT post_date, likes_count FROM social_media_posts;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id FROM customer_sentiments WHERE sentiment_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT post_id FROM social_media_posts ORDER BY post_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(sentiment_score) AS max_score FROM customer_sentiments GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(sentiment_score) AS avg_score FROM customer_sentiments GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_posts FROM social_media_posts;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT COUNT(customer_id) AS total_customers FROM customer_sentiments;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_posts FROM social_media_posts GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(sentiment_score) AS total_score FROM customer_sentiments GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_sentiments WHERE customer_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT MIN(sentiment_score) AS min_score FROM customer_sentiments;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM social_media_posts WHERE post_id = 200;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_likes FROM social_media_posts WHERE likes_count > 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT AVG(sentiment_score) AS avg_score FROM customer_sentiments WHERE sentiment_score < 0.5;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_likes FROM social_media_posts WHERE likes_count > 50 GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM social_media_posts WHERE post_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, sentiment_score FROM customer_sentiments WHERE sentiment_score > 0.5",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT post_id, post_content, post_date FROM social_media_posts WHERE likes_count > 100",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_sentiments WHERE sentiment_score < 0",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, sentiment_score FROM customer_sentiments WHERE sentiment_score BETWEEN 0.3 AND 0.7",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT post_id, post_content, post_date, likes_count FROM social_media_posts WHERE post_date >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(sentiment_score) AS avg_score FROM customer_sentiments GROUP BY customer_id HAVING AVG(sentiment_score) > 0.6",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT post_id, COUNT(*) AS total_likes FROM social_media_posts GROUP BY post_id HAVING COUNT(*) > 10",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(sentiment_score) AS max_score FROM customer_sentiments GROUP BY customer_id ORDER BY max_score DESC",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiments (\n    customer_id INT PRIMARY KEY,\n    sentiment_score FLOAT\n);\n\nCREATE TABLE social_media_posts (\n    post_id INT PRIMARY KEY,\n    post_content TEXT,\n    post_date DATE,\n    likes_count INT\n);\n\n### STATEMENT\n\nSELECT post_id, post_content, likes_count FROM social_media_...",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customers",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, sentiment_score FROM customers WHERE sentiment_score > 0.5",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM posts",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT post_id, post_content, post_date FROM posts",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT post_id, customer_id FROM posts WHERE customer_id = 123",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM comments",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT comment_id, comment_content FROM comments",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT post_id, customer_id FROM comments WHERE post_id = 456",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, post_content, comment_content FROM customers c JOIN posts p ON c.customer_id = p.customer_id JOIN comments m ON c.customer_id = m.customer_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT c.customer_name, p.post_date, m.comment_date FROM customers c JOIN posts p ON c.customer_id = p.customer_id JOIN comments m ON p.post_id = m.post_id WHERE c.customer_id = 123",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT c.customer_name, p.post_content, c.sentiment_score FROM customers c JOIN posts p ON c.customer_id = p.customer_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT c.customer_name, p.post_content, m.comment_content FROM customers c JOIN posts p ON c.customer_id = p.customer_id JOIN comments m ON p.post_id = m.post_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(p.post_id) AS num_posts FROM customers c LEFT JOIN posts p ON c.customer_id = p.customer_id GROUP BY c.customer_name",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(c.sentiment_score) AS total_sentiment FROM customers c GROUP BY c.customer_name",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT c.customer_name, AVG(c.sentiment_score) AS avg_sentiment FROM customers c GROUP BY c.customer_name",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT c.customer_name, MAX(p.post_date) AS latest_post_date FROM customers c JOIN posts p ON c.customer_id = p.customer_id GROUP BY c.customer_name",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT c.customer_name, MIN(p.post_date) AS earliest_post_date FROM customers c JOIN posts p ON c.customer_id = p.customer_id GROUP BY c.customer_name",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(m.comment_id) AS num_comments FROM customers c JOIN comments m ON c.customer_id = m.customer_id GROUP BY c.customer_name",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT c.customer_name, MAX(m.comment_date) AS latest_comment_date FROM customers c JOIN comments m ON c.customer_id = m.customer_id GROUP BY c.customer_name",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, sentiment_score FROM customers WHERE sentiment_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, SUM(sentiment_score) AS total_sentiment FROM customers GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM posts INNER JOIN customers ON posts.customer_id = customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, post_content FROM customers JOIN posts ON customers.customer_id = posts.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, comment_content FROM customers JOIN posts ON customers.customer_id = posts.customer_id JOIN comments ON posts.post_id = comments.post_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(post_id) AS total_posts FROM customers LEFT JOIN posts ON customers.customer_id = posts.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(comment_id) AS total_comments FROM customers LEFT JOIN comments ON customers.customer_id = comments.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, AVG(sentiment_score) AS average_score FROM customers WHERE sentiment_score IS NOT NULL GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(comment_id) AS total_comments FROM customers LEFT JOIN comments ON customers.customer_id = comments.customer_id WHERE comments.comment_date > '2021-01-01' GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, post_content, post_date FROM customers JOIN posts ON customers.customer_id = posts.customer_id WHERE posts.post_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(comment_id) AS total_comments FROM customers LEFT JOIN comments ON customers.customer_id = comments.customer_id HAVING total_comments > 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, AVG(sentiment_score) AS average_score FROM customers WHERE sentiment_score > 0.3 GROUP BY customer_name HAVING COUNT(post_id) > 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, MAX(sentiment_score) AS highest_score FROM customers GROUP BY customer_name ORDER BY highest_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, post_content, post_date FROM customers JOIN posts ON customers.customer_id = posts.customer_id WHERE post_content LIKE '%exciting%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, post_content, post_date FROM customers JOIN posts ON customers.customer_id = posts.customer_id WHERE post_content LIKE '%happy%' OR post_content LIKE '%joy%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(comment_id) AS total_comments FROM customers LEFT JOIN comments ON customers.customer_id = comments.customer_id GROUP BY customer_name HAVING total_comments < 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, SUM(sentiment_score) AS total_sentiment FROM customers INNER JOIN posts ON customers.customer_id = posts.customer_id INNER JOIN comments ON posts.post_id = comments.post_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, AVG(sentiment_score) AS average_score FROM customers JOIN posts ON customers.customer_id = posts.customer_id WHERE TIMESTAMPDIFF(DAY, posts.post_date, CURDATE()) <= 7 GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  sentiment_score FLOAT\n)\n\nCREATE TABLE posts (\n  post_id INT PRIMARY KEY,\n  customer_id INT,\n  post_content TEXT,\n  post_date DATE\n)\n\nCREATE TABLE comments (\n  comment_id INT PRIMARY KEY,\n  post_id INT,\n  customer_id INT,\n  comment_content TEXT,\n  comment_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, post_content, COUNT(comment_id) AS total_comments FROM customers JOIN posts ON customers.customer_id = posts.customer_id LEFT JOIN comments ON posts.post_id = comments.post_id GROUP BY post_content HAVING total_comments > 2;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_sentiment_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, customer_id, post_content FROM customer_sentiment_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, sentiment_label FROM customer_sentiment_data WHERE sentiment_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, name, email FROM customer_profiles WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM post_likes;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT post_id, customer_id FROM post_likes WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM post_comments;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT post_id, comment, date_posted FROM post_comments WHERE post_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_sentiment_data JOIN customer_profiles ON customer_sentiment_data.customer_id = customer_profiles.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_sentiment_data LEFT JOIN customer_profiles ON customer_sentiment_data.customer_id = customer_profiles.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_sentiment_data RIGHT JOIN customer_profiles ON customer_sentiment_data.customer_id = customer_profiles.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles JOIN post_comments ON customer_profiles.customer_id = post_comments.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM post_likes JOIN post_comments ON post_likes.post_id = post_comments.post_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_sentiment_data WHERE sentiment_label = 'Positive';",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer_profiles WHERE location LIKE 'California%';",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM post_likes WHERE customer_id IN (SELECT customer_id FROM customer_profiles WHERE location = 'Florida');",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT post_id, COUNT(comment) AS num_comments FROM post_comments GROUP BY post_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(sentiment_score) AS avg_score FROM customer_sentiment_data GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_posts FROM customer_sentiment_data GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, customer_id, post_content, sentiment_score FROM customer_sentiment_data WHERE sentiment_label = 'positive';",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email, location FROM customer_profiles WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, post_id, customer_id FROM post_likes WHERE customer_id = 12345;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, customer_id, comment, date_posted FROM post_comments WHERE post_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, post_content, sentiment_score, sentiment_label FROM customer_sentiment_data WHERE sentiment_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, name, email FROM customer_profiles WHERE name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, customer_id, sentiment_score FROM customer_sentiment_data WHERE sentiment_label = 'negative';",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, customer_id, post_content, sentiment_score FROM customer_sentiment_data WHERE sentiment_label = 'neutral';",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, post_id, customer_id FROM post_likes WHERE post_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, post_id, customer_id FROM post_likes WHERE post_id IN (SELECT id FROM customer_sentiment_data WHERE sentiment_label = 'positive');",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, customer_id, location FROM customer_profiles WHERE id = 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, customer_id, post_content, sentiment_score FROM customer_sentiment_data WHERE sentiment_score > 0.7;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, name, email, location FROM customer_profiles WHERE location = 'California';",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, post_id, customer_id FROM post_likes WHERE customer_id IN (SELECT customer_id FROM customer_profiles WHERE location = 'New York');",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, customer_id, comment, date_posted FROM post_comments WHERE customer_id = 54321;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, customer_id, post_content, sentiment_score FROM customer_sentiment_data WHERE sentiment_label = 'positive' AND sentiment_score > 0.6;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, name, email FROM customer_profiles WHERE id = 200;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, post_id, customer_id FROM post_likes WHERE post_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, customer_id, post_content, sentiment_score FROM customer_sentiment_data WHERE customer_id = 12345;",
  "### TABLEDATA\n\nCREATE TABLE customer_sentiment_data (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    post_content TEXT,\n    sentiment_score FLOAT,\n    sentiment_label VARCHAR(10)\n);\n\nCREATE TABLE customer_profiles (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    location VARCHAR(100)\n);\n\nCREATE TABLE post_likes (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT\n);\n\nCREATE TABLE post_comments (\n    id INT PRIMARY KEY,\n    post_id INT,\n    customer_id INT,\n    comment TEXT,\n    date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, customer_id, sentiment_score FROM customer_sentiment_data WHERE sentiment_label = 'negative';",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM sentiment_analysis;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT post FROM sentiment_analysis;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, post FROM sentiment_analysis;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM user_profile;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_profile;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM post_likes;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, post_id FROM post_likes;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM post_comments;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT post_id, comment FROM post_comments;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM sentiment_statistics;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT date, overall_sentiment_score FROM sentiment_statistics;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, post_id, comment FROM post_comments WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM sentiment_analysis WHERE sentiment_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT post FROM sentiment_analysis WHERE sentiment_score < 0.0;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM user_profile WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT post_id, user_id FROM post_likes WHERE post_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM sentiment_statistics WHERE overall_sentiment_score BETWEEN 0.2 AND 0.8;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM user_profile WHERE email LIKE '%gmail.com%';",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT post_id, user_id FROM post_comments WHERE comment LIKE '%great%';",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM sentiment_analysis ORDER BY sentiment_score DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM sentiment_analysis;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, post FROM sentiment_analysis WHERE sentiment_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT post_id, user_id FROM post_likes WHERE user_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT post_id, user_id, comment FROM post_comments WHERE user_id = 200;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, user_id, post, sentiment_score FROM sentiment_analysis WHERE user_id = 300;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, username, location FROM user_profile WHERE email = 'example@example.com';",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT id, date, overall_sentiment_score FROM sentiment_statistics WHERE date = CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(post_id) AS total_posts FROM post_likes GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(sentiment_score) AS avg_sentiment FROM sentiment_analysis GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(sentiment_score) AS max_sentiment FROM sentiment_analysis GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(sentiment_score) AS min_sentiment FROM sentiment_analysis GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, location, COUNT(DISTINCT post_id) AS unique_posts FROM user_profile JOIN sentiment_analysis ON user_profile.user_id = sentiment_analysis.user_id GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, username, email, location, SUM(sentiment_score) AS total_sentiment FROM user_profile JOIN sentiment_analysis ON user_profile.user_id = sentiment_analysis.user_id GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT post_id, COUNT(user_id) AS total_likes FROM post_likes GROUP BY post_id HAVING total_likes > 10;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(id) AS total_comments FROM post_comments GROUP BY user_id ORDER BY total_comments DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(overall_sentiment_score) AS avg_overall_sentiment FROM sentiment_statistics GROUP BY user_id HAVING avg_overall_sentiment > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, location, COUNT(post_id) AS total_posts FROM user_profile JOIN sentiment_analysis ON user_profile.user_id = sentiment_analysis.user_id JOIN post_likes ON sentiment_analysis.user_id = post_likes.user_id GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT u.username, COUNT(c.id) AS total_comments FROM user_profile u JOIN post_comments c ON u.user_id = c.user_id GROUP BY u.username ORDER BY total_comments DESC;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT s.date, SUM(s.overall_sentiment_score) AS total_sentiment FROM sentiment_statistics s JOIN sentiment_analysis a ON s.date = CURDATE() GROUP BY s.date;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT p.post, COUNT(l.user_id) AS total_likes FROM sentiment_analysis p JOIN post_likes l ON p.id = l.post_id GROUP BY p.post ORDER BY total_likes DESC;",
  "### TABLEDATA\n\nCREATE TABLE sentiment_analysis (\n  id INT PRIMARY KEY,\n  user_id INT,\n  post TEXT,\n  sentiment_score DECIMAL\n);\n\n\nCREATE TABLE user_profile (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(50),\n  location VARCHAR(100)\n);\n\n\nCREATE TABLE post_likes (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT\n);\n\n\nCREATE TABLE post_comments (\n  id INT PRIMARY KEY,\n  post_id INT,\n  user_id INT,\n  comment TEXT\n);\n\n\nCREATE TABLE sentiment_statistics (\n  id INT PRIMARY KEY,\n  date DATE,\n  overall_sentiment_score DECIMAL\n);\n\n### STATEMENT\n\nSELECT u.location, COUNT(a.id) AS total_posts FROM user_profile u JOIN sentiment_analysis a ON u.user_id = a.user_id GROUP BY u.location ORDER BY total_posts DESC;"
]